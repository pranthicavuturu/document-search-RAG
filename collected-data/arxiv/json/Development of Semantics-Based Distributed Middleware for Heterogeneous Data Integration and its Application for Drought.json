{
    "title": "Development of Semantics-Based Distributed Middleware for Heterogeneous Data Integration and its Application for Drought",
    "context": "",
    "body": "Development of Semantics-Based Distributed \nMiddleware for Heterogeneous Data \nIntegration and its Application for Drought \n \nby \n \nADEYINKA KABIR AKANBI \n \nSubmitted in fulfilment of the requirements for the degree \nDOCTOR OF PHILOSOPHY \nIN INFORMATION TECHNOLOGY \n \nIn the \nFaculty of Engineering, Built Environment and Information \nTechnology: \nDepartment of Information Technology \n \nCentral University of Technology, Free State \nPromoter: Prof. Muthoni Masinde \nCo-Promoter: Prof. Yali Woyessa \n2020 \n \n\nii \n \nCopyright Notice \nThis doctoral thesis is to be used for only academic or non-commercial research \npurposes. The information contained in this thesis is to be published with \nacknowledgement of the source. \nThis doctoral thesis is published by the Central University of Technology, Free \nState, in terms of a non-exclusive licence granted to CUT by the author. \n \n \n\niii \n \nDisclaimer \nThe presentation of this thesis contains colour images meant to present the results \nvisually in a more understandable form. While printing or viewing the thesis in \ngreyscale (black and white) is possible, it is recommended that for clarity, the \nthesis is viewed (or printed) in full-colour format. \n \n \n \n\niv \n \nDedication \nThis thesis is dedicated to all my family members for their kind support and to my \nunborn children. \n \n \n \n\nv \n \nDeclaration \nThis research as presented in this thesis is my original work and has not been \npresented for any other university award. Knowledge derived from other sources \nhas been clearly indicated, with acknowledgement and reference to the literature. \nThis study was conducted and completed under the guidance of Professor Muthoni \nMasinde, Department of Information Technology at Central University of \nTechnology, Free State, South Africa, and co-supervised by Professor Yali \nWoyessa, Department of Civil Engineering at Central University of Technology, \nFree State, South Africa. \nAdeyinka Kabir Akanbi \nSignature: _____________________ \nDate: _________________________ \n \nIn our capacity as the supervisors of this thesis, we certify that the above \nstatements are true to the best of our knowledge. \nProfessor Muthoni Masinde \nSignature: ____________________ \nDate: ________________________ \nProfessor Yali Woyessa \nSignature: ____________________ \nDate: ________________________ \n \n \n \n \n\nvi \n \nPreface and Acknowledgements \nThis thesis is the result of a PhD research study carried out from May 2015 to May \n2019 at the Department of Information Technology, Faculty of Engineering, Built \nEnvironment and Information Technology, Central University of Technology, Free \nState, South Africa. In the words of Miguel de Cervantes Saavedra (1614): “For a \nman to attain to an eminent degree in learning, costs him time, watching, hunger, \nnakedness, dizziness in the head, weakness in the stomach, and other \ninconveniences.” However, the task of completion of this thesis would not have \nbeen possible without the support of several individuals to whom I would like to \nexpress my deepest gratitude. \nFirst and foremost, I would like to express my whole-hearted gratitude to my main \nsupervisor, Prof Muthoni Masinde for always believing in me since inception, \ndirecting and supervising my research work. Your constant encouragement at \nevery step of the journey – from idea conception till the end is highly appreciated. \nWithout your timely support, problem-solving skills, enthusiasm, responsibility \ntowards students and expert guidance during my research work, this thesis would \nnot have been possible. I believe that the invaluable knowledge and experience \nhave gained from you will always guide me forward in the future. I would also like \nto thank my co-supervisor, Prof Yali Woyessa for being a pillar of support with \nwords of encouragement and upliftment. \nI would like to thank my friends and colleagues – those that made the University \nhome away from home for me, starting with my brothers from another mother – \nMr Jacob Adedeji and Mr Olugbenga Abejide for the support and help that I have \nreceived from them whenever needed during this research period. My gratitude is \nextended to Dr Bankole Awuzie for his insightful talks on research ideas whenever \nthe need arises. My sincere gratitude goes to Professor Fidelis Emuze, HOD, \nDepartment of Built Environment, and Mrs Mpho Mbeo, Faculty Officer, Faculty \nof Engineering Built Environment and Information Technology, CUT, for her \ntimely advice and support during my PhD work. \nMy profound and unreserved gratitude goes to Almighty God for his mercies and \nloving kindness over my life. I am indebted to my parents: Hon Adebowale Akanbi \n\nvii \n \nand Mrs Ibijola Akanbi for their unconditional moral and financial support, \nunderstanding, belief and love; without them this research would have been \nimpossible. I am also grateful to my loving wife, Mrs Adedoyin Kareemat Akanbi \nand my daughter Adeshewa Rahmatalah Damilola Akanbi for their love, affection \nand understanding during this PhD study. \nLast but not the least, I would like to acknowledge my brothers: Ademola Akanbi, \nAdewale Akanbi, Adekunle Akanbi, Yusuf Akanbi and my sisters: Jadesola \nAkanbi, Ayobami Akanbi and Tomiwa Akanbi (of loving memory); my uncles: Mr. \nMG Akanbi, Mr Binyamin Yusuf, Mr Leke Akanbi, Mr Abiodun Akanbi; my aunts: \nMrs Kuburat Fawole, Ms Iyabo Ibrahim,  other family and friends for their \nunderstanding and love. \nAdeyinka Kabir Akanbi \nOctober 2019 \nBloemfontein, Free State \nSouth Africa \n \n \n \n \n \n\nviii \n \nAbstract \nDrought is a complex environmental phenomenon that affects millions of people \nand communities all over the globe and is too elusive to be accurately predicted. \nThis is mostly due to the scalability and variability of the web of environmental \nparameters that directly/indirectly causes the onset of different categories of \ndrought. Since the dawn of man, efforts have been made to uniquely understand \nthe natural indicators that provide signs of likely environmental events. These \nindicators/signs in the form of indigenous knowledge system have been used for \ngenerations. Also, since the dawn of modern science, different drought prediction \nand forecasting models/indices have been developed which usually incorporate \ndata from sparsely located weather stations in their computation, producing less \naccurate results – due to lack of the desired scalability in the input datasets.  \nThe intricate complexity of drought has, however, always been a major stumbling \nblock for accurate drought prediction and forecasting systems. Recently, scientists \nin the field of ethnoecology, agriculture and environmental monitoring have been \ndiscussing the integration of indigenous knowledge and scientific knowledge for a \nmore accurate environmental forecasting system in order to incorporate diverse \nenvironmental information for a reliable drought forecast. Hence, in this research, \nthe core objective is the development of a semantics-based data integration \nmiddleware that encompasses and integrates heterogeneous data models of local \nindigenous knowledge and sensor data towards an accurate drought forecasting \nsystem for the study areas of the KwaZulu-Natal province of South Africa and \nMbeere District of Kenya. \nFor the study areas, the local indigenous knowledge on drought gathered from the \ndomain experts and local elderly farmers, is transformed into rules to be used for \nperforming deductive inference in conjunction with sensors data for determining \nthe onset of drought through an automated inference generation module of the \nmiddleware. The semantic middleware incorporates, inter alia, a distributed \narchitecture that consists of a streaming data processing engine based on Apache \nKafka for real-time stream processing; a rule-based reasoning module; an ontology \nmodule for semantic representation of the knowledge bases. The plethora of sub-\n\nix \n \nsystems in the semantic middleware produce a service(s) as a combined output – \nin the form of drought forecast advisory information (DFAI). The DFAI as an \noutput of the semantic middleware is disseminated across multiple channels for \nutilisation by policy-makers to develop mitigation strategies to combat the effect \nof drought and their drought-related decision-making processes. \n \n\nx \n \nList of Acronyms \nAHP – Agro-hydropotential \nAI – Artificial Intelligence \nAPI – Application Programming Interface \nBFO - Basic Formal Ontology \nCEP – Complex Event Engine \nCF – Certainty Factor  \nCIQ – Customer Information Quality \nCLI – Command Line Interface \nCSV – Comma-separated values \nCUT - Central University of Technology \nDAML – Digital Asset Modelling Language \ndB – Document Database \nDCSP – Distributed Stream Computing Platforms \nDDL – Data Definition Language \nDE – Domain Expert \nDEWS – Drought Early Warning System \nDFAI – Drought Forecast Advisory Information \nDL – Descriptive Logic \nDML – Data Manipulation Language \nDOLCE – Descriptive Ontology for Linguistic and Cognitive Engineering \nDRIC – Departmental Research and Innovation Committee \nEDI – Effective Drought Index \nEDXL-SitRep – Emergency Data Exchange Language Situation Reporting \nEP – Event Processing \nEPL – Event Processing Language \nESTemd – Event STream Processing Engine for Environmental Monitoring \nDomain \n\nxi \n \nEWS – Early Warning Systems \nFAO – Food and Agriculture Organisation \nFEWS-Net – Famine Early Warning System \nFG – Functional Group \nFGDC – American Federal Geographic Data \nFOL – First Order Logic \nFR – Functional Requirement \nFRIC – Faculty Research and Innovations Committee \nGIEWS – Global Information and Early Warning System \nGML – Geography Markup Language \nGUI – Graphical User Interface \nHEWS – Humanitarian Early Warning Service \nHTTP – Hyper Text Transfer Protocol \nIK – Indigenous Knowledge \nIKF – Indigenous Knowledge Forecasts \nIKF – Indigenous Knowledge Forecasts \nIKON – Indigenous Knowledge on Drought Domain ONtology \nIKS – Indigenous Knowledge System \nIKSDC – Indigenous Knowledge System Data Collection \nIKSDC – Indigenous Knowledge System Data Collection \nIoT – Internet of Things \nIS – Information Systems \nIS – Information Systems \nITIKI – Information Technology with Indigenous Knowledge \nJESS – Java Expert Shell Script \nJSON – JavaScript Object Notation \nJSON-LD – JSON for Linked Data \nKAON – Karlsruhe Ontology \n\nxii \n \nKBE – Knowledge Base Editor \nKSQL – Kafka Structured Query Language \nLODE – Live OWL Documentation Environment \nMAPE – Mean Absolute Percentage Error \nME – Mean Error \nMQTT – Message Queuing Telemetry Transport \nNFR – Non-Functional Requirement \nNIEM – National Information Exchange Model \nO&M – Observations & Measurements \nOBO – Open Biological and Biomedical Ontology \nODK – Open Data Kit \nOGC – Open Geospatial Consortium \nOWL – Web Ontology Language \nOWLViz – Web Ontology Language Visualiser \nPDSI – Palmer Drought Severity Index \nPiECE – Pilot, Exploratory and Confirmatory Experiments \nPL – Propositional Logic \nRB-DEWES – Rule-based Drought Early Warning Expert System \nRBES – Rule-based Expert System \nRC – Research Contribution \nRDF – Resource Descriptive Framework \nRDFS – Resource Description Framework Schema \nREST – Representational State Transfer \nRH – Research Hypothesis \nRIF – Rule Interchange Format \nRO – Research Objective \nRQ – Research Question \nRSE – Root Square Error \n\nxiii \n \nSB-DEWS – Semantics-based Drought Early Warning Systems \nSBDIM – Semantic-based Data Integration Middleware \nSOA – Service Oriented Architecture \nSOAP – Simple Object Access Protocol \nSPI – Standard Precipitation Index \nSQL – Structured Query Language \nSSN – Semantic Sensor Network \nSSN – Semantic Sensor Network  \nSUMO – Suggested Upper Merged Ontology \nSWSI – Surface Water Supply Index \nTAHMO – Trans-African Hydro-Meteorological Observatory \nTAHMO – Trans-African Hydro Meteorological Observatory \nUID – Unique Identifier  \nUML – Universal Modelling Language \nUNISDR – United Nations International Strategy for Disaster Reduction \nUoD – Universe of Discourse \nUSSD – Unstructured Service Supplementary Data \nUUID – Unique Universal Identifier \nUUID –Unique Universal Identifier \nVOWL – Visual Ontology Web Language \nW3C – World Wide Web Consortium \nWFP – World Food Programme \nWSDC – Wireless Sensor Data Collection \nWSDC – Wireless Sensor Data Collection \nWSN – Wireless Sensor Networks \nXML – Extensible Markup Language \n \n \n \n\nxiv \n \nGlossary \n• Axioms: A form of assertions (including rules) that can be used to generate \ninference and reasoning. \n• Blob storage: An optimised storage for storing massive amounts of \nunstructured data, such as text or binary data. Users or client applications \ncan access blobs via URLs, REST API. \n• Case study: An in-depth study of an event in a selected area using selected \nindividuals. \n• CEP Engine (Complex Event Processing): An event processing engine that \ncombines data from multiple sources to infer events or patterns that suggest \nmore complicated circumstances. \n• Certainty Factor: A numerical value that expresses the extent to which, \nbased on a given set of evidence, a given conclusion should be accepted. \n• Data analysis: The interrogation of acquired data to come up with \nsummaries and trends in the study variable. \n• Event: An event is an occurrence taking place at a determinable time and \nplace, with or without the participation of human agents. \n• Focus groups: A selected group of expert/respondents. \n• Heavyweight Ontology: An ontology is an ontology with a higher level of \nexpressivity, with the capability to perform formal reasoning. \n• JSON: An open-standard file format that uses human-readable text to \ntransmit data objects consisting of attribute–value pairs and array data \ntypes. \n• Judgmental sampling: The use of prior knowledge to select respondents to \nresearch questions. \n• Legacy System: A computer system, programming or application software \nthat is outdated or that can no longer receive support and maintenance. \n• Lightweight Ontology: A directed graph whose nodes represent concepts. \n• Measurand: A quantity intended to be measured. \n• Mind Map: An illustration showing the interconnection of thoughts towards \nachieving an objective. \n\nxv \n \n• OGC: An international consortium of industry, academic and government \norganisations who collaboratively develop open standards for geospatial \nand location services. \n• Open-ended questions: A set of questions to which respondents are free to \ngive their own responses. \n• Pilot/Pre-Test Study: A trail study to gauge the adequacy of research tools \nand redefine questionnaires. \n• Population: The set of all people in the communities’ studies. \n• Qualitative research: Research focusing on descriptive data and responses. \n• Quantitative research: Research focusing on a number of responses. \n• Research design: A plan for conducting research. \n• Rule: In knowledge representation, an IF-THEN structure that relates \ngiven information or facts in the IF part to some action in the THEN part. \n• Sample: A subset of a population. \n• Sigfox: A global network that makes it simple to connect devices anywhere \nin the world. \n• Structured interview: A set of predefined questions to guide researchers and \nrespondents in answering of questions. \n• Subsumption: A subsumption relation is “is-a-superclass-of” and the \nconverse of “is-a”, “is-a-subtype-of” or “is-a-subclass-of”, defining which \nobjects are classified by which class in a hierarchical format. \n• Validity: The degree of a result to reflect the meaning of a tested variable. \n• W3C: The main international standards organisation for the World Wide \nWeb. \n \n \n\nxvi \n \nTable of Contents \n \nCopyright Notice ....................................................................................................... ii \nDisclaimer ................................................................................................................ iii \nDedication ................................................................................................................ iv \nDeclaration ................................................................................................................ v \nPreface and Acknowledgements .............................................................................. vi \nAbstract .................................................................................................................. viii \nList of Acronyms ....................................................................................................... x \nGlossary .................................................................................................................. xiv \nTable of Contents ................................................................................................... xvi \nList of Figures ...................................................................................................... xxiv \nList of Tables ...................................................................................................... xxviii \nList of Publications .............................................................................................. xxix \nCHAPTER ONE ........................................................................................................ 1 \nINTRODUCTION ..................................................................................................... 1 \n1.1. \nBackground Information and Motivation ................................................... 1 \n1.2. \nProblem Statement ...................................................................................... 5 \n1.3. \nResearch Questions and Objectives ............................................................ 6 \n1.4. \nThe Solution Approach – A Case Study ...................................................... 7 \n1.5. \nLimitation of the Research Scope ............................................................... 8 \n1.6. \nSignificance and Contributions of the Study .............................................. 8 \n1.7. \nEvaluation Criteria ...................................................................................... 9 \n1.8. \nStructure of the Thesis .............................................................................. 10 \nCHAPTER TWO ..................................................................................................... 11 \nBACKGROUND AND RELATED WORK ............................................................. 11 \n2.1. \nIntroduction ............................................................................................... 11 \n2.2. \nBackground ................................................................................................ 11 \n2.2.1. \nThe Concept of Drought ...................................................................... 14 \n2.2.1.1 Causes of Drought ............................................................................... 15 \n2.2.1.2 Impacts, Cost, and Complexity of Droughts ...................................... 16 \n2.2.1.3 Drought Prediction Model and Indices .............................................. 17 \n\nxvii \n \n2.2.1.4 Local Indigenous Knowledge on Drought .......................................... 19 \n2.2.1.5. \nIndigenous Knowledge versus Modern Science on Droughts ........ 23 \n2.2.1.6. \nApplication of IoT/WSN for Drought Forecasting and Prediction . 24 \n2.2.1.7. \nDrought Early Warning Systems .................................................... 26 \n2.2.2. \nSemantics-based Drought Early Warning Systems (SB-DEWS) ...... 27 \n2.2.2.1. \nSemantic Technology ....................................................................... 28 \n2.2.2.2. \nSemantic Representation ................................................................ 29 \n2.2.2.3. \nKnowledge Management ................................................................. 29 \n2.2.2.4. \nKnowledge Lifecycle ........................................................................ 31 \n2.2.2.5. \nKnowledge Model ............................................................................. 31 \n2.2.2.6. \nOntology ........................................................................................... 33 \n2.2.2.7. \nKnowledge Modelling of Heterogeneous Data Sources (D1 & D2) 37 \n2.2.3. \nInference Generation Systems and Reasoners .................................. 42 \n2.2.3.1. \nStream Processing ........................................................................... 43 \n2.2.3.2. \nRule-based Expert Systems (RBES) ............................................... 45 \n2.2.4. \nDistributed Middleware System ......................................................... 47 \n2.2.4.1. \nData Acquisition FG ........................................................................ 49 \n2.2.4.2. \nMiddleware....................................................................................... 49 \n2.2.4.3. \nData Publishing FG ......................................................................... 50 \n2.2.5. \nService-Oriented Architecture ............................................................ 50 \n2.3. \nRelated Works ............................................................................................ 51 \n2.4. \nSummary .................................................................................................... 52 \nCHAPTER THREE ................................................................................................. 54 \nRESEARCH DESIGN AND METHODOLOGY .................................................... 54 \n3.1. \nIntroduction ............................................................................................... 54 \n3.2. \nResearch Design ........................................................................................ 55 \n3.2.1. \nQualitative vs Quantitative Techniques ............................................ 55 \n3.2.2. \nResearch Philosophy ........................................................................... 56 \n3.2.2.1. \nOntology ........................................................................................... 58 \n3.2.2.2. \nEpistemology .................................................................................... 58 \n3.2.2.3. \nMethodological ................................................................................. 58 \n3.2.3. \nSystem Development Methodologies .................................................. 58 \n\nxviii \n \n3.2.4. \nExperimental Design .......................................................................... 59 \n3.3. \nData Collection and Analysis Methods ..................................................... 59 \n3.3.1. \nData Types........................................................................................... 60 \n3.3.2. \nData Sources ....................................................................................... 60 \n3.3.2.1. \nPilot Study ........................................................................................ 61 \n3.3.2.2. \nUse of Case Study ............................................................................ 61 \n3.3.3. \nTarget Population ............................................................................... 62 \n3.3.4. \nSampling Techniques .......................................................................... 62 \n3.3.4.1. \nQuestionnaire ................................................................................... 62 \n3.3.4.2. \nSurvey Mobile Application .............................................................. 63 \n3.3.4.3. \nFocus Groups .................................................................................... 65 \n3.3.5. \nData Analysis and Interpretation ...................................................... 65 \n3.3.5.1. \nData Pre-processing ......................................................................... 65 \n3.3.5.2. \nReliability and Validity ................................................................... 67 \n3.3.6. \nError Analysis ..................................................................................... 68 \n3.3.7. \nData Collection Techniques ................................................................ 68 \n3.4. \nStudy Areas ................................................................................................ 68 \n3.4.1. \nKwaZulu-Natal .................................................................................... 68 \n3.4.2. \nMbeere District.................................................................................... 70 \n3.5. \nSemantics-based Data Integration Middleware Framework .................. 71 \n3.5.1. \nFramework Requirements .................................................................. 72 \n3.5.2. \nThe Middleware Framework Overview and Description .................. 73 \n3.5.2.1. \nData Acquisition FG ........................................................................ 76 \n3.5.2.2. \nData Storage FG .............................................................................. 79 \n3.5.2.3. \nStream Analytics FG ....................................................................... 80 \n3.5.2.4. \nInference Engine FG ........................................................................ 81 \n3.5.2.5. \nData Publishing FG ......................................................................... 85 \n3.6. \nKnowledge Modelling and Representation Methodology ......................... 85 \n3.6.1. \nPhase One – Goal & Scope Definition ................................................ 87 \n3.6.2. \nPhase Two –Information Gathering & Elicitation ............................ 87 \n3.6.3. \nPhase Three – Initial Structuring ...................................................... 88 \n3.6.4. \nPhase Four – Formalisation ............................................................... 90 \n\nxix \n \n3.6.5. \nPhase Five – Deployment ................................................................... 91 \n3.6.6. \nPhase Six – Evaluation ....................................................................... 92 \n3.7. \nExperimentation Process .......................................................................... 93 \n3.8. \nMiddleware Evaluation Procedure ........................................................... 93 \n3.9. \nEthical Consideration ................................................................................ 93 \n3.10. \nSummary ................................................................................................ 94 \nCHAPTER FOUR ................................................................................................... 96 \nHETEROGENEOUS DATA COLLECTION ......................................................... 96 \n4.1. \nIntroduction ............................................................................................... 96 \n4.2. \nDomain 1 – Local Indigenous Knowledge on Drought ............................. 97 \n4.2.1. \nData Collection – Swayimane, KZN ................................................... 97 \n4.2.1.1. \nDemographics of Respondents ........................................................ 98 \n4.2.1.2. \nKnowledge of Indigenous Knowledge System on Drought ............. 99 \n4.2.1.3. \nCharacteristics of Weather Seasons in Swayimane, KwaZulu-Natal\n \n100 \n4.2.1.4. \nIndigenous Knowledge Drought Indicator for KwaZulu-Natal ... 101 \n4.2.2. \nData Collection – Mbeere District .................................................... 105 \n4.2.2.1. \nData Analysis – Mbeere District ................................................... 105 \n4.2.2.2. \nKnowledge of Indigenous Knowledge System on Drought ........... 106 \n4.2.2.3. \nCharacteristics of Weather Seasons in Mbeere Community ....... 107 \n4.2.2.4. \nIndigenous Knowledge Drought Indicator for Mbeere Community\n \n108 \n4.2.3. \nRepresentation and Use of Aggregated Indigenous Knowledge ..... 110 \n4.3. \nDomain 2 – WSN & Weather Station Data ............................................ 110 \n4.3.1. \nWireless Sensor Data Collection ...................................................... 110 \n4.3.2. \nSensors ............................................................................................... 112 \n4.3.3. \nWeather Station Data Collection...................................................... 114 \nFigure 4- 8: Swayimane Weather Station (Source: Author). ........................ 114 \n4.4. \nSummary .................................................................................................. 116 \nCHAPTER FIVE ................................................................................................... 117 \nKNOWLEDGE MODELLING AND REPRESENTATION USING ONTOLOGIES\n ............................................................................................................................... 117 \n5.1. \nIntroduction ............................................................................................. 117 \n\nxx \n \n5.2. \nKnowledge Modelling & Representation of Local Indigenous Knowledge \non Drought (D1) ................................................................................................. 118 \n5.2.1. \nOntology Development and Encoding of IKON – Knowledge \nRepresentation\n \n………………………………………………………………………………..11\n9 \n5.2.2. \nLightweight Ontology Representation of IKON .............................. 126 \n5.2.3. \nHeavyweight Ontology Representation of IKON ............................. 128 \n5.2.4. \nPublishing and Deployment of IKON............................................... 129 \n5.3. \nKnowledge Representation of WSN (D2) ................................................ 130 \n5.3.1. \nAxiomatisation of Semantic Sensor Network (SSN) ....................... 131 \n5.3.2. \nApplication of SSN Ontology – Use Case ......................................... 134 \n5.4. \nImplementation Scenario ........................................................................ 137 \n5.5. \nSummary .................................................................................................. 139 \nCHAPTER SIX ...................................................................................................... 140 \nAUTOMATED INFERENCE GENERATION SYSTEMS .................................. 140 \n6.1. \nIntroduction ............................................................................................. 140 \n6.2. \nRule-based Drought Early Warning Expert System (RB-DEWES) ...... 141 \n6.2.1. \nRules Ranking with Certainty Factor from Indigenous Knowledge \nRepresentation ............................................................................................... 141 \n6.2.2. \nRB-DEWS Module Architecture ....................................................... 144 \n6.2.2.1. \nGraphical User Interface (GUI) .................................................... 144 \n6.2.2.2. \nDatabase ......................................................................................... 148 \n6.2.2.3. \nJESS Inference Engine .................................................................. 148 \n6.2.2.4. \nKnowledge Base ............................................................................. 148 \n6.2.2.5. \nModel Base ..................................................................................... 150 \n6.2.3. \nRB-DEWS Module System Design and Implementation ................ 150 \n6.2.3.1. \nSoftware Component...................................................................... 150 \n6.2.3.2. \nHardware Component.................................................................... 151 \n6.2.4. \nRB-DEWS Module Implementation Operation ............................... 151 \n6.2.4.1. \nModule Execution .......................................................................... 151 \n6.2.5. \nReasoning with Uncertainty ............................................................. 152 \n6.3. \nStreaming Analytics FG .......................................................................... 153 \n\nxxi \n \n6.3.1. \nEvent STream Processing Engine for Environmental Monitoring \nDomain (ESTemd) .......................................................................................... 154 \n6.3.1.1. \nData Ingestion Layer ..................................................................... 156 \n6.3.1.2. \nData Broker Layer (Kafka Connect Source) ................................. 157 \n6.3.1.3. \nStream Data Processing Engine and Service ............................... 158 \n6.3.1.4. \nData Broker Layer (Kafka Connect Sink)..................................... 163 \n6.3.1.5. \nData Sink (Event Publishers) ....................................................... 163 \n6.3.2. \nExperimental Implementation and Use Case Discussion ............... 163 \n6.3.2.1. \nCentral Streaming Platform.......................................................... 164 \n6.3.2.2. \nConfiguring data pipelines using Kafka Connect ......................... 167 \n6.3.2.3. \nKafka Topics ................................................................................... 169 \n6.3.2.4. \nWorkflows ....................................................................................... 171 \n6.3.2.5. \nPersistent Querying of the Data Streams using KSQL ............... 172 \n6.4. \nInferences Outputs as Drought Forecast Advisory Information (DFAI)\n \n174 \n6.5. \nIntegration of the Stream Analytics and Inference Engine FGs to the \nMiddleware ........................................................................................................ 174 \n6.6. \nSummary .................................................................................................. 175 \nCHAPTER SEVEN ............................................................................................... 177 \nEVALUATION OF SEMANTICS-BASED DATA INTEGRATION \nMIDDLEWARE..................................................................................................... 177 \n7.1. \nIntroduction ............................................................................................. 177 \n7.2. \nFGs Verification and Validation (V&V) .................................................. 178 \n7.3. \nOverview of the SB-DIM Middleware Implementation ......................... 178 \n7.4. \nData Acquisition FG Phase ..................................................................... 179 \n7.4.1. \nConfiguration of the Wireless Sensor Network and Professional \nWeather Station ............................................................................................. 179 \n7.4.1.1. \nData Representation Formats ....................................................... 180 \n7.4.1.2. \nConversion and Representation of Sensor Data in JSON files .... 182 \n7.4.2. \nIndigenous Knowledge on Drought Component .............................. 183 \n7.4.2.1. \nOverview of Indigenous Knowledge Indicators ............................ 183 \n7.4.2.2. \nData Collection Tool ...................................................................... 183 \n7.4.2.3. \nIndigenous Knowledge Verification and Confidence Level .......... 184 \n\nxxii \n \n7.5. \nData Storage FG Phase ........................................................................... 185 \n7.5.1. \nData Pipeline Data Format .............................................................. 185 \n7.6. \nStream Analytics Phase .......................................................................... 185 \n7.6.1. \nOverview of the Stream Analytics FG .............................................. 185 \n7.6.2. \nImplementation Scenario .................................................................. 185 \n7.6.3. \nPersistent Query Output Data Format. ........................................... 187 \n7.7. \nInference Engine FG Phase ..................................................................... 187 \n7.7.1. \nOverview of the Inference Engine FG .............................................. 187 \n7.7.2. \nSemantic Annotation Sub-System - Transformation of IK into \nStructured Machine-Readable Format .......................................................... 187 \n7.7.3. \nExpert System Event Hub ................................................................ 189 \n7.7.4. \nReasoners .......................................................................................... 190 \n7.8. \nData Publishing FG Phase ...................................................................... 190 \n7.9. \nReview of Software Verification and Validation (V&V) Process ........... 191 \n7.10. \nUX Evaluation of Prototype ................................................................. 191 \n7.10.1. Performance and Usability Evaluation ............................................ 192 \n7.10.2. Recommendation from the Participants .......................................... 193 \n7.11. \nSummary .............................................................................................. 193 \nCHAPTER EIGHT ................................................................................................ 194 \nDISCUSSION AND CONCLUSIONS ................................................................. 194 \n8.1. \nIntroduction ............................................................................................. 194 \n8.2. \nEvaluation of Thesis Objectives .............................................................. 194 \n8.2.1. \nWeather Prediction based on Integration of Heterogeneous Data \nSources 194 \n8.2.2. \nThe Semantic Representation of Heterogeneous Weather Data (IK & \nWSN Data) ...................................................................................................... 195 \n8.2.3. \nUsing IoT/WSN in Real-Time Monitoring of Drought Parameters 196 \n8.2.4. \nApplication of Semantic Middleware in Solving Integration and \nInteroperability of Different Entities. ........................................................... 197 \n8.2.5. \nImplementing the Middleware as a DEWS for Creating Accurate \nDrought Prediction and Forecasting ............................................................. 197 \n8.3. \nInnovative Contributions of the Research Thesis .................................. 198 \n8.4. \nConclusion and Future Work .................................................................. 199 \n\nxxiii \n \nREFERENCES ..................................................................................................... 202 \nAPPENDIX A ........................................................................................................ 228 \nAPPENDIX B ........................................................................................................ 240 \nAPPENDIX C ........................................................................................................ 246 \nAPPENDIX D ........................................................................................................ 250 \nAPPENDIX E ........................................................................................................ 252 \nAPPENDIX F ........................................................................................................ 256 \nAPPENDIX G ........................................................................................................ 257 \n \n \n \n\nxxiv \n \nList of Figures \nFigure 2- 1: The colour shows the severity of droughts index, red – significant \npositive trend (towards drier conditions) and green – significant negative trend \n(towards wetter conditions) (Source: African Flood and Drought Monitor) ......... 16 \nFigure 2- 2: WSN Network (Source: Author). ........................................................ 24 \nFigure 2- 3: Key element of an early warning system (Source: Rogers & \nTsirkunov, 2011) ..................................................................................................... 26 \nFigure 2- 4: The Semantic Web Stack (Source: www.W3C.org) ........................... 28 \nFigure 2- 5: Knowledge lifecycle (Source: Author) ................................................. 32 \nFigure 2- 6: Conceptual representation between Mind Map, Knowledge Model, \nHumans and Machines (Source: Author). .............................................................. 33 \nFigure 2- 7: Level of abstraction in ontology development (Source: Guarino, \n1998). ....................................................................................................................... 35 \nFigure 2- 8: A screenshot of Protégé IDE (Source: Author). ................................. 37 \nFigure 2- 9: Knowledge Representation Languages with a level of formality and \ndegree of expressivity (Source: Berners-Lee, Hendler & Lassila, 2001) ............... 39 \nFigure 2- 10: Descriptive Ontology for Linguistic and Cognitive Engineering \n(DOLCE) (Source: Masolo et al., 2003). ................................................................. 40 \nFigure 2- 11: Overview of Apache Kafka Ecosystem. (Source: www.apache.org) 45 \nFigure 2- 12: Components of Rule-based System (Source: Author) ...................... 46 \nFigure 2- 13: Overview of the distributed semantics-based data integration \nMiddleware (Source: Author) ................................................................................. 48 \nFigure 2- 14: Elements of SOA (Source: Krafzig, Banke & Slama, 2005). ........... 51 \nFigure 3- 1: Research design steps based on research philosophy (Source: Guba, \n1990)..... \n57 \nFigure 3- 2: Open Data Kit Collect GUI. ............................................................... 64 \nFigure 3- 3: Map of KwaZulu-Natal Province, South Africa and Swayimane. \n(Source: Republic of South Africa, 2010) ............................................................... 70 \nFigure 3- 4: Map of Kenya showing relative location and size of Mbeere district. \n(Source: Republic of Kenya, 2001). ......................................................................... 71 \nFigure 3- 5: The semantics-based data integration middleware framework \n(Source: Author) ...................................................................................................... 75 \nFigure 3- 6: Indigenous Knowledge System Data Collection (IKSDC) module \nframework (Source: Author). .................................................................................. 77 \nFigure 3- 7: Wireless Sensor Data Collection (WSDC) module framework. \n(Source: Author) ...................................................................................................... 78 \nFigure 3- 8: Communication medium patterns. (Source: Author) ........................ 79 \nFigure 3- 9: RB-DEWES System Development Methodology. (Source: Author) .. 83 \nFigure 3- 10: Process Flowchart of Knowledge Engineering Phase. (Source: \nAuthor) .................................................................................................................... 84 \nFigure 3- 11: Overview of Knowledge Modelling Methodology (Source: Author) 87 \n\nxxv \n \nFigure 3- 12: Graphical Modelling of classes and relations. ................................. 89 \nFigure 4- 1: Surveying and interviewing IK experts and local farmers at \nSwayimane, KZN, South Africa (Source: \nAuthor)……………………………………………………………... \n98 \nFigure 4- 2: Mbeere’s District Respondents entry in the database (Source: \nAuthor). ................................................................................................................. 105 \nFigure 4- 3: Distribution of the Respondents by crops planted – Mbeere (Source: \nAuthor). ................................................................................................................. 106 \nFigure 4- 4: Distribution of the Respondents by IK usage – Mbeere (Source: \nAuthor). ................................................................................................................. 107 \nFigure 4- 5: Categories of IK used by the respondents – Mbeere (Source: Author)\n ............................................................................................................................... 107 \nFigure 4- 6: Squidnet Network Module (Source: Author). .................................. 111 \nFigure 4- 7: Sigfox Cloud Web Interface (Source: Author). ................................. 111 \nFigure 4- 8: Swayimane Weather Station (Source: Author). .............................. 114 \nFigure 4- 9: Real-time readings of Swayimane Weather Station (Source: Author).\n ............................................................................................................................... 115 \nFigure 4- 10: TAHMO Web Portal (Source: Author) ........................................... 116 \nFigure 5- 1: Annotation of class LivingThingBehaviour (Source: \nAuthor)……………….. \n121 \nFigure 5- 2 The hierarchical representation of the IKON Ontology classes and \nsubclasses (Source: Author). ................................................................................. 122 \nFigure 5- 3: The object properties of IKON Ontology classes and subclasses \n(Source: Author). ................................................................................................... 124 \nFigure 5- 4: The data properties of IKON Ontology classes and subclasses \n(Source: Author). ................................................................................................... 125 \nFigure 5- 5: Some Individuals of IKON Ontology (Source: Author). .................. 126 \nFigure 5- 6: Lightweight visual representation of IKON ontology using OntoGraf \n(Source: Author). ................................................................................................... 127 \nFigure 5- 7: A snippet of OWL/XML code representation of IKON (Source: \nAuthor). ................................................................................................................. 129 \nFigure 5- 8: Live OWL Documentation Environment (LODE) tool (Source: \nhttps://essepuntato.it/lode/). ................................................................................. 130 \nFigure 5- 9: Overview of the SOSA/SSN ontology modules (Source: Compton et \nal., 2012) ................................................................................................................ 132 \nFigure 5- 10: Overview of the SSN classes and properties for the observation \nperspective, SSN only components in blue colour (Source: Compton et al., 2012).\n ............................................................................................................................... 133 \nFigure 5- 11: A snippet of ontological representation of a SEN13322 sensor using \nSSN ontology (Source: Author) ............................................................................. 135 \nFigure 5- 12: A snippet of class ssn-system:qualityOfObservation (Source: \nAuthor). ................................................................................................................. 136 \n\nxxvi \n \nFigure 5- 13: Integration scenarios of semantic represented heterogeneous data \nsources (Sources: Author) ..................................................................................... 138 \nFigure 5- 14: Example of an expert system rule definition for D1 data (Source: \nAuthor). ................................................................................................................. 138 \nFigure 5- 15: Example of CEP persistent query logic for performing deductive \ninference from WSN data streams (Source: Author) ........................................... 139 \nFigure 6- 1: The architecture of RB-DEWES (Source: \nAuthor)…………………………… 144 \nFigure 6- 2: RB-DEWES Frontend GUI (Source: Author)................................... 145 \nFigure 6- 3: Screenshot of RB-DEWES Inference Generation Process (Source: \nAuthor). ................................................................................................................. 146 \nFigure 6- 4: A screenshot of Inference Output (Source: Author). ....................... 146 \nFigure 6- 5: Knowledge Editor Interface (Source: Author). ................................ 147 \nFigure 6- 6: Knowledge base administration interface (Source: Author). .......... 147 \nFigure 6- 7: Production rules in the knowledge base (Source: Author). ............. 149 \nFigure 6- 8: ESTemd Stack (Source: Author). ..................................................... 155 \nFigure 6- 9: Stream Analytics FG layered model (Source: Author). ................... 155 \nFigure 6- 10: Overview of the streaming engine – Apache Kafka (Source: \nwww.apache.org) ................................................................................................... 156 \nFigure 6- 11: Starting Apache Kafka in the FG using CLI (Source: Author) ..... 157 \nFigure 6- 12: Node-Kafka-broker data pipeline programming flow. .................. 158 \nFigure 6- 13: Confluent Enterprise Streaming Framework (Source: \nwww.apache.org) ................................................................................................... 165 \nFigure 6- 14: Starting Confluent Platform in the Terminal (Source: Author). .. 166 \nFigure 6- 15: Confluent Platform Interface (Source: Author). ............................ 167 \nFigure 6- 16: Overview of Kafka Connect. (Source: www.apache.org) ............... 168 \nFigure 6- 17: Configuration of Kafka Connect in Confluent Platform (Source: \nAuthor). ................................................................................................................. 169 \nFigure 6- 18: Creating a new topic in Confluent platform (Source: Author). ..... 170 \nFigure 6- 19: Available topics in the Kafka broker (Source: Author). ................ 171 \nFigure 6- 20: KSQL cluster interfacing with the Kafka broker (Source: \nwww.apache.org). .................................................................................................. 172 \nFigure 7- 1: Micro-controllers, sensors with a battery in a Pyrex casing (Source: \nAuthor). \n179 \nFigure 7- 2: Campbell Scientific Research Grade Weather Station (Source: \nAuthor). ................................................................................................................. 180 \nFigure 7- 3: Exporting sensor device messages from the Sigfox Cloud (Source: \nAuthor). ................................................................................................................. 181 \nFigure 7- 4: Sensor device messages in CSV format (Source: Author). .............. 181 \nFigure 7- 5: Sensor device messages in CSV format (Source: Author). .............. 182 \nFigure 7- 6: Weather station readings in JSON format (Source: Author). ......... 182 \nFigure 7- 7: NPM conversion code (Source: Author). ........................................... 182 \n\nxxvii \n \nFigure 7- 8: Sample questionnaire in XML format (Source: Author). ................ 184 \nFigure 7- 9:Starting up the streaming platform and associated services in \nTerminal (Source: Author).................................................................................... 186 \nFigure 7- 10: Querying the data stream through the KSQL CLI (Source: Author).\n ............................................................................................................................... 186 \nFigure 7- 11: Querying output stream format using SHOW command in KSQL \nCLI (Source: Author). ............................................................................................ 187 \nFigure 7- 12: Indigenous Knowledge Ontology in JSON format (Source: Author).\n ............................................................................................................................... 189 \nFigure 7- 13: SBDIM Middleware Process Flow Chart (Source: Author). .......... 191 \nFigure 7- 14: SUS Scores (Source: Author). ......................................................... 192 \n \n \n \n\nxxviii \n \nList of Tables \nTable 2- 1: Classification of drought categories using EDI. .................................. 19 \nTable 2- 2: Categorisation of Local Indigenous Knowledge on Drought. ............. 22 \nTable 4- 1: Categories of IK used by the respondents – Swayimane, \nKZN………………….99 \nTable 4- 2: Onset and Cessation of Weather Seasons in KwaZulu-Natal Province.\n ............................................................................................................................... 100 \nTable 4- 3: Swayimane KwaZulu-Natal Weather Indicators. ............................. 102 \nTable 4- 4: Onset and Cessation of Weather Seasons in Mbeere Community. .. 108 \nTable 4- 5: Mbeere IK Weather Indicators (Source: Masinde, 2018) .................. 109 \nTable 4- 6: List of sensor modules. ....................................................................... 112 \nTable 6- 1: Indigenous animal, plants, meteorological, astronomical indicators \nincluded in the expert \nsystem.…………………………………………………………………………. \n142 \nTable 6- 2: Certainty Factor (CF) ranking scale.................................................. 142 \nTable 6- 3: Representation of natural indicators and observation in O-A-V form.\n ............................................................................................................................... 143 \nTable 6- 4: A random dataset of users input. ...................................................... 152 \nTable 6- 5: Rule R28 in the knowledge base. ....................................................... 153 \n \n \n\nxxix \n \nList of Publications \nAs outcome of this research, the author of this thesis is the first author of the \ncurrent published papers listed below.  \nPaper A: \nAkanbi, A. K. & Masinde, M. (2015, December). Towards semantic \nintegration of heterogeneous sensor data with indigenous knowledge \nfor drought forecasting. In Proceedings of the Doctoral Symposium of \nthe 16th International Middleware Conference (p. 2). ACM. \nPaper B: \nAkanbi, A. K. & Masinde, M. (2015, December). A Framework for \nAccurate Drought Forecasting System Using Semantics-Based Data \nIntegration Middleware. In International Conference on e-\nInfrastructure and e-Services for Developing Countries (pp. 106-110). \nSpringer, Cham. \nPaper C: \nAkanbi, A. K. & Masinde, M. (2018, May). Semantic Interoperability \nMiddleware Architecture for Heterogeneous Environmental Data \nSources. In 2018 IST-Africa Week Conference (IST-Africa) (pp. Page-\n1). IEEE. \nPaper D: \nAkanbi, A. & Masinde, M. (2018). IKON-OWL: Using Ontologies for \nKnowledge Representation of Local Indigenous Knowledge on \nDrought. In proceedings of the 24th Americas Conference on \nInformation Systems (AMCIS 2018), New Orleans, Louisiana, US. \nPaper E: \nAkanbi, A. K. & Masinde, M. (2018, August). Towards the \nDevelopment of a Rule-based Drought Early Warning Expert \nSystems using Indigenous Knowledge. In 2018 International \nConference on Advances in Big Data, Computing and Data \nCommunication Systems (icABCD) (pp. 1-8). IEEE. \n \n \n\n1 \n \nCHAPTER ONE \nINTRODUCTION \n1.1. Background Information and Motivation \nThe past half-century has witnessed rapid advancement in various areas of \nInformation Communication and Technology (ICT) (Atzori, Iera & Morabito, \n2010), with smart environments now representing the next evolutionary \ndevelopment step in the home and environmental monitoring systems. The notion \nof an intelligent environment evolves from the definition of ubiquitous systems. \nAccording to Van der Veer and Wiles (2008), it promotes the idea of “a physical \nworld that is richly and invisibly interwoven with sensors, actuators, displays, and \ncomputing element seamlessly in the everyday objects of our lives, and connected \nthrough a continuous network.” Enabling technologies needed for the realisation \nof this concept is multifaceted and most especially involves wireless \ncommunication, \nalgorithm \ndesign, \nmulti-layered \nsoftware \narchitecture \n(middleware), event-processing engines, sensors, semantic web, knowledge \ngraphs, and adaptive control, amongst others. Currently, the integration of all \nthese technologies has inherent challenges, mostly due to heterogeneity in \nubiquitous components. The expectation that networks of heterogeneous smart \ndevices and services can be integrated to form an interoperable information \nsystem is driving the need for broad agreement or solutions on data integration \nand interoperability across software boundaries (Berners-Lee, Hendler & Lassila, \n2001). \nIn this PhD research, the focus is on environmental monitoring domain, with \ndrought forecasting and prediction as a case study. Droughts are currently ranked \nnumber one (Guha-Sapir, Vos, Below & Ponserre, 2012) in terms of negative \nimpacts, compared to other natural disasters such as floods, hurricanes, \nearthquakes and epidemics. They are now more rampant, severe and have become \nsynonymous with Sub-Saharan Africa, where they are a significant contributor to \nthe acute food insecurity in the region (Guha-Sapir et al., 2012). Though this is not \ndifferent from other areas of the world, the uniqueness of the problem in the Sub-\n\n2 \n \nSaharan Africa countries is the ineffectiveness of the drought monitoring and \npredicting tools in use in these countries. Droughts are very difficult to predict; \nthey creep slowly and last longest of all-natural phenomena. The complex nature \nof droughts from onset to termination has made it acquire the title \"the creeping \ndisaster\" (Mishra & Singh, 2010). The greatest challenge is designing a prediction \nand forecasting systems which can track information about the 'what', 'where' and \n'when' of environmental phenomena and the representation of the various \ndynamic aspects of thereof (Peuquet & Duan, 1995). The representation of such \nphenomena requires a better understanding of the 'process' that leads to the \n'event'. For example, a soil moisture sensor is used to measure the property, soil \nmoisture. The measured property can also be influenced by the temperature heat \nindex measured over the observed period. This makes an accurate prediction based \non these sensor values almost impossible without understanding the semantics \nand relationships that exist between these various properties. \nTechnological advancement in Wireless Sensor Networks (WSN) and Internet of \nThings (IoT) has facilitated efficient monitoring of environmental properties \nirrespective of the geographical location. However, in current IoT/WSN solutions, \nenvironmental parameters are measured using heterogeneous sensors that are \nmostly distributed in different locations. Further, different abstruse terms and \nvocabulary in most cases are used to denote the same observed property, thereby \nleading to data heterogeneity (Kuhn, 2005; Akanbi & Masinde, 2015a; Devaraju, \n2005) with different data representation formats and communication protocol. \nHowever, effective forecasting and prediction of a complex environmental \nphenomenon such as drought involve combining diverse data sources (for example, \nsensor data, weather station data, geospatial data, satellite imagery, indigenous \nknowledge) for accurate forecasting information – which might still not be fool-\nproof.  \nMoreover, in order to increase the level of accuracy of drought forecasting and \nprediction systems, scientists in the field of anthropology, conservation biology and \nagriculture have been discussing the possibility of integrating indigenous \nknowledge on drought with scientific drought prediction knowledge (Ludwig, \n\n3 \n \n2016). Furthermore, research (Mugabe et al., 2010; Masinde, 2015) on indigenous \nknowledge (IK) on droughts has pointed to the fact that local IK in a geographic \narea can imply the likely occurrence of a drought event over time (Sillitoe, 1998), \nfor example, worms like Sifennefene worms and plants like the Mugaa tree in \nKenya could indicate drier or wetter conditions. However, researchers have often \nfocused on differences between knowledge systems. Recent debates about how \nknowledge integration will benefit the weather forecasting/prediction domain \ncannot be overemphasised (Ludwig, 2016; Fogwill, Alberts & Keet, 2012). \nIndigenous knowledge (IK) has been in existence since the dawn of civilisation but \nseems to have been forgotten and currently on its way to its extinction, although \ndevelopment of new scientific knowledge is rapid, beneficial and well-documented. \nIK, on the other hand, is oral, scattered and unstructured knowledge and used by \nlocal indigenous people in certain geographic locations from generations to \ngenerations (Masinde, 2015). The possible integration of this ancient method with \nmodern methods is significant, but will not be possible until full knowledge \nrepresentation of the domain is fully achieved. \nMany local communities and tribal farmers in Africa (and indeed, elsewhere in the \nworld) have developed their intricate native systems of natural indicators for \nprediction. The Indigenous Knowledge System (IKS) is also used for local-level \nenvironmentally related decision-making in many rural communities as opposed \nto scientific knowledge. A typical example of the indigenous knowledge is the local \nIK on drought, which comprises the use of a variety of natural indicators \nassociated with the environment for drought forecasting and prediction (Masinde, \n2015). The local farmers in the community have relied on the IKS and their \nexperience on drought for their farming decision-making. The indicators for the \nindigenous knowledge are from elderly farmers observations and years of use – \nmaking these farmers IK experts of that locality.  Integrating this knowledge with \nmodern drought forecasting models will increase the accuracy level currently \nhampered by the variability of scientific weather data (observation/simulation \ndata) and the difficulty in achieving the desired level of scalability (Díaz et al., \n2015, Reid et al., 2005). \n\n4 \n \nAlthough modern scientific knowledge and methods have dominated the drought \nforecasting and prediction sphere, Fogwill et al. (2012) argue that modern science \nand technology with the help of indigenous knowledge will increase the level of \naccuracy. Hence, achieving the curation of quality vocabularies that will facilitate \nthe detailed understanding of the natural indicators associated with drought \nforecasting in the local indigenous domain is essential. Studies such as the natural \nbehaviour and ecological interactions between different species of insects and \nanimals in a particular region can be used to infer drought forecast accurately and \nimportantly in developing an accurate drought early warning system for the \nregion. The most important method of collecting data on behaviour and ecological \ninteraction is through detailed observation (Krebs & Davies, 2009). These \nobservations, known by the IK experts, are shared orally. The data include the \nnames of the animal and plant species, their relationships, and their behavioural \ntendencies due to weather changes. \nHence, this study envisages a very large unstructured knowledge base that \ncaptures how the weather influences the natural indicators, and the ecological \ninteractions between different species of animals/plants with the environment for \ngenerating inference. However, due to lack of vocabulary standardisation brought \nabout by heterogeneity and the use of local terminology and languages, analysts \nface significant challenges when attempting to analyse and integrate the \nindigenous knowledge data with the scientific knowledge base. This can be solved \nby attributing semantic annotation and representation of the IK using an \nontology. Analysing the ecological interaction using ontology will provide \ndescriptive and explanatory knowledge that will be useful in weather forecasts \nand climate predictions. The formal representation of indigenous knowledge, \ntherefore, promises “access to a large amount of information and experience that \nhas been previously ignored, or treated as mysticism” (Ludwig, 2016). The \nknowledge, with its empirically derived emphasis on the natural world, can \nprovide scientifically testable insights into drought forecasting (Manyanhaire, \n2015). \n\n5 \n \nConsidering the aforementioned, it can be concluded that the key to improving the \naccuracy of forecasting a drought event is the understanding of 'space-time' \ninteractions of variables with processes, ontology representation of the domain \nand semantic integration of the heterogeneous sensor data with indigenous \nknowledge for efficient drought forecasting. Eventually, this leads to the \nprocessing and integration of a large amount of heterogeneous data from multiple \nsources. These factors encouraged the researcher to study and implement efficient \nways to achieve heterogeneous data integration, interoperability for purpose of \ngenerating a more accurate drought prediction, and forecasting inference in \nenvironmental monitoring domain through a mediator-based system. \n1.2. Problem Statement \nIn order to achieve heterogeneous data integration and interoperability in the \nenvironmental monitoring domain, semantic levels interoperability offers the \ntechnologies needed for enabling the same meaning to an exchange piece of data \nto be shared by communicating nodes, are currently lacking. This can be achieved \nthrough the representation of the data in a machine-readable format using \nknowledge representation and automated reasoning for accurate predictions and \nforecast. Moreover, modern sensory and legacy devices in communication systems \nwere open systems built using the manufacturer's unique data and communication \nstandards and thus require common semantics-level interoperability solutions. \nThe following problems and hypothesis were identified as a major bottleneck for \nthe utilisation of semantic technologies for drought forecasting: \na) The current lack of ontology-based middleware for the semantic \nrepresentation of environmental data and processes:  \n• Hypothesis: Ontological modelling of key concepts of environmental \nphenomena such as an object, state, process and event can ensure the \ndrawing of accurate inferences from the sequence of processes that \nlead to an event. At presently, what is missing is an environmental \nontology with well-defined vocabularies that allow the explicit \nrepresentation of the process, events and also attach semantics to the \nparticipants in the environmental domain. The developed semantic \n\n6 \n \nmiddleware prototype will enhance efficient integration and \ninteroperability \nof \nheterogeneous \ndata, \nfacilitate \nease \nof \ncommunication \nof \nweather/drought \ndata/information \nbetween \ndifferent \nplatform/domain \nthrough \nstandardised \nsemantic \nannotation, and generate a more accurate drought forecast and \nprediction inference from the data inputs. \nb) Lack of semantic integration of heterogeneous data sources for accurate \nenvironmental forecasting:  \n• Hypothesis: An environmental monitoring system made up of \ninterconnected heterogeneous weather information sources such as \nsensors, mobile phones, conventional weather stations and IK could \nimprove the accuracy of environmental forecasting by providing \nenvironmental data streams required to be semantically represented \nfor seamless data integration with existing indigenous knowledge. \nLocal indigenous knowledge of drought is relevant to contextualise \nthe occurrence of a climate event in the area under study based on \nthe ecological integration of the natural indicators. This integration \nwill improve the accuracy of drought prediction.  \nc) Lack of effective drought forecasts communication and dissemination \nchannels:  \n• Hypothesis: There is a lack of effective dissemination channels for \ndrought forecasting information across various channels for \nutilisation by policymakers or analysts. For example, drought \nforecast information should be available in a standardised format \nthat could be accessed through an application programming interface \n(APIs) for dissemination via notifications hubs, smart apps, \ndocuments (dB), or cloud repository for offline analysis. \n \n1.3. Research Questions and Objectives \nTo solve the above research problems, the following research questions were taken \ninto consideration for the heterogeneous data integration and interoperability: \n\n7 \n \na) RQ1: To what extent does the adoption of knowledge representation and \nsemantic technology in the development of a middleware enable seamless \nsharing and exchange of data among heterogeneous IoT entities? \nb) RQ2: \nWhat \nare \nthe \nmain \ncomponents \nof \nan \nimplementation \nframework/architecture that employs a distributed middleware for the \nimplementation of a heterogeneous data drought early warning systems \n(DEWS)? \nc) RQ3: What method is currently suitable to predict drought event given a \ncombination of heterogeneous sensor data with indigenous knowledge on \ndrought for an accurate drought forecasting system? \nIn order to answer the above questions, the main objective of this research was \nlaid out as follows “to develop a semantic middleware for heterogeneous data \nintegration and interoperability – using local indigenous knowledge on drought \nand wireless sensor data”. This overall objective was demarcated using the \nfollowing sub-objectives: \na) RO1: To identify aspects of indigenous knowledge used for drought \nprediction by three selected communities in Kenya and South Africa. \nb) RO2: To develop an IoT framework for the use of WSN in environmental \nmonitoring and use it to collect relevant data. \nc) RO3: To develop a distributed semantics-based data integration \nmiddleware framework for heterogeneous data integration and generation \nof accurate inference. \nd) RO4: To use relevant ontology to represent and integrate the indigenous \nknowledge identified in RO1 and sensor data collected in RO2. \ne) RO5: To develop a drought early warning system application prototype and \nuse it to test and evaluate RO4. \n \n1.4. The Solution Approach – A Case Study \nIn this research, to test the solution’s applicability and validity, a case study is \nconsidered (Benbasat, Goldstein & Mead, 1987). The case study investigated is \ndrought forecasting and prediction in the environmental monitoring domain. It is \n\n8 \n \nused to study the heterogeneous data integration, interoperability of services as \nwell as to develop and evaluate the proposed solution. The approach is based on \nfive distributed functional groups (FG) of the middleware: data acquisition, data \nstorage, stream analytics, inference engine and data publishing. The first FG – \ndata acquisition was achieved through the adoption of ITIKI framework (Masinde, \n2015). The data storage FG was based on cloud-based data storage infrastructure, \nwhile the stream analytics FG was used for real-time stream processing of the \nsensor data using a complex event processing engine (CEP engine) based on open \nsource Apache Kafka. Furthermore, the inference engine FG is used for computing \nvarious forecasts and achieved through distributed services with an inference \nengine as the core. On the other hand, the data storage FG is used to disseminate \nthe output using a standardised format. The solution was tested and validated \nusing actual indigenous knowledge and weather data acquired in two study areas \nin Kenya and South Africa. \n1.5. Limitation of the Research Scope \nThe focus of this research thesis is restricted to drought forecasting and prediction \nin the environmental monitoring domain. It does not focus on the verification and \nvalidation of the local indigenous knowledge acquired in the areas under study \nbecause this was not possible within the time frame of this study. Besides, \nalthough indigenous knowledge on drought was used to test the semantic \nmiddleware, the comprehensive collection of all the indigenous knowledge on \ndrought is outside the scope of this project. Finally, this research did not consider \nor aim to develop appropriate security mechanisms to secure communication \nchannels or data transmissions in the system. \n1.6. Significance and Contributions of the Study \nThis research has made a significant contribution to the scientific knowledge \nthrough the novel approach of performing heterogeneous data integration using \nsemantic technologies for the environmental monitoring domain. The main \ncontributions of this thesis are summarised as follows.  \n\n9 \n \nThe thesis presents a semantics-based data integration middleware framework \nthat addresses the challenges of heterogeneous data integration and \ninteroperability. This framework facilitated the semantic representation of the \ndata sources eliminating data heterogeneity and created a model with a unified \ndata format. \nIn this thesis, a domain ontology called Indigenous Knowledge on Drought \nDomain ONtology (IKON), was developed for the local indigenous knowledge on \ndrought. This ontology provides a machine-readable format of the domain. This \ndomain ontology is based on Descriptive Ontology for Linguistic and Cognitive \nEngineering (DOLCE), and available in Resource Descriptive Framework (RDF) \nand Web Ontology Language (OWL) format.  \nA complete and tested implementation of semantic middleware for the integration \nand interoperability of heterogeneous data sources for drought forecasting and the \nprediction was presented. A method for real-time processing of environmental \nmonitoring sensor data channelled through a streaming platform was also \ndeveloped and presented.  \nA rule-based drought early warning expert (RB-DEWES) sub-system that could \nbe implemented as a standalone system with customisable Graphical User \nInterface (GUI) for end users was developed, implemented and presented, and the \nimplementation of a more accurate semantics-based drought early warning \nsystems (DEWS) based on the semantic middleware for the study area was \npresented. \n1.7. Evaluation Criteria \nTo evaluate this research, each objective was tested against the research \noutcomes. The case studies used were adopted to evaluate the research objectives \nas a measure of the quality and reliability in the form of verification and validation \n(V&V). The verification involves evaluating the research project to ensure it \nsatisfies the research objectives; and the validation involves using necessary \nvalidation metrics to quantify the research processes. \n\n10 \n \n1.8. Structure of the Thesis \nThe thesis is divided into eight chapters; besides the current chapter, the other \nchapters are as follows: \na) Chapter Two presents a comprehensive literature review of the concepts \nand technologies relevant to this thesis. It explains the use of local \nindigenous knowledge on drought, drought forecasting and prediction \nconcepts, including related works that have been conducted by researchers.  \nb) Chapter Three presents the methodology followed in executing this \nresearch; it also presents the semantic middleware framework. The main \naim of this chapter is to explain the research methodologies and presents \nthe overview of the distributed middleware which comprised five different \nfunctional groups, all working in an orchestrated manner towards achieving \nthe aim and objectives of this research. \nc) Chapters Four, Five, and Six are dedicated to the functional groups. \nThat is, Chapter Four explains the implementation of Data acquisition FG \nfor heterogenous data (structured and unstructured collection. Chapter \nFive covers knowledge modelling and representation of the data sources \nusing semantic annotation and representation in a machine-readable \nlanguage. It presents the developed domain ontology for local indigenous \nknowledge on drought and sensor data. Chapter Six focuses on the \nautomated reasoning systems of the semantic middleware. It presents the \nInference Engine FG and Stream Analytics FG of the semantic middleware. \nAlso presented were the inference engine and automated reasoners, \nincluding the developed GUI prototype for utilising the reasoners.  \nd) Chapter Seven presented the implementation and data pipelining of the \ndistributed semantic middleware. Discussion on the results, including an \nevaluation of the developed middleware prototype against the user \nrequirements, and usability evaluation was presented. \ne) Chapter Eight concludes the thesis by briefly summarising the \ncontributions of the research work and evaluation of the research against \nthe research objectives. The concluding remarks and future research \ndirection were presented.\n\n11 \n \nCHAPTER TWO \nBACKGROUND AND RELATED WORK \n2.1. Introduction \nThis chapter is divided into two parts: background and related work. The first part \nstarts with presenting the overview of the background challenges that necessitate \nthis research using a case study approach. A detailed overview of the theoretical \nconcepts and technological ideas employed in achieving the main contribution of \nthis thesis is also presented. The second part presents the related works carried \nout by other researchers towards solving the research challenges identified in \nChapter One of this thesis.  \n2.2. Background \nThe very heterogeneity of data presents challenges by hampering the full \nrealisation of heterogeneous data integration and services interoperability \npotentials (Kuhn, 2005). These challenges are due to the lack of ability to combine \nmultiple data residing in different autonomous information silos for effective use. \nThis is because of incompatible data exchange or representation format. Data \nintegration has been a decades-old issue, from legacy systems to modern \ninformation systems, with the goal being to combine disparate sets of data into \nmeaningful information. Currently, with the rise of the Internet of Things (IoT)-\nenabled devices, different devices are generating a large scale of heterogeneous \ndata sets at an unprecedented level with the challenge becoming grimmer than \never. \nIn a typical IoT realm, billions of day-to-day things ranging from physical to \nvirtual objects/devices are joining online networks. Enabling technologies needed \nfor identification, sensing and communication drive the success of IoT, include the \ninternet itself, as well as sensors and communication modules. WSNs is a critical \ncomponent for achieving IoT; it provides the sensing capabilities to collect \ninformation about the physical environment without any pre-set physical \ninfrastructure (Akanbi & Masinde, 2015b). This results in extensive amounts of \n\n12 \n \nheterogeneous data that could be presented in a seamless and easily interpretable \nform. \nThe IoT provides the ability to remotely sense objects using a wireless network \ninfrastructure (Atzori et al., 2010). This has the potential of creating opportunities \nfor more direct integration of physical objects with computer-based systems, \nresulting in improved accuracy, better analytics and understanding. However, \nbuilding an IoT application requires the integration of multiple components in \nsuch array of sensors (with communications modules) and networks. However, \nconsidering each component’s use of different underlying proprietary technology \nor data representation formats, the challenges continue.  \nDespite the above challenges, the applications of IoT technologies are numerous \nand diverse, as IoT solutions are increasingly adopted in virtually all aspects of \nlife. The effective impact of IoT technologies transgresses the unit-value created \nby individually connected products. Instead, the extensive functionality of \nintegrated IoT products creates an intelligent system. For instance, in the \nenvironmental monitoring domain, a connected sensor may become part of a farm \nequipment system, which could include, for example among other things, a \nsprinkler system, hydroponics, manure spreaders, or actuators that monitors \nvarious key environmental parameters. Moreover, integration or the combination \nof multiple systems or sub-systems may lead to systems of systems, providing \ninsightful analytics (Bartolomeo, 2014). \nThe main enabling factor for this promising paradigm of IoT is, however, the \ninteroperability of several technologies, seamless data sharing and ease of \ncommunication. Conceptually, the most viable solution that can facilitate this \neffective data sharing and integration is the representation of data in a machine-\nreadable format, i.e. transformation of the data into semantically annotated data \nwith detailed metadata representation for seamless communication between \nresources/things irrespective of the domain (Kuhn, 2009; Guarino, Oberle & Staab, \n2009). This enabling factor is the thrust of this thesis – it focuses on the integration \nof heterogeneous data sources for drought forecasting and prediction. \n\n13 \n \nThe process of turning the heterogeneous data that in form of local indigenous \nknowledge on drought, as well as WSN data, into useful information, involves a \nseries of five steps. These are: (1) knowledge representation of the domain, (2) \nsemantic representation of the data, (3) integration of the knowledge sources, (4) \nautomated inference generation systems, (5) data analytics, and information \nutilisation. This realisation further depends on a multitude of distributed services \nwith semantic referencing of data at the core to enable ease of communication and \ninteroperability among different things irrespective of the domain. This scenario \nis implemented in the form of a drought early warning systems that integrates \nheterogeneous data sources using available technology seamless data integration \nand services interoperability. \n \n \n\n14 \n \n2.2.1. The Concept of Drought \nDrought is a naturally occurring climate phenomenon that impacts human and \nenvironmental activity globally and is considered to be one of the costliest and \nmost widespread of natural disasters (Smith & Katz, 2013; Below, Grover-Kopec \n& Dilley, 2007). In terms of negative impacts, droughts are currently ranked \nnumber one (Wilhite & Glantz, 1985, Guha-Sapir et al., 2012). Compared to other \nnatural disasters such as floods, hurricanes, earthquakes and epidemics, droughts \nare very difficult to predict; they creep slowly and last longest. According to \nEspinoza et al. (2011), drought qualifies as a hazard because it is a natural \nincidence of erratic occurrence but of recognisable recurrence and as a disaster.  \nDrought is a result of precipitation deficiency, which causes disruption of the \nwater supply to the natural and agricultural ecosystems (Mohamed, 2011). \nHowever, drought is a natural environmental phenomenon, and its recurrence in \nsusceptible areas is almost inevitable (Mishra & Desai, 2006; Gana, 2003). \nHowever, lack of definite characteristics of drought is a major dilemma for the \nscientific and policy-making community and is preventing a detailed \nunderstanding of the drought phenomenon. The absence of an accurate and precise \ndefinition of drought has been an obstacle to understanding drought, which has \nled to indecision and inaction on the part of the individuals concerned managers, \npolicy-makers (Wilhite & Glantz, 1985; Wilhite et al., 1986). \nDrought can be termed as a normal, recurrent feature of climate, which is \nsometimes rare and occurs randomly. The occurrence of drought in a particular \ngeographic area varies from region to regions. Drought is a creeping disaster; it \noccurs when there is less than normal precipitation over an extended period of \ntime, usually a season or more (Dea & Scoones, 2003). The lack of or reduced water \ninput causes water shortages to various activities that require water in the \necosystem such as agricultural irrigation, animal use, and other (Edossa, Woyessa \n& Welderufael, 2014). Drought can also occur when the temperature is higher than \nnormal for a sustained period; this results in higher evapotranspiration (i.e., \nevaporation and transpiration) than the precipitation. The increase in the \nevaporation cycle makes water vapour in the air for precipitation but contributes \n\n15 \n \nto drying over some land areas, leaving less moisture in the soil. However, drought \nis not a disaster for nature itself. It is a sequence of events that causes drought, \nwhich makes forecasting and predicting it quite complicated without the area of \nnecessary data with the desired level of variability and scalability (Edossa, \nWoyessa & Welderufael, 2016). \nIt is generally said that there is no universally accepted definition of drought. In \n1965, Palmer came to this conclusion that \"Drought means various things to \nvarious people depending on their specific interest. To the farmer, drought means \na shortage of moisture in the root zone of his crops. To the hydrologist, it suggests \nbelow average water levels in the streams, lakes, reservoirs, and the like. To the \neconomist, it means a shortage which affects the established economy” (Palmer, \n1965). Irrespective of the accepted definition, drought can be classified separately \nas meteorological, agricultural, hydrological, and socioeconomic drought (Wayne, \n1965). In this thesis, drought is generally referred to as based on the conceptual \ndefinition provided by Palmer (1965). \n2.2.1.1 \nCauses of Drought \nThe causes of drought are multi-faceted, as, with many environmental \nphenomena: there is never only one, but multiple causes. Therefore, in order to \nunderstand the phenomenon, it must be treated as a manifestation of several \nfactors (Welderufael, Woyessa & Edossa, 2013). While drought may usually be \ncaused by common environmental parameters, such as weather systems and the \nlike, there must be a detailed understanding of the ecological interaction \nindicating its likely onset. In modern times, drought is forecast using forecasting \nmodels and indices with environmental parameters such as soil moisture level, \ntemperature, rainfall level, evapo-transpiration, all of which help in determining \nthe severity of the drought on a larger scale. For example, Figure 2-1 depicts the \ndrought and flood prediction modelling output representation for the African \ncontinent. However, in ancient times, these environmental parameters were \nobserved through natural indicators or signs, which helped to understand the \nonset of drought at a lower level of scalability.  \n\n16 \n \n \nFigure 2- 1: The colour shows the severity of droughts index, red – significant \npositive trend (towards drier conditions) and green – significant negative trend \n(towards wetter conditions) (Source: African Flood and Drought Monitor) \n2.2.1.2 \nImpacts, Cost, and Complexity of Droughts \nDrought is a slow-onset natural hazard that has meaningful impact on many \nsectors of the economy, with the resulting impact exceeding the area experiencing \nphysical drought. This compound effect exists because water is crucial to society's \nsurvivability. The complexity of impacts is largely caused by the primordial \ndependence on water directly or indirectly. \nDrought impacts can, however, be classified as either direct or indirect (Mishra & \nDesai, 2006). This classification is borne out of the impact assessment of the \ndrought and the resulting consequences on humans and the environment. The \ndirect impacts include crop loss, deforestation, the risk of reduced water levels, \nfire, and damage to animal and fish habitat. The effect of these direct impacts \nconsequently leads to the indirect impacts (Wilhite, Svoboda & Hayes, 2007). For \n\n17 \n \nexample, lack of crop growth ultimately leads to scarcity and increase in the price \nof agro-foods and commodities. \nHypothetically, drought prediction tools could be used to determine drought \ndevelopment patterns as early as possible and provide information to farmers and \npolicy makers to develop mitigation strategies to reduce the negative effect.  \n2.2.1.3 \nDrought Prediction Model and Indices \nIn modern methods of drought prediction and forecasting, all categories of drought \nare based on drought severity indices for prediction or modelling. According to \nWilhite (2007), the severity of a drought is determined by the drought duration \nand probability distribution of the drought variables. It is therefore, of great \nimportance to consider temporal parameters with different categories of drought.  \nMeteorological drought is a result of precipitation deficit and duration of the \nperiod, simply expressed in terms of lack of rainfall in relation to some average \namount and duration of the drought period (Ceglar, 2008). The severity is defined \nin the form of indices such as the Palmer Drought Severity Index (PDSI), \nStandardised Precipitation Index (SPI) and Surface Water Supply Index (SWSI). \nAgricultural drought on its own refers to an insufficient soil moisture level to meet \nthe plant needs for water during the vegetation period (Ceglar, 2008). The main \nassessment of agricultural drought requires the calculation of water balance on a \nweekly time scale during the growing season. The severity of agricultural drought \ncan be calculated using indices such as the Agro-hydropotential (AHP), Moisture \nAvailability Index, Dry day Sequences, Generalized Hydrologic Model, and Crop \nMoisture Index. \nHydrological drought occurs after a longer period of precipitation deficit, caused \nby periods of lack of rain or shortfall on surface and subsurface water supply. It is \ncommon understanding that lack of precipitation has a consequent effect on \ngroundwater, soil moisture, snowpack, and streamflow, which led to the \ndevelopment of the Standardised Precipitation Index (SPI) (McKee, Doesken, & \nKleist, 1993). \n\n18 \n \nEach category of drought has a specialised type of drought-forecasting indices; \nhowever, in this research, the focus will be on the use of the Effective Drought \nIndex (EDI). The EDI encompasses hydrological, agricultural and meteorological \ndrought.  Moreover, it is different from the rest of the indices due to the fact that \nit calculates drought on a daily basis. \n \n \n\n19 \n \nEffective Drought Index (EDI) \nThe EDI is an agricultural, meteorological and hydrological drought index \ndeveloped by Byun and Wilhite (1999) and addresses the shortcomings of the SPI.  \nIt is used to calculate 30 years mean effective precipitation (EP) and mean effective \nprecipitation (MEP) for each calendar year. The Deviation of EP (DEP) is a \nmeasure of the difference between EP and MEP. When DEP is negative, it \nindicates ‘dryer than average’ (Byun & Wilhite, 1999).  \n𝐸𝐸𝐸𝐸𝐸𝐸= ∑\n[(∑\n𝑃𝑃𝑃𝑃)/𝑛𝑛]\n𝑛𝑛\n𝑚𝑚−1\n𝑖𝑖\n𝑛𝑛−1\n (Equation 2-1) \n𝐷𝐷𝐷𝐷𝐷𝐷𝑛𝑛= 𝐸𝐸𝐸𝐸𝑛𝑛− 𝑀𝑀𝑀𝑀𝑀𝑀𝑛𝑛 \n(Equation 2-2) \n𝐸𝐸𝐸𝐸𝐸𝐸𝑛𝑛= 𝐷𝐷𝐷𝐷𝐷𝐷𝑛𝑛  / 𝑆𝑆𝑆𝑆 (𝐷𝐷𝐷𝐷𝐷𝐷𝑛𝑛)  (Equation 2-3) \nWhere EPi  represents the valid accumulations of precipitation of each day, \naccumulated for n days, Pm is the precipitation for m days, 𝑚𝑚= 𝑛𝑛. In Equation 1,  \nif 𝑚𝑚/𝑛𝑛 =  365, then, EP is the precipitation for the calender year divided by 365. \nDEPn in Equation 2 represents a deviation of EPn from the mean of EPn (MEP) – \ntypically a 30-year average of the EP. EDIn  in Equation 3 represents the Effective \nDrought Index, calculated by dividing the DEP by the standard deviation of DEP \n– SD (DEPn) for the specified period. After the calculation, the output is associated \nwith different categories of the EDI (Table 2-1). Therefore, the categorisation of \nthe drought phenomenon has to do with the computed values of the EDI. The table \nbelow itemises the different categories of drought based on the EDI value. \nTable 2- 1: Classification of drought categories using EDI (Source: Wilhite, 1999). \nDrought Classes \nCriterion \nExtreme Drought \nEDI ≤ 2.0 \nSevere drought \n-2.0 ≤ EDI ≤ -1.5 \nModerate drought \n-1.5 ≤ EDI ≤ -1.0 \nNear normal drought \n-1.0 ≤ EDI ≤ 1.0 \n \n2.2.1.4 \nLocal Indigenous Knowledge on Drought \n\n20 \n \nLocal indigenous knowledge is the knowledge, ways of life, methods and practices \nof indigenous and local communities around the world. This knowledge mostly \ncalled indigenous knowledge (IK) is developed and harnessed over years and \ncenturies. Local knowledge is transmitted orally from generation to generation \n(Masinde, 2015). However, it is mostly shared in the form of folklore, proverbs, \nteachings, cultural values, beliefs, rituals, and local language. It is widely adopted \nin the local community and applied day-to-day activities such as agricultural \npractices, food preparation, natural resources management, education, and a host \nof other activities in rural communities (Warren, Brokensha & Slikkerveer, 1991). \nIndigenous knowledge (IK) as local knowledge is unique to a given culture, society \nor tribe. Such knowledge is passed down from generation to generation (Simpson, \n2000). Indigenous knowledge has value in the local geographical area and has \nbecome valuable for scientists for a better understanding of the rural localities. \nThe application of IK in drought forecasting involves the utilisation of local \nknowledge on local weather and climate. This local knowledge is assessed, \ninterpreted and predicted by locally observed indicators and experiences using \ncombinations of plant, animals, insects and meteorological and astronomical \nindications (Boef, Amanor, Wellard & Bebbington, 1993). \nResearch in the field of IK is aimed at explicitly understanding the connections \nbetween local people’s understandings and practices and those of scientific \nknowledge, notably in the environmental monitoring domain and agriculture \n(Brokensha, Warren & Werner 1980; Warren & Cashman, 1988; Wamalwa, 1989). \nIn recent years, more efforts are necessary on way to accurately forecast drought \nthrough the use of every relevant available heterogeneous data source (Akanbi & \nMasinde, 2015b). This is necessary to mitigate the disastrous effect of drought in \na particular geographic area using data sources or knowledge models that offer \nthe required level of scalability and variability for accurate drought predictions. \nNature of Indigenous Knowledge on Drought Forecasting \nIndigenous knowledge is similar to scientific knowledge in that both attempt to \nmake sense of the world and to render it understandable to the human mind. \nThese knowledge bases are based on observations and generalisations derived \n\n21 \n \nfrom those observations. According to Berkes, Folke and Gadgil (1994), IK differs \nfrom scientific knowledge in its: \na) reliance on qualitative information; \nb) lack of empirical facts; \nc) reliance on experimental trial-and-error, rather than on systematic \nexperiments; \nd) lack of interest in building theoretical framework. \nHowever, it appears that IK differs from scientific knowledge in being moral, \nspiritual, holistic and intuitive, with large social context. The major strength of IK \nlies in long time-series of observations on a geographical area. The veracity of the \nknowledge is based on long time-series as opposed to short time-series over a large \narea. The two kinds of data may be incompatible, but could be complementary \nwhen fully integrated. There is great potential value in a historical series of \nobservations about particular areas based on knowledge passed from generation \nto generation provided the geographical area has not been drastically perturbed. \nThe local community has developed this local indigenous knowledge system (IKS) \nover the years from their understanding of the environment and used it for \nforecasting based on the variance of different natural indicators (Masinde & \nBagula, 2010). These are used to increase the validity of the rainy season \nindicators.  This category of indicators is used to forecast short-term (in hours or \ndays) trends. IK forecasting is based on observing historical trends; this is one of \nthe IK principles whose reliability is currently under threat due to the increased \nseverity and frequency of droughts over the last decades across the entire world \n(Mutua et al., 2011). IK on drought forecasting in most indigenous communities \nfalls into six general categories: (1) seasonal patterns; (2) behavioural properties \nof animals, insects and birds; (3) astronomical; (4) meteorological; (5) human \nnature and behaviour; and (6) behaviour of plants/trees (Masinde, 2015). \nIndigenous Drought Forecasts in African Communities \nAccording to some studies (Ziervogel & Opere 2010; Murphy et al., 2011; Ajibade \n& Shokemi, 2003; Luseno et al., 2003; Roncoli 2006; ISDR, 2006; Roncoli, Orlove, \n\n22 \n \nKabugo & Waiswa, 2011; Mercer, Kelman, Taranis & Suchet‐Pearson, 2010), most \nAfrican communities observe natural indicators such as clouds, wind and \nlightning; others watch the behaviour of livestock, wildlife, local flora, the \necological indicators interactions as early warning signs to predict the \nenvironment based on their local IK. They also observed changing seasons as well \nas lunar cycles (shape or position of the moon and patterns of stars). Other \nexamples are: (1) mating of animals as a sign of plenty of rains to come (Roos, \nChigeza & Van Niekerk, 2010; Masinde, 2012); (2) wind direction before rainfall \n(Masinde, 2015; Ajibade & Shokemi, 2003). \nIdentification of Local Indigenous Knowledge on Drought Indicators \nThe concept of a local indigenous knowledge system is based on several ecological \ninteractions and observations in the environment called indicators. These local so-\ncalled indicators serve as pointers to the likely occurrence of an environmental \nphenomenon in a pre-/post-observational scenario. The local indicators for the \nindigenous knowledge on drought are categorised according to the astronomical, \nmeteorological, mythological and behavioural weather indicators (Table 2-2) \n(Masinde & Bagula, 2011; Masinde, 2015; Mwagha & Masinde, 2016; Mugabe et \nal., 2010). \nTable 2- 2: Categorisation of Local Indigenous Knowledge on Drought (Source: \nMasinde, 2015). \nIndigenous \nKnowledge \nCategory \nCategory \nof \nLocal \nIndicators \nby \nProperty \nAstronomical \nSighting of the moon, sighting of the stars, \nphases of the moon, clearness of the night \nsky, cloud levels, sun brightness. \nMeteorological  \nKnowledge of the seasons, weather \npatterns, rain, temperature, humidity, \nprecipitation, dryness, windy, cloudy. \nBehaviours of birds \nFlocking of birds, sighting of the birds \n\n23 \n \nBehaviours of insects \nPresence and occurrence of insects after \nenvironmental events. \nBehaviours of animals \nThe weight of animals, the sighting of \nanimals \nBehaviours of floral and non-floral \nplants \nWithering, flowering, growth, fruiting. \n \nThrough the application of knowledge modelling and representation, each local \nindicator category has a comprising object(s) and corresponding attributes that \nexhibit the local indicator. An example instance, the flocking of the \nPhezukomkhono bird – a migratory bird sighted seasonally in the area under \nstudy. The notion of classification of the indicators based on the exhibited \nproperties is necessitated for proper classification and the purpose of defining the \ntaxonomy. The properties of the moon, for example, varies between the full/half to \nvisible/dark moon transition, the properties for the classification of the object – the \nmoon would be a full moon, half-moon. (Mwagha, 2017).  \nThe combination(s) of several of these local indigenous indicators observations \nscenarios have a meaningful interpretation for forecasting drought in the local \nindigenous knowledge systems of the area under study and help to achieve the \ndesired level of scalability in improving the accuracy of drought prediction and \nforecasting. \n \n2.2.1.5. Indigenous Knowledge versus Modern Science on Droughts \nSince the advent of modern science, drought management strategies are largely \nbased on modern knowledge or technology at the expense of indigenous knowledge \nsystems. Environmental phenomena such as droughts are complex and given \nvarious challenges in scientific weather and climate forecasting, such as lack of \nthe desired level of scalability, indigenous knowledge (IK) is proposed to \ncomplement modern scientific knowledge (Masinde & Bagula, 2010). Collectively, \nthis heterogeneous knowledge base represents a dynamic and localised \n\n24 \n \ninformation dataset that can support most rural communities to adapt to the \nchanging and varying climates (Nyong, Adesina & Elasha, 2007).  \nThe advanced modern technologies of weather forecasting and predictions are still \nelusive (Luseno et al., 2003; Mugabe et al., 2010; Masinde, 2015).  Implementing \nmodern drought prediction technologies such as weather stations, IoT monitoring \nsystems, WSN solutions are still a costly affair for most African countries due to \nthe associated cost challenges for implementation and maintenance.  \n2.2.1.6. Application of IoT/WSN for Drought Forecasting and Prediction \nThe basic idea behind the IoT paradigm is the interconnectivity of various generic \nobjects to be integrated into a unified framework. According to Atzori et al., (2010), \n‘Internet of Things’ means the integration of various internet-enabled \nheterogeneous interconnected devices or objects for effective data sharing and \nmachine-to-machine communication. With the advancement of technology, the \nsignificant potential of WSN has facilitated its use in environmental monitoring \nand habitat monitoring systems (Masinde, Bagula & Muthama, 2012). \nWSNs are networks of interconnected sensors that monitor environmental \nphenomena in geographic space irrespective of the topographical location (Figure \n2-2). They have become an invaluable component of realising an IoT-based \nenvironmental monitoring system; they form the 'digital skin' through which to \nFigure 2- 2: WSN Network (Source: Author). \n\n25 \n \n'sense' and collect the context of the surroundings and provides information on the \nprocess leading to environmental phenomena such as drought and weather \nchanges (Akanbi & Masinde, 2015b). However, these environmental properties are \nmeasured by various heterogeneous sensors of different modalities in distributed \nlocations making up the WSN, using different terms in most cases to denote the \nsame observed property.  \nMoreover, with these potentials, lack of unique addressing and semantic \nrepresentation of sensor data are one of the most important bottlenecks \nhampering the realisation of the effective IoT visions and objectives, this is closely \nfollowed by security. This is due to different manufacturers, using different data \nlanguages; resulting in data formats that are incompatible with each other \n(Akanbi & Masinde, 2015b), causing a lack of seamless data integration and use. \nTraditionally, the easiest way to address interoperability is to define standards \n(Kosanke, 2006). Several standards have been created to cope with the data \nheterogeneities. Examples are the Sensor Markup Language (SensorML) \n(http://www.opengeospatial.org/standards) and  Observations and Measurements \nEncoding Standard, WaterML (Valentine, Taylor & Zaslavsky, 2012, and \nAmerican \nFederal \nGeographic \nData \n(FGDC) \nStandard \n(https://www.fgdc.gov/metadata).  \nThese standards provide sensor data to a predefined application in a standardised \nformat and hence do not solve data heterogeneity. The promising technology to \ntackle these problems of heterogeneity and integration of ubiquitous data sources \nis semantic technologies. Semantic technologies have a stronger approach to \ninteroperability than contemporary standards-based approaches (Oberle, 2004; \nAkanbi & Masinde, 2015b). It creates knowledge representation models that are \ngeneral to allow meaningful information exchange among machines through \ndetailed semantic referencing of metadata. It utilises Resource Description \nFramework (RDF) and Ontology Web Language (OWL) for seamless data sharing \nand integration in an event-driven way and adopted for use in this thesis towards \nachieving heterogeneous data integration for effective drought forecasting and \nprediction systems. \n\n26 \n \n \n \n2.2.1.7. Drought Early Warning Systems \nDrought Early Warning System (DEWS) is a variant of Early Warning Systems \n(EWS) for drought disaster management, forecasting with necessary mitigation \nstrategies (Wilk, Andersson, Graham, Wikner, Mokwatlo & Petja, 2017). \nAccording to UNISDR (2009) “Early warning is a major element of disaster risk \nreduction.” The adoption of an early warning system can prevent loss of life and \nreduce the impacts of disastrous events. However, the effectiveness of early \nwarning systems is tantamount to the active participation of people and \ncommunities at risk; monitoring of the risk via accurate warning systems; \ndissemination and communication of warning systems and adequate response \ncapability or mitigation plans (UNISDR, 2009; Rogers & Tsirkunov, 2011). These \nfour key elements of EWS depicted in Figure 2-3 is based on the Hyogo Framework \nfor Action (UNISDR, 2005), which was adopted by the World Conference on \nDisaster Reduction in Hyogo, Japan in 2005.  The development of an intelligent \ndrought forecasting and decision support systems is important to achieving the \nFigure 2- 3: Key element of an early warning system (Source: Rogers & Tsirkunov, 2011) \n\n27 \n \nkey element of an EWS highlighted under the Hyogo Framework (Leonard, \nJohnston, Paton, Christianson, Becker, & Keys, 2008). The thesis proposed the \ndevelopment of a semantics-based drought early warning systems (SB-DEWS) to \naddress the important key elements of an EWS. \nCurrent systems that address droughts are multi-faceted, and drought forecasting \nis not the main functionality of the systems.  Examples of such systems are the \nFamine Early Warning System (FEWS-Net) (Verdin, Funk, Senay & Choularton, \n2005), which provides monthly famine and droughts reports on in Eastern Africa. \nThere is no one single early warning system (known to the author) dedicated to \ntackling droughts in Africa. Other such systems described by (Rashid, 2009) are \nGlobal Information and Early Warning System on Food and Agriculture (GIEWS) \nby Food and Agriculture Organisation (FAO), and Humanitarian Early Warning \nService (HEWS) by World Food Programme (WFP). At national levels, the U.S. \nDrought Monitor is the best-known drought early warning system, while the most \nrelevant (to this research) system is the East Asian drought monitoring system \nthat makes use of the Effective Drought Index to describe the spatial and temporal \ndistribution of droughts in East Asia (Oh, Kim, Choi & Byun, 2010). \n2.2.2. Semantics-based Drought Early Warning Systems (SB-DEWS) \nA semantics-based drought early warning system (SB-DEWS) is a form of an \n(EWS) specifically tailored for the provision of timely, accurate and effective \ndrought forecasting information through semantic integration of heterogeneous \ndata sources, that allows generation of deductive inference from an understanding \nof 'space-time' interactions of environmental variables in the form of rules.  \nIn this case study of SB-DEWS, the indigenous knowledge on drought is collected \nthrough the various data collection tools from the IK experts; the data are \nanalysed to determine the patterns of the hazard, effects, and the vulnerability in \nthe area under study. The knowledge is gathered, and facts in the form of rules \nare identified. The rules identified are used to create the risk assessment and \nindicators or signs of potential occurrence. Natural drought indicators in the form \nof rules, and ecological interaction in the form of events, obtained from the domain \nexperts of the study area are semantically represented and integrated to predict \n\n28 \n \nfuture occurrence using advanced technological solutions using a stream \nprocessing engine and an inference engine module. \n The inferred warnings outputs called Drought Forecast Advisory Information \n(DFAI) is disseminated through multiple communication channels via notification \nhubs, mobile USSD services, web apps, logic apps etc. The disseminated DFAI \ninformation is interpreted by the policymakers who are the intended target for the \noutputs. \n \n2.2.2.1. \n Semantic Technology \nSemantic technology consists of a set of methods and tools for discovering in-depth \nrelationships within varied categorised data sets (Sheth & Ramakrishnan, 2003).  \nThis technology ensures the discovery of meaning (semantics) within data. The \ngoal of Semantic technology is to make the machine to understand the data by \nencoding of semantics with the data through the use of machine-readable \nlanguages to represent a data or knowledge base (Domingue, Fensel & Hendler, \n2011). \nThe structure of semantic technology is based on the Semantic Web Stack. This \nstack illustrates the architecture of the semantic technology from the semantic \nrepresentation of knowledge up to the application in Semantic Web (WEB 3.0). \nThe Semantic Web initiative is mostly a collaborative movement led by \nFigure 2- 4: The Semantic Web Stack (Source: www.W3C.org) \n\n29 \n \ninternational standards body; the World Wide Web Consortium (W3C). It \npromotes intelligent data formats on the World Wide Web. By encouraging the \ninclusion of semantic content in web pages, the Semantic Web aims at converting \nthe current web, dominated by unstructured and semi-structured documents into \na \"web of data\" to ensure integration and interoperability (Sheth & \nRamakrishnan, 2003). Figure 2-4 represents the semantic web stack. \nThe middle layer of the Semantic Web stack describes the different formats for \nrepresenting information in intelligent information systems, using technologies \nstandardised by W3C for accurate knowledge representation. These technologies \nformally represent the meaning involved in information using languages that can \nbe read by machines called machine-readable languages, well-known technologies \nare Resource Description Framework (RDF), Resource Description Framework \nSchema (RDFS), Web Language (OWL), SPARQL and Rule Interchange Format \n(RIF). Semantic technologies provide a new level of depth that offers more \nintelligent understanding of a knowledge base. \n2.2.2.2. \nSemantic Representation \nThe concept of how meaning and knowledge is represented has been a critical \nfactor for effective communication since the dawn of humankind. According to \n(Vigliocco, Meteyard, Andrews & Kousta, 2009), the most important questions that \narose from this concept are: (1) conceptual meanings related to conceptual \nstructures? (2) How is the meaning of each word represented? (3) How are the \nmeanings of different words related to one another? (4) Can the same principles of \norganisation hold in different content domains (e.g., words referring to objects, \nwords referring to actions, words referring to properties). Researchers concur that \na clear understanding and answers to these questions will maximize the \nutilisation of unstructured knowledge, such as indigenous knowledge and ensure \neffective integration and interoperability. This is achieved through appropriate \nknowledge management and transformation of the knowledge base into a model. \n2.2.2.3. \nKnowledge Management \n\n30 \n \nKnowledge management is a vast discipline that deals with how people, process \nand technology come together for the utilisation of knowledge gathered or \nacquired. This entails the use of the right information and knowledge at the right \ntime in the right context and the appropriate format. This is essential in this \nresearch study because knowledge management works by transforming data and \ninformation which comes from all available sources into reusable knowledge. For \nthe sake of this research, various types of knowledge identified in the literature \nare explained briefly (Alavi & Leidner, 2001). Knowledge tends to come in pairs \nand often is the antithesis of each other: \na) A Priori: A priori is a term which means “from before” or “from earlier. It is \na term that emaciated from epistemology (the study of knowledge). A priori \nknowledge is a knowledge that can be derived from the world without any \nform of experience. For example, a mathematical calculation of “2+5=?” can \neasily be derived without physically finding objects to count to get the \nanswer. Mathematical equations are a typical example of priori knowledge. \nb) Posteriori: This is the antithesis of priori and means “from what comes \nlater” or “from what comes after.” This type of knowledge experienced \nthrough the use of inductive reasoning to gain knowledge. \nc) Explicit Knowledge: It is the knowledge an individual hold consciously in \nmental focus – knowledge identified in documents, images, audio-visual \ncontents etc. This type of knowledge is easier to interpret and consumed \nexternally. \nd) Implicit Knowledge: This type of knowledge can be captured externally, it \nis based on experience and intuition, for example, capturing a domain \nknowledge be interviewing the domain expert in a particular domain.  \ne) Tacit knowledge: The knowledge gained from personal experience; it \nrepresents an internalised knowledge. This form of knowledge varies from \nindividual to individual and comprises of experience and intuition; very \ndifficult to express but can be captured externally. \nThe knowledge inferred or gathered in this research can be categorised based on \nthe categories above, which indicates its lifecycle for use and application. \n\n31 \n \n2.2.2.4. \nKnowledge Lifecycle \nTypically, knowledge can be expressed in a two-dimensional life cycle, similar to \nsoftware development (Studer, Benjamins & Fensel, 1998). The first phase is the \ninnovation phase, and the second is the sharing phase. The innovation phase \ncaptures the lifecycle of the knowledge as it develops – how the new knowledge is \ncreated, represented and applied for use. On the other hand, there is the sharing \nphase, which involves identifying and capturing of the knowledge; organisation of \nunstructured knowledge in a structured format for consumption; dissemination of \nthe structured knowledge in a form which is sharable externally to groups and \nused by intelligent information systems; and utilisation for decision-making \nprocesses. \nWhy Capture Knowledge?  \nKnowledge access is important when needed and in the right format. Essentially, \nappropriate knowledge representation ensures the ease of information/knowledge \nsearch, access, share and reuse. Also, the capturing of knowledge is important \nbecause the cost of losing knowledge is great and significant (Van Vlaenderen, \n2000). A typical example of this case is the indigenous knowledge (IK), which is \ncurrently going into extinction due to the adoption of modern methods. It is \ntherefore, important to capture, organise and store this knowledge (IK) as it helps \nto make the utilisation of the knowledge more efficient and competitive for \nimmediate and future use (Van Vlaenderen, 2000). \n2.2.2.5. \n Knowledge Model \n\n32 \n \nA knowledge model is similar to a mind map generated from human thoughts. \nThese thoughts have been used during the course of human life to create what is \ncalled a mind map. A mind map is an illustration showing the interconnection of \nthoughts towards achieving an objective. The mind map is used to conceptualise \nconcept and ideas by providing detailed relationships between concepts in the \ndomain of discourse. This ensures a more meaningful interpretation of the \nconcepts into something that is more interpretable. The possibility of breaking \ndown information or ideas in a mind map into knowledge that is more \ninterpretable by humans and machine is quite beneficial (Studer, Benjamins & \nFensel, 1998), i.e. the information would be shared more easily by humans and \noffers a better way of sharing the information and meanings across machines \n(coded mind maps). This would ensure reasoning capabilities and more robust \ninteraction between humans and machines based on the knowledge model.  \nIn a nutshell, the knowledge modelling of information is called an ontology, where \nthe knowledge representation is multivariate and multidimensional (Smith, \n2003). An ontology is a mind map with an added structure that allows the \nrepresentation of a domain and the meaning of concepts to be clearer. A knowledge \nmodel or ontology can be a visual representation (for human beings to view in the \nform of mind map) to understand and share, or a coded representation for the \nmachine and intelligent systems’ interpretation. A knowledge model allows the \nFigure 2- 5: Knowledge lifecycle (Source: Studer, Benjamins & Fensel, 1998) \n\n33 \n \nformalisation and capturing of the essence configuration and interrelationship of \na subject matter. \n \nFigure 2- 6: Conceptual representation between Mind Map, Knowledge Model, \nHumans and Machines (Source: Author). \nKnowledge access is important when needed and in the right format. Essentially, \nappropriate knowledge representation ensures the ease of information/knowledge \nsearch, access, share and reuse. Also, the capturing of knowledge is important \nbecause the cost of losing knowledge is significant. A typical example of this case \nis the local indigenous knowledge (IK), which is currently going into extinction \nowing to the adoption of modern methods. Therefore, it is important to capture, \norganise and store this knowledge (IK) as it helps to make the utilisation of the \nknowledge more efficient and competitive for immediate and future use. \n2.2.2.6. \nOntology \nThe concept of ontology in computer science is different from that in philosophy. \nAccording to Guarino, Oberle and Staab (2009), ontology is an explicit, formal \nspecification of a shared conceptualisation to represent a specific domain of \nknowledge or discourse in a more typical way. An ontology defines terms with \nwhich to represent knowledge. \n\n34 \n \nOntology can provide formal semantic knowledge representation for the local \nindigenous knowledge. Moreover, since ontologies explicitly define the content of \nknowledge by formal sources, they ensure the integration and interoperability \nbetween these sources. Furthermore, ontologies can be used to detached domain \nknowledge \nfrom \napplication-based \nknowledge \nin \ninformation-providing \napplications (Segaran, Evans & Taylor, 2009). The basic structural elements of \nontology are namely: \na) Class is the collection of similar concepts related to a specific domain of \nknowledge; they can be a real object or abstract object concepts. Their \nattributes describe classes; meaning individuals populating a class shared \ncommon attributes. The class can be described in a formal, semi-formal or \ninformal way, with preference given to formal ontologies. The formal \ndescription is a machine-understandable representation, for example class \nof animal, class of insect. \nb) Properties are special attributes whose values are the object of (other) \nclasses. It can be further divided into object properties and datatype \nproperties. \nc) Instances are the members (individuals) of the class and are the structural \ncomponent of an ontology. \nd) Axioms are rules that cannot be expressed with the help of other \ncomponents. \nIn clear terms, an ontology can be an agreed blueprint for knowledge \nrepresentation that has been designed to be interpretable by humans and \nmachines. Ontology can be utilised and applied to meet the various needs, such as \nthe perfect capturing of the meaning (semantics), domain representation, building \ncontrolled vocabulary, modelling etc. Several ontology languages have been \ndeveloped with W3C standards, for example RDF, RDFS, OWL, DAML, and OIL. \nCreating a Domain Ontology (Informal Representation) \nThere are several types of ontology, ranging from upper ontology, application \nontology, domain ontology to task ontology (Guarino, 1998; Noy & McGuinness, \n2001). Figure 2-7 depicts these types of ontology. A domain or task ontology is built \n\n35 \n \nusing an existing foundational ontology as a blueprint. In this thesis, a domain \nontology will facilitate knowledge representation of the heterogeneous data \nsources. Hence, domain ontology provides vocabulary about the objects and \nconcepts of a domain and their relationships (Berners-Lee, Hendler & Lassila, \n2001). According to Guarino (1998) and Smith (2003), the ontology design or \nmodelling approach is an iterative process that repeats continuously to improve \nthe developed ontology; there are several stages involved which can be revisited if \nflaws detected are during the ontology design life cycle. \nThe first step towards the development of a domain ontology is the determination \nof the ontology scope. This elaborates on what type of questions should be \nanswered by the knowledge representation of the ontology and its re-usability. \nReusing data or knowledge improves the quality of the development process. The \nnext step in the iterative process is the development of the terminology about the \ndomain; these are done by reviewing related published papers and interviewing \nthe IK domain experts through questionnaires, workshops, and mobile apps. \nSemi-Formal Representation \nThe easiest way to develop semi-formal models for ontology is by applying logic, \nfor example propositional logic (PL); first-order logic (FOL), descriptive logic (DL). \nThe simplest type of logic is PL. In PL, the world consists of simple facts and \nFigure 2- 7: Level of abstraction in ontology development (Source: Guarino, \n1998). \n\n36 \n \nnothing else, i.e. statement of assertions. An example of PL assertions and \ndeductions based on local IK are: \n1) If Mugumo tree flowers, there would be bumper harvest; \n2) If it does not flower, there won’t be a bumper harvest. \nIn PL, simple deductions can be made from the assertions. However, one problem \nin PL is that it only allows for making statements and assertions about a single \nobject; it does not allow the summarisation of objects into a set of classes, or \nmaking a statement about a set of things. FOL is much more powerful than PL: in \nFOL, there are quantifiers/quantors that allow assertions about a set of objects, \nwithout naming the objects explicitly. This means there is the ability to make \ninductions out of a set of statements and infer implicit knowledge. For instance, \nconsidering the set of statements below, by understanding the assertion of the \nstatements (1) and (2), implicit knowledge can be deduced from this statement to \nform statement (3). \n1) All crops need water to survive. \n2) Lettuce is a crop. \n3) Lettuce needs water to survive. \nFOL is a perfectly appropriate ontologies description, but the major disadvantages \nof FOL are that it is too expressive, too bulky for modelling because there are many \ninterpretations that can be deduced from same knowledge in various forms, and \ntoo complex to prove the correctness or completeness of assertions. \nFormal Representation of Domain Ontology \n\n37 \n \nThe formal representation of a domain ontology knowledge base in detailed \nsemantic annotation enables integration, interoperability, ease of data sharing \namong different platforms and eliminating data heterogeneity (Kuhn, 2005, Kuhn, \n2009). It represents the unstructured data in a machine-readable language to \nfacilitate effective use and integration. The manual ontology design process is \ncostly and cumbersome. Therefore, an automated support system for ontology \ndesign is most often used. This involves the use of various software suites such as \nOntoEdit, KAON, and Protégé.  \n2.2.2.7. \nKnowledge Modelling of Heterogeneous Data Sources (D1 & \nD2) \nAlthough modern scientific knowledge and methods are widely adopted in drought \nforecasting. Masinde (2014), Fogwill et al. (2012), Manyanhaire (2015), Coetzer, \nMoodley & Gerber (2014) and Akanbi & Masinde (2015b) all argue that modern \nscience and technology, with the help of indigenous knowledge, will increase the \nlevel of accuracy of drought forecasting systems. Then, how can meaningful \ndescriptions of environmental events be inferred from observations in the form of \nindigenous knowledge and sensor data? This research is tasked with identifying \nFigure 2- 8: A screenshot of Protégé IDE (Source: Author). \n\n38 \n \nquality vocabularies that will facilitate the detailed understanding of the natural \nindicators associated with drought forecasting in the local indigenous domain \n(Akanbi & Masinde, 2015b). Currently, there is a lack of common definitions in \nterminology and semantically rich data representation models.  \nAs stated earlier, there are two ways of representing a knowledge model: visual \nrepresentation and coded representation. While visual representation is perfect for \nhuman interpretation and understanding, it is not suited for the machine and \nintelligent systems because visual representations are not encoded in a \nstandardised format and well-defined languages that computer understand and \ninterpret. A coded representation of indigenous knowledge and sensor readings \nusing ontologies are necessary and important to make knowledge models \nmeaningful and interpretable by computers. However, during the deliberation of \nthe representation formalism for encoding knowledge models, detailed \nconsideration was given to the level of expressivity of the standardised language, \nthe semantics of the language and the mathematical rigour of the language, and \nhence, this research study has adopted the use of RDFa and OWL. Both \nstandardised formal languages exhibit a high level of formality and expressivity, \nwhich are adequate for representing the heterogeneous data sources (D1 & D2) in \nknowledge models. Also, both standardised formal languages can be translated to \nJSON-LD for effective data communication between functional groups of the \nmiddleware without the loss of syntactic and semantic expressivity through the \nREST Manager. \n\n39 \n \n \nFigure 2- 9: Knowledge Representation Languages with a level of formality and \ndegree of expressivity (Source: Berners-Lee, Hendler & Lassila, 2001) \nFurthermore, the existing generic foundational ontology was used in the \ndevelopment of a domain ontology for local IK on drought and WSN sensor data. \nThere are several top-level ontologies such as DOLCE, SUMO and BFO, which \nprovide the standardised classification of very general concepts. This research \ntends to adopt DOLCE as the foundational ontology – because it provides relevant \ngeneral notions under which the research domain concepts can be classified. \nDOLCE Foundational Ontology \nThe Descriptive Ontology for Linguistic and Cognitive Engineering (DOLCE) \n(Masolo, Borgo, Gangemi, Guarino, Oltramari & Schneider, 2003; Borgo & Masolo, \n2010) is adopted as the foundational ontology for building the ontologies for the \nheterogeneous data sources (D1 & D2). DOCLE (Figure 2-10) embraces a pluralist \nperspective (Masolo et al., 2003). The choice of DOLCE is because it provides most \nof the general notions for classifying the research domains concepts for the local \nindigenous knowledge on drought domain (D1) and to ensure ontology alignment \nwith Semantic Sensor Network (SSN) ontology that will be adopted for the WSN \n\n40 \n \ndomain (D2). Moreover, DOLCE has been widely adopted as the starting point for \nbuilding an ontology in several ontology development initiatives (Kuhn, 2009; \nProbst, Gordon, Dornelas, 2006; Borgo, Cesta, Orlandini & Umbrico, 2016; \nDevaraju, 2009; Moreira, Pires, van Sinderen & Costa, 2017; Ludwig, 2016) in \ngeospatial and sensing domains. \nDOLCE aims to capture and represent the intuitive and cognitive bias underlying \nentities while recognising standard considerations. The top-level categories of \nDOLCE are endurant, perdurant, quality and abstract (Masolo et al., 2003). \nEntities belonging to the endurant category are wholes at any time they are \npresent, but at a certain instance of time, the same endurant may acquire or lose \nnew parts and are subject to changes, for example, a floral plant such as \nflowering plant, and blooming or withering of the flowers (Masolo et al., 2003). \nPerdurant is the category of entities that extends over time, at any time at which \nthey exist they are only partially present, i.e., they can either be eventive \noccurrences such as drought and stative occurrences such as raining, etc. \nQualities are physical or temporal (time-related) properties perceived or \nmeasure, for example, the temperature, duration of a rainfall, etc. Masolo et al. \n(2003) state “A participation relation holds between an endurant and a \nperdurant. A physical-quality is inherent-in a physical-endurant, whereas \na temporal-quality is inherent-in a perdurant.” The taxonomy of the domain \nFigure 2- 10: Descriptive Ontology for Linguistic and Cognitive Engineering (DOLCE) \n(Source: Masolo et al., 2003). \n\n41 \n \nconcepts will be constructed using the DOLCE ontology classifications (Figure 2-\n10), and the knowledge is modelled and encoded using Protégé. \n \n \n \n\n42 \n \nIndigenous Knowledge on Drought ONtology (IKON) \nThe Indigenous Knowledge on Drought ONtology (IKON) is part of the main \ncontribution of this thesis, and it is a domain ontology that semantically \nrepresents the indigenous knowledge on drought based on DOLCE foundational \nontology, and fully compatible with intelligent information systems also \nextendable for reuse. The detailed development is in Chapter Five. \nW3C Semantic Sensor Network (SSN) Ontology \nThe Semantic Sensor Network (SSN) ontology was developed by the W3C. It is an \nontology for the formalisation, representation of sensors, their readings \n(observations), the methods, the features of interest, and the observed properties \nin a wireless network and IoT domain (Compton et al., 2012). It also aligns other \nontologies and standards such as OGC SensorML, SEMSOS and SWAMO \n(Ganzha, Paprzycki, Pawlowski, Szmeja & Wasielewska, 2016). It shares the same \nconceptualisation with DOLCE, which enhances perfect alignment with IKON. \nThe SSN ontology provides a knowledge representation of the main concept of the \ndomain, which is the sensing device (sensors) and models the event and temporal \nrelationships. The sensors measure the environmental parameters and produce \nthe measurements in real-time. However, while sensor data may be published as \nraw data, integrating and interpreting these data require more than just the \nobservation results. Ontological representation of the sensors and their \nobservations would enable the generation of deductive inference and improved \nreasoning capabilities (Poslad, Middleton, Chaves, Tao, Necmioglu & Bügel, 2015).  \n2.2.3. Inference Generation Systems and Reasoners \nThe fast development of the Internet of Things (IoT) sensors presents new \nchallenges to Big Data platforms for performing real-time data analytics. For \ninstance, in the environmental monitoring domain, deployed ubiquitous sensors \nforming Wireless Sensor Networks (WSN) generate huge streams of data that \nneeds to be processed and analysed in real time to infer environmental events due \nto the time-sensitive nature of the data. Event processing of sensors data streams \nensures enhanced analytic functionality, which provides a meaningful insight \n\n43 \n \nfrom IoT data and increases the productivity of processes for real-time utilisation \nof data (Cugola & Margara, 2012). In the domain of local IK on drought, the \nknowledge is in the  form of indicators, rules and events, considering the \npracticability of implementing an inference system for this domain, where the only \nsuitable option is using an inference engine of rule-based expert systems in \nperforming a deductive inference based on the acquired rules. The two inference \ngeneration components for the proposed distributed middleware are presented \nbelow:  \n2.2.3.1. \n Stream Processing  \nEvent Processing (EP) as an emergent research area is saddled with the goal of \nanalysing a set of data either in batch – collected over a period of time or stream \ndata fed to the processing engine – to extract meaningful insights, patterns and \nevents in real-time without (the need of) committing this huge data stream to the \ndatabase. This is achieved through the processing of raw data streams coming \nfrom diverse, heterogeneous data sources represented in a different data format \nin real-time through a processing engine based on predefined model or logic to \nidentify likely events or future scenarios. For example, processing set soil moisture \nreadings will automatically trigger a notification alert when it exceeds a certain \nthreshold in real-time based on the specified limit. EP can be broadly addressed \nby Event Stream Processing (ESP) and Complex Event Processing (CEP) \n(Clemente & Lozano-Tello, 2018; Demers, Gehrke, Panda, Riedewald, Sharma & \nWhite, 2007; Flouris, Giatrakos, Deligiannakis, Garofalakis, Kamp & Mock, 2017). \nIrrespective of the category of the EP, EP uses time frames and use-case in the big \ndata infrastructure to solve the problem using predictive and descriptive analytics. \nStream Processing (SP) is focused on analysing data streams from an event \nproducer (for example, sensors) using a data analytics platform (engine and \ninfrastructure) to detect and extract meaningful insights, patterns and events in \nreal-time without (the need of) committing this huge data stream to the database. \nSP is important for real-time data analytics of continuous data streams from IoT \nsources (Demers et al., 2007; Zhou, Simmhan & Prasanna, 2017). The huge \nvolumes of data generated by IoT systems earned the title, ‘Big Data’. These \n\n44 \n \nvoluminous streams of sensor data are often characterised by the 5-Vs of Big Data \n– Volume, Variety, Value, Veracity and Velocity (Kao & Garcia-Molina, 1994). \nHowever, through efficient analysis of the diverse data from heterogeneous \nsources, the potential of the 5-Vs could be harnessed in providing meaningful \ninsights for predictive analysis. This is achieved through online data stream \nprocessing, which takes into account the sensors' observations with temporal \nattributes in the form of time-value pairs for predicting events. This research used \nApache Kafka; other common types of Event Stream Processing Engine are Apache \nSamza, Apache Storm, Apache Flume, Amazon Kinesis, and Apache Flink.  \nComplex Event Processing (CEP) on the other hand, is another side of the same \ncoin used to analyse complex event rather than simple patterns from streams of \nsensor data. The capability of CEP engines over contemporary intelligent systems \nis the ability to carry out real-time analysis based on event pattern identification \nor matching from a data stream or sequence(s) of observations using initially \nspecified models/logic. Events are triggered by multiple raw sensors data that are \ndetected at the back-end server of the sensor-based systems. In this context, CEP \nis a form of stream processing technique which ingests raw data from several \nsensor data streams to detect various complex events through the use of \ndeclarative query language similar to SQL, called Event Processing Language \n(EPL). The EPL is used to continuously queries the incoming observations in real-\ntime. The flow of unbounded data streams are aggregated in temporal bounds of \ndata window, and the use of additional query constructs in EPL provides the \nability to infer Complex Events (CE). Consecutively, the CE is identified through \nthe occurrence of a sequence of raw observation which corresponds to a preset \nthreshold of a sensor data. Examples include FiwareCEP (Rodriguez, Cuenca & \nOrtiz, 2018), KSQL, and Oracle EPL. \nApache Kafka \nKafka is an open-source distributed event streaming processing engine by Apache. \nThis streaming processing engine process sensor data streams in real-time to \ndetermine event patterns from incoming sensor’s observation/readings and \ncorrelate the data with predefined/preset value threshold for prediction analysis. \n\n45 \n \nThe platform is similar to an enterprise messaging system based on the ability to \nprocess sensor data streams in a fault-tolerant way as they occur in a producer-\npublish and consumer-subscribe fashion (Figure 2-11). Apache Kafka provides \nreal-time processing of streaming data pipelines using persistent querying \nsystems (KSQL) without the need to commit the data stream to the database like \nconventional systems. This provides a huge benefit in IoT-enabled environmental \nmonitoring systems for real-time monitoring of complex environmental \nphenomenon like drought. \n2.2.3.2. \n Rule-based Expert Systems (RBES) \nRBES uses human expert knowledge to solve real-life challenges in a specific \ndomain (Siler & Buckley, 2005). The domain-specific knowledge is stored in a \nknowledge base in the form of rules; and are usually created by the knowledge \nengineer in conjunction with the domain expert. Rules are expert knowledge in \nthe form of if-then conditional statements. An inference engine component of the \nexpert systems searches for a pattern in the input data that match patterns in the \nFigure 2- 11: Overview of Apache Kafka Ecosystem. (Source: www.apache.org) \n\n46 \n \nrule set to provide answers, predictions and suggestions in the way a human \nexpert would. The if means when “the condition is true”, the then means trigger a \ncorresponding action. Hence, RBES require detailed information about the domain \nand the strategies for applying this information to problem-solving and generating \ninference. \nThe knowledge of expert systems comes from experts (IK holder), and the \nrepresentation of the domain knowledge is in the form of rules. A typical expert \nsystem consists of different sub-components. Each sub-component entails \nperforming functionality for a specific purpose. The expert system integrates all \nsub-components and characterises the drought based on the knowledge base and \ngenerates inference in a form of drought forecasting information. The RBES \nconsists of three basic components (Figure 2-12). They are: \n• the rule base \n• the working memory, and  \n• the inference engine. \n \na) Rule base (knowledge base): This is the set of rules which represent the \nknowledge of the domain (Sasikumar, Ramani, Raman, Anjaneyulu & \nChandrasekar, 2007; Akanbi & Masinde, 2018a). The expert knowledge is \nrepresented in the form of “if antecedents then consequent”. The rule base is \nused to generate inference from a sequence of a pattern from the input data. \nThe general form of a rule is: \nFigure 2- 12: Components of Rule-based System (Source: Sasikumar et al., 2007) \n\n47 \n \n \nIF  \nCondition1 and  \n     \n \nCondition2 and \n     \n \nCondition3 \n  \n \n    … \nTHEN Action1, Action2, Action3…. \n \n \nThe conditions Condition(1-n) are known as antecedents. A rule is triggered \nif all antecedents (Condition(1-n)) are satisfied and consequents (Action(1-n)) \nare executed. However, some RBES allows the use of disjunctions such as \n‘OR’ in the antecedents for complex scenarios before the Action(1-n) can be \nexecuted. \nb) Working memory (WM): is typically used to store the data input or \ninformation about the particular instance of the problem or scenario. The \nWM is the storage medium in a rule-based system and helps the system \nfocus its problem solving (Sasikumar et al., 2007; Akanbi & Masinde, \n2018a).  \nc) Inference Engine: The function of the inference engine is deriving \ninformation or generating reasoning from a given problem using the rules \nin the knowledge base. The inference engine must find the right facts, \ninterpretations, and rules and assemble them correctly. The two basic \nmethods for processing the rules are – Forward-Chaining (data-driven, \nantecedent-driven) and Backward-Chaining (Sasikumar et al., 2007; \nAkanbi & Masinde, 2018a). In forward-chaining, all the facts are input to \nthe systems and the system makes a deductive inference based on the rules \navailable in the rule set. A system exhibits backward chaining if it tries to \nsupport a hypothesis by checking the facts in the rule base trying to prove \nthat clauses are true in a systematic manner.  \n \n2.2.4. Distributed Middleware System \nMiddleware is a software layer composed of a set of sub-layers interposed between \nthe application layer and the physical layer (Pietzuch & Bacon, 2002; Akanbi & \n\n48 \n \nMasinde, 2015b). The whole idea of middleware is to facilitate interoperability \nbetween heterogeneous components (Pietzuch & Bacon, 2002). In distributed \nsystems, it facilitates the integration and interoperability of heterogeneous \ncomponents using a unified data pipeline eliminating data heterogeneity. One of \nthe main challenges of developing a homogenised system with a heterogeneous \ncomponent is developing a middleware between the user of the system and \nheterogeneous devices. Middleware ensures the ease of integrating heterogeneous \ndevices while supporting interoperability within the diverse applications and \nservices (Razzaque et al., 2016).  \nThe middleware for IoT acts like a bond joining heterogeneous domains of \napplication community over heterogeneous interfaces. It also provides Application \nProgramming Interface (API) for communication between layers or modules for \neasy usage and interoperability. Middleware provides seamless services and data \nintegration for a plethora of heterogeneous devices making up the WSN to enable \nthe various components of a WSN to communicate and manage data. Middleware \nsupports application development, data integration, interoperability and service \ndelivery. \nMiddleware \nalso \nenables \ninteroperability \nbetween \ndistributed \napplications that run on different platforms, by supplying services so the \napplication can exchange data in a standardised way. \n \nFigure 2- 13: Overview of the distributed semantics-based data integration \nMiddleware (Source: Author) \nFigure 2-13 depicted the Middleware structure of the proposed semantics-based \ndata integration Middleware. This is a distributed three-tier system architecture \nthat stretches across multiple systems or applications. Examples include \n\n49 \n \ntelecommunications software, messaging-and-queuing software (Apache Kafka), \nand transaction monitors. The proposed Middleware is implemented in the form \nof a DEWS called SB-DEWS and consist of the following sub-systems: Data \nAcquisition FG, Middleware, and the Data Publishing FG. \n2.2.4.1. \nData Acquisition FG \nThis sub-system of the SB-DEWS performs the data acquisition for the \nheterogeneous data sources. The WSN measures the environmental parameters \nand transforms the observation into readings. Appropriate data collection \ninstruments gather the local indigenous knowledge on drought for semi-formal \nrepresentation. The heterogeneous data are transmitted to the next sub-system \nwhich is the semantic Middleware. \n2.2.4.2. \nMiddleware  \nThis sub-system is the core of the SB-DEWS. The Middleware is based on the \ndeveloped proposed heterogenous data integration framework and comprises of \nfunctional groups such as Data Storage FG, Stream Analytics FG and Inference \nEngine FG. The Middleware sub-systems interact with the data from the Data \nAcquisition FG and publishes the output to the Data Publishing FG using \nembedded components that facilitates efficient integration of data and \ninteroperability of services, namely: (1) interface protocols, (2) device abstraction, \n(3) content management, and (4) application abstraction. \na) Interface Protocol: The interface protocol component of the Middleware \nlayer defines protocols for exchanging information among different \nnetworks based on different communications protocols. This component \noversees \nproviding \ntechnical \ninteroperability. \nEnabling \nseamless \nconnectivity \nusing \nthe \nsame \ncommunication \nprotocols \nensures \ninteroperability, for example Apache Kafka Connect and Sink APIs. \nb) Device Abstraction: The device abstraction component is responsible for \nproviding an abstract format to facilitate the interaction of application \ncomponents with the heterogeneous devices. The abstraction layer ensures \nthe integration of the devices by providing syntactic and semantic \n\n50 \n \ninteroperability for the heterogeneous devices and communication networks \nusing unified data pipelines. Veltman (2011) defines syntactic and semantic \ninteroperability as follows: \n• Semantic interoperability is creating a common understanding or \nknowledge of the various content (information) shared across the \nheterogeneous domain.  \n• Syntactic interoperability ensures the data (information) transferred \nby communication protocols must be represented using a well-\ndefined syntax and encoding format such as JavaScript Object \nNotation. \nThus, the device abstraction provides the syntactic and semantic \ninteroperability across the heterogeneous devices and communication \nnetworks in the domain Service Oriented Architecture (SOA) Model. \nc) Content Management: The content management component of the \nmiddleware layer performs context-aware computation using data from \nvarious heterogeneous devices. \nd) Application Abstraction: The application abstraction layer of the \nMiddleware provides the interface for users to interact with devices. \n \n2.2.4.3. \nData Publishing FG \nThe output information from the Middleware is channelled to this FG for \npublishing and dissemination to the policymakers or system analyst for \ninterpretation and use. \n2.2.5. Service-Oriented Architecture \nIn this section, Service-Oriented Architecture (SOA) is presented, which is a \nsoftware architecture used to develop the proposed distributed semantics-based \ndata integration Middleware (SB-DIM). SOA, as a software architecture, allows \nfunctionality and is grouped around the related process and packaged as \ninteroperable services (Nunavath, 2017). The basic principles of SOA are to \nachieve loose coupling among interacting and interconnected heterogeneous \nsoftware components, functional groups (FG) or clusters within a distributed \n\n51 \n \nenvironment. SOA essentially allows the collection of services that communicates \nwith each other using a unified data pipeline. Each service is a well-contained \nprocess that does not depend on the context or state of other services, allowing it \nto be independent of each other with the ability to function as a standalone \napplication. To achieve a common task, services communicate with each other, \nrequesting for input and output data in an orchestrated manner (Krafzig, Banke \n& Slama, 2005). Figure 2-14 presents the layered structure of SOA. The \nadvantages of SOA are; it promotes scalability of individual component or FG and \nallows interaction between all interconnected components. \n \nFigure 2- 14: Elements of SOA (Source: Krafzig, Banke & Slama, 2005). \n2.3. Related Works \nThis section presents the existing efforts towards achieving heterogeneous data \nintegration using standards or technologies related to environmental monitoring \ndomain. In recent years, the amount of data such as computerised data and \ninformation available on the Web has spiralled out of control. Many different \nmodels and formats are being used that are incompatible with each other. \nTraditionally, approved standards are recommended to address interoperability \n(Llaves & Kuhn, 2014). Several standards have been created to cope with the data \nheterogeneities. Examples are data exchange such as EDXL Distribution Element \n\n52 \n \n(EDXL-DE), the Emergency Data Exchange Language Situation Reporting \n(EDXL-SitRep), the Customer Information Quality (CIQ), and National \nInformation Exchange Model (NIEM).  However, these standards provide data to \na predefined application in a standardised format only and hence do not generally \nsolve data heterogeneity.  \nSome of the mentions standards were developed by the Organisation for the \nAdvancement of Structured Information Standards (OASIS) as a standard for \nrepresenting and reporting an emergency in information systems. The current \nshort-coming of these standards is incompatibility with other information \nsystems. In the environmental monitoring domain, there are various geospatial \nstandards such as Geography Markup Language (GML) standard for the \nrepresentation and exchange of geographical information (OpenGeospatial, 2016). \nHowever, the background check of related works has shown existing standards do \nnot solve the challenges of heterogeneous data integration in the environmental \nmonitoring domain.  \nFurthermore, research efforts such as Masinde (2015) has primarily intend to \nutilise data from heterogeneous sources for forecasting and predicting drought. \nAlso, for a more accurate drought prediction, Omidvar and Tahroodi (2019), \nrecently propose a time-series modelling of precipitation data recorded from \nvarieties of stations. Using the precipitation trends, the severity of the drought in \nthe region are determined. The results of the model have acceptable accuracy in \npredicting annual precipitation. \n2.4.  Summary \nThis chapter presents the necessary technological background for addressing \ndrought forecasting using heterogeneous data sources. The concept of drought, \ndrought management, drought prediction models and indices were presented. \nLater, the representation of local indigenous knowledge and WSN data using \nsemantic technology were discussed. Furthermore, the technologies that ensure \nautomated inference generation from the unstructured indigenous knowledge and \nstructured WSN data was described. In this research, the researcher selected the \nmediator-based data integration approach based on a SOA that allows loose \n\n53 \n \ncoupling of services for achieving a common task. Lastly, some existing data \nintegration standards and related works were reviewed as the background for the \nproposed solutions towards the integration of heterogeneous data sources in \nfulfilment of the research objectives listed in Chapter One.\n\n54 \n \nCHAPTER THREE \nRESEARCH DESIGN AND METHODOLOGY \n3.1. \n Introduction \nThis chapter focuses on describing the research design and methodology in detail. \nFirstly, the philosophical paradigms in which the methodology is grounded are \ndiscussed. It presents the framework design and methods adopted in this research; \nit includes research design type, data types, data collection, data pre-processing, \nand ethical considerations. \nAccording to Murton (1998), a research design is the blueprint of a research project \nand provides the guideline for the execution of the design in a stepwise manner. \nWelman, Kruger and Mitchell (2005) defines a methodology as a system of \nmethods, principles, and rules that govern a field of study. The methodology is the \nconstruction process using available methods and tools towards achieving the \nobjective of the research (Ponterotto 2005; Cothran 2011; Houghton, Hunter & \nMeskell 2012; Creswell 2012). The research design to follow and the methodology \nof the research is chosen to support the outcome and importance of the result. \nTherefore, for every research, the underlying research design and research \nmethodology of the research paradigm context needs to be discussed. \nInitiation of research is often to find a solution – or a better solution than exists – \nto a problem or to contribute a novel idea or an invention. As mentioned in Chapter \nOne, this thesis proffers a solution to the problem of lack of heterogeneous data \nintegration and interoperability in the environmental monitoring domain.  \nIn summary, in this chapter, the research design executed is, therefore, reported \nand the distributed semantic middleware framework is presented. This chapter is \norganised into eight (8) sections. Section 3.1 covers the introductory aspect of the \nresearch design and methodology; section 3.2 presents the research design. Section \n3.3 focuses on data collection and analysis methods. Section 3.4 presents the \nsemantic middleware data integration framework and its distributed functional \ngroups (FG). The experimentation process is presented in section 3.5 and \n\n55 \n \nevaluation procedure in section 3.6. The ethical considerations are presented in \nsection 3.7, and section 3.8 presents the summary of the chapter. \n3.2. \n Research Design \nLiterature has shown that there are various methods and means by which to \nachieve the aim and objectives of the research. Straub, Gefen and Boudreau (2004) \nargued, however, that two principal forms of research are exploratory and \nconfirmatory research. Exploratory research is appropriate for research projects \nwith high levels of uncertainty (van Wyk, 2012). On the other hand, confirmatory \nresearch is used to test a priori alternative hypotheses about a subject of discourse, \nfollowed by the development of a research design to test and validate those \nhypotheses, the gathering of the data, data analysis and generation of deductive \ninference from the research (Jaeger & Halliday, 1998).  \n3.2.1. Qualitative vs Quantitative Techniques \nThis research is based on mixed research design where qualitative and \nquantitative techniques (Jaeger & Halliday, 1998) towards achieving the \nobjectives were employed. A qualitative approach was used to gain a detailed \nunderstanding and opinion on the use of local IK on drought for drought prediction \nand forecasting, using unstructured or semi-structured data collection methods. \nThe quantitative approach tested the hypothesis (see Section 1.2), examined the \ncause and effect and made predictions from it. Hence, formulating a research \ndesign for this research is important. \nIn 1999, Burstein and Gregor proposed action-based research design for system \ndevelopment in the field of information systems (IS). Multi-Methodological defines \nthis action-based approach research cycle, which links conceptual and applied \nresearch approaches. The methodology involves three main steps: theory building, \nsystems development, and the use of observation and/or experimentation for \nresearch evaluation. The first step is the theory- building or model-building \nstudies, which involve the design of the conceptual framework for systems based \non the research paradigm. The second step is the system development, which is \nbased on the conceptual model to develop a prototype system for solving the IS \n\n56 \n \nproblem. The last step is the use of observation and/or experimentation for \nresearch evaluation; this comprises five (5) distinct components, namely: \nsignificance, internal validity, external validity, objectivity/confirmability, and \nreliability/dependability /audibility. This criterion set is used to evaluate whether \nthe proposed system successfully met the research objective and goals. \nOn the other hand, there are two spheres of research design (van Wyk, 2012), \nnamely: (1) generating primary data – for example surveys, experiments, case \nstudies, evaluation, ethnographic studies; and (2) analysing existing data – for \nexample text data – content analysis, historical studies, or – numeric data – data \nanalysis, statistical modelling. \nTherefore, based on the objectives described in Chapter One, experimental and \ncase study research design approaches were selected, which would involve the \ngathering of primary data, developing the middleware prototype, implementation \nand evaluation of the system. This is due to the context of the domain of sensor \nnetworks and the unstructured indigenous knowledge data collection. An \nexperimental design is focused on constructing research with a high degree of \nvalidity. However, randomised experimental designs provide the highest levels of \ncausal validity, which is important in validating sensor data readings used in this \nresearch (Mitchell, 2015). The case study design was applied to the validation of \nthe research hypothesis. \n3.2.2. Research Philosophy \nIn addition to being quantitative or qualitative, all research is executed either \nfrom a researcher’s stance or philosophical, based on aspects such as truth and \nvalidity, and that determines acceptable research methods to be adopted (Derose, \n2004; Myers, 1997; van der Merwe, Kotze & Cronje, 2004). According to Guba \n(1990), there is a need to comprehensively specify research design based on \n\n57 \n \nresearch philosophy, which is comprised of five choices on how to execute the \nresearch: 1) Ontology, 2) Epistemology, 3) Methodology, 4) Techniques (data \ngathering), and 5) Data Analysis Approaches.  The terms and the relationship \nbetween them are graphically depicted in Figure 3-1.  \n \n \nFigure 3- 1: Research design steps based on research philosophy (Source: Guba, 1990). \n\n58 \n \n3.2.2.1. \nOntology \nIn this research, the ontological assumption is towards having an intricate \nunderstanding of the indigenous knowledge system on drought, identifying the \nmeaningful indicators behind this century-old system and how this knowledge \nbase can be integrated with modern knowledge for a more accurate drought \nforecasting system. Ontology (nature of reality) is the starting point of all research \nafter which is the epistemological stance, and methodological positions logically \nfollow (Denzin & Lincoln, 2011). For research in information systems, Myers \n(1997), outlines three paradigms, namely positivist, interpretive or critical. This \nresearch takes a positivist view, and from a positivist point of view has the notion \nthat \"Truth\" exists and can be apprehended and measured. This research \nsubscribed to a positivist view that the IK thus exists and can be documented for \nknowledge representation. \n3.2.2.2. \n Epistemology \nSeveral epistemological stances are documented in the literature. According to \nGuba & Lincoln (1994), Bryman (2008), and Kovach (2010), epistemology is the \nbranch of philosophy that deals with the origins, nature, methods and limits of \nknowledge. The researcher and the research paradigm are disconnected and \nindependent of each other for the in-depth and unbiased study of the knowledge \n(Chalmers, 2002). This would ensure the attempts to distinguish between \"what \nis true\" in the knowledge and \"what is false\" are not influenced.  \n3.2.2.3. \n Methodological \nMethodological assumptions are the methods used which include experiments, \ncontent analysis, grounded theory, explanatory research, hypothesis-testing \ntechniques and case study (Saunders, Lewis & Thornhill, 2007). Hence, there is \nno single ‘right’ way to undertake research. \n3.2.3. System Development Methodologies \nThis section presents appropriate software systems methodologies adopted for \ndeveloping various system modules in the overall systems design. The overall \nsystem (semantic middleware) incorporated several distributed modules or \n\n59 \n \nfunctional groups performing a different task using the same set of data, but \nsemantically orchestrated to achieve the goal of effective data integration and \nsystems interoperability.  \n3.2.4. Experimental Design \nAccording to Teddlie & Tashakkori (2009), - “an experiment is a blueprint of the \nprocedure that enables the researcher to test his hypothesis by reaching valid \nconclusions about relationships between independent and dependent variables. It \nrefers to the conceptual framework within which the experiment is conducted.” The \nexperimental design would allow the rigorous testing of the research hypothesis \nby reaching valid conclusions.  \n3.3. \nData Collection and Analysis Methods \nData collection can be defined as the process of collecting information from all the \nrelevant sources towards finding acceptable answers to the research problem, in \nan established systematic fashion to test the hypothesis and evaluate the \noutcomes (Gill, Stewart, Treasure & Chadwick, 2008). Extensive data collection \nimproves the quality of data used for the data analysis and ensures the validity \nand reliability of research results (Cohen, Manion, & Morrison, 2013; Gill et al., \n2008). Data collection methods can be divided into two categories: primary \nmethods of data collection and secondary methods of data collection. \nAccording to Cohen et al. (2013), primary data collection methods can be divided \ninto two groups: quantitative and qualitative. The quantitative data collection and \nanalysis methods include interviews, closed-ended questionnaires, with methods \nof correlation and regression, mean, mode and median, and others. Qualitative \nresearch methods, on the other hand, aim to ensure a greater level of depth of \nunderstanding with data collection methods such as open-ended questionnaires, \nfocus groups, observation and case studies. Qualitative research methods allow a \nbetter understanding of the scenarios, by providing details insights supported by \ndata which are rich and holistic. Secondary data are readily available data already \npublished in books, journals and online portals. The use of an appropriate set of \n\n60 \n \ncriteria to select secondary data is crucial regarding increasing the levels of \nresearch validity and reliability.  \nTwo forms of data were collected for this research — the sensor readings data from \nthe wireless sensor networks and the local indigenous knowledge on drought. \nHence, the research utilised the two data collection categories – primary and \nsecondary – as necessary. The qualitative approach of primary data collection was \nadopted for the use of IK on drought. The quantitative methods were used for \ninvestigating the appropriate knowledge representation of the IK domain and the \nsemantic integration with outputs from appropriate drought indices to predict \ndrought. \n3.3.1. Data Types \nThis research incorporates heterogeneous data for drought prediction. This data \ncomes from two different domains – wireless sensor data and indigenous \nknowledge. The data for the wireless sensor network is structured and represented \nin data representation formats such as XML and JSON. On the other hand, IK is \nmostly unstructured data, available in the oral format. This type of data needed \nto be captured, documented, and represented in a form that can be used for \nknowledge representation, modelling and processing. \n3.3.2. Data Sources  \nThere are two heterogeneous data sources derived from the domain in this \nresearch study. The first domain (D1) is local indigenous knowledge on drought. \nThe data obtained from this domain provides information on IK on drought, which \nis limited and varies from one geographic region to another. An indigenous \ncommunity in a geographic area develops this knowledge system over the years \nand it is traditionally transmitted and shared orally across and within \ngenerations; it includes skills, technologies, practices and beliefs on the natural \nenvironment (World Bank, 2004). The data collection process involves the use of \nboth primary and secondary data collections. The primary data collection involves \nthe use of a participatory research approach involving interactive research \nmethods such as in-depth interviews, questionnaire-based interviews, case \nstudies, focus group discussions and participant observations. The secondary data \n\n61 \n \ninvolves the use of data and information available for the area under study in the \nliterature. The data is categorised based on the scope of meteorological, \nastronomical, behaviour or living things (plants, such as flowers and trees.; \nanimals, such as birds and insects), knowledge of seasons, and mythical beliefs.  \nThe second data source is the sensor data (D2), which is obtained from deployed \nWSN in the area under study. This data is collected from the sensors that monitor \nvarious environmental parameters such as precipitation, soil moisture, \ntemperature and humidity. The experimental prototype of the sensor networks \nprovides data that would be used in the drought analysis model and integrated \nwith local IK for more accurate drought forecasting systems. This involves primary \ndata collection with the intention to obtain accurate readings, backed up with \nscientific validation.  \n3.3.2.1. \n Pilot Study \nA small-scale pilot study was conducted as a preliminary study to evaluate the \nfeasibility, performance and effectiveness of the research study data collection \ntools and the research design. A selected domain expert in the area under study \nwas recruited for the pilot study. An initial test questionnaire (Appendix A) was \ndeveloped by the researcher with the help of the supervisor to compressively \ncapture the demographics of respondents, knowledge of seasons, the indigenous \nknowledge locally indicated (astronomical, meteorological), the implication of \nevent occurrences and behaviours based on the seasonal patterns. The test \nquestionnaire was administered to the selected domain expert to provide feedback \non the ease of use and practicability. The feedback received was beneficial and \nhelped in the reformulation of the test questionnaire for the main study \nquestionnaire. \n3.3.2.2. \n Use of Case Study \nThe use of a case-study provides an in-depth investigation of the intricate \ncomplexities of using local indigenous knowledge for forecasting and predicting a \ncomplex environmental phenomenon such as drought. This is possible through the \n\n62 \n \nuse of a focus group, which are selected domain experts providing expert analysis \nand interpretation of environmental occurrence using indigenous knowledge.  \nThe data collection and analysis method used for the primary data collection was \nto generate suitable data from respondents. The generated data in the form of local \nindigenous indicators on drought, relationships between indicators, the occurrence \nof ecological interactions with events and the expected weather outcomes were \nvetted and, verified by the focus group. The data collection tools used were a \nquestionnaire and a developed Android application.  \n3.3.3. Target Population \nThis study took place at Swayimane, KwaZulu Natal province of South Africa and \nMbeere district in Kenya. The data for D1 (local indigenous knowledge on drought) \nwere obtained in the two study areas for extensive qualitative data. The \nparticipants selected were local farmers and IK experts. The data for D2 - WSN \nand weather station data was obtained from deployed sensors and installed \nweather stations in Swayimane, KwaZulu-Natal and Mbeere district in Kenya. \nThis study took place in Swayimane from September 2017 to May 2018, and in \nMbeere district from March 2018 to April 2018.  \n3.3.4. Sampling Techniques \nSampling is a statistical procedure in which a predetermined number of \nobservations are taken from a larger population (Altmann, 1974). This research \nused a purposeful sampling technique (Patton, 2002) to select the indigenous \nknowledge domain experts (DE), which are mostly traditional farmers in \nSwayimane, KwaZulu Natal and Mbeere, Kenya. The selected farmers have relied \non the use of their local IK for drought forecasts, weather predictions and farming-\nrelated decisions for generations. The selected respondents showed willingness \nand availability to participate in this research study. The data was collected \nthrough the use of questionnaires (see Appendix A), structured interviews, focus \ngroup meetings and ODK survey mobile application. \n3.3.4.1. \n Questionnaire \n\n63 \n \nThe survey’s use of questionnaire was to measure the level of indigenous \nknowledge on drought application in the study area (Appendix – A). The \nquestionnaire was used to gather each respondent’s background information \nrelevant to the context of the research. Also gathered was local indigenous \nknowledge on drought indicators such as the meteorological indicators, \nastronomical indicators, knowledge of seasons, ecological interaction of behaviours \nof birds, and insects and flowering and non-flowering plants based on seasonal \npatterns used by the local community in their IKS to predict and forecast drought \nand other environmental phenomena. The IK indicators collected and gathered \nfrom the respondents were summarised for further verification and detailed \ninterpretation by the focus groups. \nThe questionnaire included 32 questions related to meteorological, astronomical, \nbehavioural properties of local indicators, weather and climatic knowledge on \ndrought. The questionnaire consisted of the following sections: \na) The first section of the questionnaire collected the biographical data of the \nrespondents.  \nb) The second section is aimed to acquire the respondent’s knowledge of \nweather forecasting and the area’s indigenous knowledge system. \nc) The third section aimed to gather and document the effectiveness and use \nof local indigenous knowledge for weather forecasting and cropping \ndecisions.  \nd) The fourth section was aimed identifying and documenting the \nunstructured weather indicators for drought based on the categories such \nas knowledge of seasons, astronomical, and animal/plant behaviours with \npractical examples. \n \n \n \n3.3.4.2. \n Survey Mobile Application \n\n64 \n \nThe adoption of mobile technology has tremendously improved the rate of data \ncollection and gathering collation, and also helps remove ambiguities in responses. \nThis research leverages on the benefit of mobile application through the use of \nOpen Data Kit (ODK) – A mobile application coded for remote data collection and \ncollation of the data in real time. The application is an android platform dependent \non user-friendly Graphical User Interface (GUI) (Figure 3-2). The application is \nused to collect responses from text to pictures to location based on the \nquestionnaire coded in the form of XML and support complex workflows via \nJavaScript customisation. It also supports complex branching, answer validation, \nmultiple languages, and offline work. The data is uploaded to the database in the \nserver in real time. This research adopts the use of Google Sheets as the database.  \nThe ODK consist of a suite of tools for data/knowledge gathering and collection \nusing mobile devices and data submission to an online server or phone cache. It \nconsists of the frontend and the back-end to collect, use, and manage data. The \nfront end is the ODK Collect open-source Android application; and the back-end is \nFigure 3- 2: Open Data Kit Collect GUI (Source: ODK App) \n\n65 \n \nan online server or phone cache for offline saving. This research adopts the use of \nGoogle's free powerful hosting platform and services for back-end services. Google \nSheets is used as the online database, and the data saved can be visualised on a \nmap using Google Fusion Tables and Google Earth in real time. Fusion Tables is \nintegrated with Google Sheets with some built-in geocoding functionality that \nallowed a seamless data analysis. \n3.3.4.3. \n Focus Groups \nThe focus groups are selected IK experts used for verifying the authenticity and \nvalidating the obtained IK in the study areas through the sampling methods. The \ngroup consisted of five (5) elderly tribal farmers who are well-knowledgeable and \nexpert in the use and application of IK in the study areas. \n3.3.5. Data Analysis and Interpretation  \nBased on the research design, the target group consisted of indigenous knowledge \ndomain experts (DE) and local farmers. The data analysis involved identifying the \nnatural ecological indicators, ecological interaction scenarios, and interpretation \nof the scenarios in the form of rules. The ecological interaction of one or more \nnatural indicators in a particular season is called an “event”. These event(s) hold \nthe clue to understanding an environmental phenomenon such as drought. The \nnatural indicators with its corresponding events are gathered through the use of \nsurvey instrument of questionnaires, interviews, mobile applications and focus \ngroups. The essence is to explicitly understand the IK domain for accurate \nknowledge representation. Hence, in order to develop an accurate knowledge \nrepresentation of the domain, it is necessary to analyse data quantitatively. A \nsection of the questionnaire (Appendix A) was designed to identify the natural \nindicators and events for this analysis. The two phases necessary for accurate data \nanalysis and interpretation are data pre-processing and reliability. \n3.3.5.1. \nData Pre-processing \nFor this phase, data pre-processing of the responses gained through all forms of \nsurvey data collection instruments was undertaken to establish a reliable and \nuseful information for accomplishing the research objectives. The research study \n\n66 \n \nadopted a mixed methodology; the data analysis process required different \nmethods (Edmonds & Kennedy, 2012).  \nFor D1, the collected data was collated using Statistical Package for Social \nSciences (SPSS) software and Google Fusion Tables, for qualitative analysis, \ngeneration of descriptive statistics from the responses, and data visualisation. The \ndata was analysed to identify the key natural indicators and to further understand \nthe occurrence of events – astronomical events, meteorological events etc., albeit \nbased on the period in the seasons – summer, autumn, winter and spring. The \nresponses from all respondents were documented, digitalised and summarised, \nbased on the section of the questionnaires towards providing answers to specific \nresearch objectives.  \na) Study area and respondent’s demographic information: This provides an \nunderstanding of the study area, the name of the village, the primary \noccupation of the respondents, age bracket, length of stay in the community. \nAnalysis of this data category provides statistical data about the \ncharacteristics of a population, such as the age, gender, occupation and \nincome of the respondents This information was necessary to understand \nthe respondents’ background, history of the use of IKS for drought \nforecasting and cropping decisions. \nb) Respondent’s knowledge on weather forecasting and prediction: Analysis of \nthis category provides an understanding of IK by the respondent, the ways \nit is used in their daily activities, and most importantly for weather \nforecasts.  \nc) Types of weather forecasting used by the respondents: The interest here \nwas to determine the frequency of use of IK for weather forecasts and it is \nused for cropping decisions. This analysis also provides an overview of \nsources of IK with an attributed confidence level of the sources; \nd) Indigenous knowledge indicators: The analysis of this category provided a \ndetailed list of the natural indicators of local indigenous knowledge on \ndrought used in the study area. The indicators are categorised as \n\n67 \n \nastronomical indicators, meteorological indicators, behaviours of living \nthings, the behaviour of non-living things etc.; \ne) Indigenous knowledge events occurrences based on different seasonal \npatterns: The interpretation of this event provides an inference to likely \nweather outcomes, which help determine the level of correlation between \nthe entire IKS of the area under study and the weather outcomes.  \nFor D2, the sensors readings generated by different sensors (event producers) in \nthe WSN are in structured formats, streamed wirelessly to the cloud repository for \nfurther processing in real-time. The sensor readings can be in various format and \ntypes. The pre-processing of streams of sensor readings performed in the cloud \nincludes the average, median calculation as well as processing such as pattern \nmatching and event forecasting and predictions.  \n3.3.5.2. \n Reliability and Validity \nReliability and validity remain appropriate concepts for attaining rigour in \nqualitative and quantitative research (Morse, Barrett, Mayan, Olson, & Spiers, \n2002; Guba and Lincoln, 1981)). This research ensures the accurate and truthful \ndocumentation of the local indigenous knowledge on drought, and, on the other \nhand, ensures the prevention of data delay and data denial and uncompromised \nintegrity of sensors data. Opinion differs in the literature on the procedure to \ndetermine the validity of a research study. Wolcott (1994) stated that there is no \ndistinction between procedures that determine validity during the course of a \nresearch study.  \nThe calibration and validation of the instruments used are important in this \nresearch study. Drost (2011) stated that “validity is the extent to which a research \ninstrument reflects reality.” The accuracy of the measurement would consecutively \ndetermine the truthfulness of the results. All data collection instruments were \nvalidated for reliability to remove errors. However, over the years, reliability and \nvalidity have been subtly substituted with criteria and standards. \n\n68 \n \n3.3.6. Error Analysis \nThe basic principles for calibration of environmental monitoring sensors involve \nthe use of a comparison method (Grykałowska, Kowal, & Szmyrka‐Grzebyk, 2015). \nThis principle is applied to all the sensors used in the experimental and field study \nof this research. There are two types of errors associated with an experimental \nresearch study: the \"precision\" and the \"accuracy\".  According to Pugh and \nWinslow (1966) “The word precision will be related to the random error distribution \nassociated with a particular experiment or even with a particular type of \nexperiment. Accuracy shall be related to the existence of systematic errors — \ndifferences between measurements.” In this research, study effort was put in place \nto minimise errors of accuracy through calibration and determining the \nuncertainty of sensor measurement. \n3.3.7. Data Collection Techniques \nThe data collection techniques for the pilot and case studies are based on the sub-\nframework of the semantics-based data integration framework. Both the \nstructured and unstructured data sources are collected using the proposed data \ncollection framework. \n3.4. \nStudy Areas \n3.4.1. KwaZulu-Natal \nThe Swayimane community – used as the case study – is located in the KwaZulu-\nNatal province, South Africa. KwaZulu-Natal (See Figure 3-3) is South Africa’s \nthird-smallest province with a total size of 92,100 km2 in area. The province has \ntwo mountainous areas, the western Drakensberg Mountains and northern \nLebombo Mountains. Tugela is the province’s largest river and flows west to east \nacross the centre of the province. The climate of the coastal regions is subtropical \nwith the inland area becoming increasingly colder and summer temperature rising \nover 31ºC. KwaZulu-Natal is rich in biodiversity ranging from flora and fauna. The \niSimangaliso Wetland Park and uKhahlamba Drakensberg Park host seasonal \nmigratory species which provide a rich, in-depth avenue to study the biodiversity \ninteractions.  The seasons are as follows: Summer: November – March; Autumn: \n\n69 \n \nApril – May; Winter: June – August; and Spring: September – October (Gouse, \nPray, Schimmelpfennig & Kirsten, 2006). The average daytime temperature from \nJanuary to March is 28°C and 23 °C from June to August with a minimum of 11 \n°C. \nThe KwaZulu-Natal Province is divided into eleven (11) municipalities – one (1) \nmetropolitan municipality and ten (10) district municipalities, namely: eThekwini \nMetropolitan Municipality; Amajuba District, Zululand District, uMkhanyakude \nDistrict, \nuThungulu \nDistrict, \nuMzinyathi \nDistrict, \nUthukela \nDistrict, \nuMgungundlovu District, iLembe District, Ugu District and Harry Gwala District \nmunicipality. The district municipalities have 48 local municipalities. The data \ncollection took place in Swayimane village, which is located in the uMngeni local \nmunicipality of uMgungundlovu district of KwaZulu-Natal. The inhabitants are \nmostly Zulu by tribe with farming and livestock keeping the primary occupation \nof the study area. Swayimane terrain has undulating outcropping hills with an \nextensive altitudinal range of 2900m which influences the temperature changes \nin summer and winter (Ndlela, 2015). \n\n70 \n \n \n3.4.2. Mbeere District \nMbeere community is in Embu County in the Eastern province of Kenya (Republic \nof Kenya, 2001). Geographically, the Mbeere District lies between latitude 0° 20’ \nand 0° 50’ South and longitude 37°16’ and 37°56’ East, covering an area of 2,097 \nsquare kilometres (see Figure 3-4). Ambeeres/Mbeeres are predominantly farmers \nthat specialise in growing a variety of crops such as melons, sorghum, maize, \nmangoes, pawpaws, millet, cowpeas, beans. (Kinuthia, Warui, & Karqanja, 2009). \nThe terrain is arid and classified as an Arid and Semi-Arid Lands (ASALs). The \ntemperature varies from 20ºC to 32ºC due to several environmental factors and \nclimatic conditions. The farmers have developed and use their indigenous \nknowledge systems based on local indicators and knowledge of seasons for the \nfarming \ndecision-making \nprocess \nand \nfor \npredicting \nand \nforecasting \nenvironmental phenomena such as drought. Mbeere district experiences two main \nFigure 3- 3: Map of KwaZulu-Natal Province, South Africa and Swayimane. (Source: \nRepublic of South Africa, 2010) \n\n71 \n \nraining seasons: the March-April-May (MAM) long rains and the October-\nNovember-December (OND) short rains (Masinde, 2015). \n \nMbeere district has bimodal rainfall with annual averages of between 640 and \n1110mm (Republic of Kenya, 2001). However, some parts receive less than 500mm \nper annum (Kinuthia et al., 2009). The erratic and irregular rainfall coupled with \nhigh temperature, make the district experience high evapotranspiration \nthroughout the year (Kinuthia et al., 2009). \n3.5. \n Semantics-based Data Integration Middleware Framework \nThis section presents a framework of a distributed semantic heterogeneous data \nintegration middleware. The middleware aims to be implemented as Semantics-\nbased Drought Early Warning System (SB-DEWS) that will enable semantic \nintegration of heterogeneous data sources for drought forecasting and prediction \nin the study area. The system utilises local indigenous knowledge on droughts and \ndata from wireless sensor network with weather station readings to generate \ndeductive inference for drought forecasting and predictions. The semantic \nknowledge representation of local indigenous knowledge on drought and \nenvironmental readings will promote reuse of data, allow seamless integration and \nFigure 3- 4: Map of Kenya showing relative location and size of Mbeere district. \n(Source: Republic of Kenya, 2001). \n\n72 \n \ninteroperability with intelligent information systems (Kuhn, 2005; Fogwill, \nAlberts & Keet, 2012; Akanbi & Masinde, 2015b). \nThe proposed middleware in the form of drought early warning systems \nsemantically integrates the modern science with local indigenous knowledge using \na middleware. This is important due to the complexity of environmental \nphenomena such as drought which necessitate the consideration of the localisation \nand variability of the environmental parameters of the area under study. The \nsemantic-based data integration middleware (SM-DIM) framework provides a \nblueprint of the SB-DEWS. The middleware is a layered service-oriented \narchitecture (SOA) which encompasses several distributed functional groups \nframeworks. \n3.5.1. Framework Requirements \nBased on the problem statements that motivated this research study and the \nresearch questions described in Chapter One, the chapter presents the framework \nrequirements. The requirement is the criterion that project deliverables need to \nsatisfy and verify how well the deliverable functions against the requirements. In \nthis section, the essential basic requirements of the proposed framework that \napplies to solve these problems were elicited. \nThe system requirements are divided into two categories – functional \nrequirements and non-functional requirements. The functional requirements (FR) \ndescribe what the framework should do, and the non-functional requirements \n(NFR) describe the properties of the framework (Rainardi, 2008; Nunavath, 2017). \nFunctional Requirements \n• FR1: Due to drought complexity, accurate forecasting and prediction \ninvolve combining data from diverse sources. This heterogeneous data is \noften represented in abstruse terms, using different vocabulary and data \nrepresentation format that causes data heterogeneity. This prevents \nseamless data exchange which impinges onto achieving interoperability. An \nintroduction to the research problem indicates knowledge integration is \nlimited by ontological divergence, and this could be solved by increasing the \n\n73 \n \nlevel of semantic expressivity. Therefore, the framework should provide a \nformal description and common understanding of the domain’s concepts, \nrelationships, constraints to eliminate semantic ambiguity based on a \ncommon ontology. \n• FR2: The integration of data and interoperability of different systems is \nessential for an accurate information system. The framework should \nfacilitate the semantic integration of data, data reuse, and exchange \nbetween various heterogeneous systems in an event-driven way using \nseveral clusters of functional groups. \n• FR3: The framework should ensure the gathering and processing of the \ndata, either structured data or unstructured in a timely event fashion. \n• FR4: The middleware should be able to generate accurate deductive \ninference from the semantic integration of heterogeneous data sources for \nthe area under study. The framework shall ensure the use of automated \nreasoning modules which infer events patterns and perform deductive \ninferences based on a set of syntactic derivation rules from indigenous \nknowledge and drought prediction model logic. \n• FR5: The middleware framework must include a publishing system for \npublishing drought forecasting warnings in the form of drought forecasting \nadvisory information (DFAI) across multiple channels for use by \npolicymakers. \nNon-Functional Requirements \n• NFR1: The framework shall be flexible, distributed, offer reusability and \nextendable. \n• NFR2: The framework shall be platform-independent and facilitate unified \ndata communication via standard APIs. \n3.5.2. The Middleware Framework Overview and Description \nIntegration and interoperability of heterogeneous data sources and systems \nrespectively are critical in making efficient decisions and determining the \naccuracy of any EWS (Leonard, Johnston, Paton, Christianson, Becker, & Keys, \n2008). However, due to the heterogeneity of data and information systems, it is \n\n74 \n \nquite difficult and challenging. This affects seamless data sharing and \ncommunication. Therefore, to have a common agreement in the terminologies and \nrelationship between entities in different domains, the study has looked into the \nliterature and found that the most suitable method is the adoption of ontology and \nsemantic technologies (Llaves & Kuhn, 2014; Kuhn, 2005, Fogwill et al., 2012). \nSemantic technologies have a stronger approach to interoperability than \ncontemporary standard-based approaches through detailed semantic referencing \nof metadata (Kuhn, 2005). Hence to address the requirements listed above in the \ndevelopment of an accurate EWS for drought forecasting, this middleware \nframework is based on the architecture proposed by Akanbi and Masinde (2018b). \nThe main fundamental characteristic of the presented semantics-based \nmiddleware framework is the ability to integrate both structured (sensors data) \nand unstructured data (indigenous knowledge).  The study used ontology-based \nsemantic annotation to deal with the integration and interoperability of \nheterogeneous data sources, and an automated reasoning system for the \ngeneration of accurate inference. The middleware is novel and revolutionary; it \nsemantically integrates diverse legacy systems and diverse data sources like \nsensory data, weather station data and the local indigenous knowledge on drought \nby solving the semantic heterogeneity problem.  \n\n75 \n \nThe presented framework provides the solutions to FR1 and FR2, which is a \nsemantic model that will facilitate the semantic integration and interoperability \nof systems. The semantic model will integrate different heterogeneous data \nsources (FR3); generate deductive inference from the semantic integration of data \nsources using automated systems – inference engines and CEP engines (FR4) and \ndisseminate the output in the form of DFAI through various channels (FR5). The \nSB-DIM framework aims at improving the semantic interoperability among \nintelligent early warning systems (EWS) and their components.  \nA distributed layered SOA was adopted in which each layer consists of components \n(functional groups). Each functional groups (FG) consists of several modules that \noffer a high level of abstraction and functionalities suitable for each level (Akanbi \n& Masinde, 2018b). The middleware layer provides API for the communication \nand abstraction of complex modules and presenting the data in a machine-\nreadable format for integration and interoperability (Akanbi, Agunbiade, Dehinbo \n& Kuti, 2014). The framework architecture is depicted in Figure 3-5. The \nframework consists of five functional groups (FG): Data Acquisition FG, Data \nStorage FG, Stream Analytics FG, Inference Engine FG and the Data Publishing \nFigure 3- 5: The semantics-based data integration middleware framework (Source: Author). \n\n76 \n \nFG, with technologies and services that are based on a service-oriented approach \n(Akanbi & Masinde, 2018b) in fulfilment of the framework requirements. \n \n \n3.5.2.1. \n Data Acquisition FG \nThe data acquisition FG collects data from different data sources (structured and \nunstructured). The system utilises calibrated sensor data and local indigenous \nknowledge on drought. This FG encapsulates two functioning data collection \nmodules: (i) Indigenous Knowledge System Data Collection (IKSDC) module, and \n(ii) Wireless Sensor Data Collection (WSDC) module. The results of the data \nacquisition FG fulfil the requirement FR3 of the framework. The data collection \nand integration is based on Service Oriented Architecture (SOA) from \nheterogeneous data sources, and RESTful services are adopted for machine-to-\nmachine data communication over the network. \nIndigenous Knowledge System Data Collection (IKSDC) Module \nThe IKS module of the Data Acquisition FG provides an abstraction for the \ncollection, gathering and documentation of the IK data (D1) using appropriate \ndata collection tools. Figure 3-6 depicts the architecture of the Indigenous \nKnowledge System Data Collection (IKSDC) module. The unstructured local \nindigenous knowledge on the drought of the area under study offers the desired \nlevel of scalability and variability is paramount to the realisation of the system on \na micro-climatic level. The IK is obtained in the study area from the domain \nexperts, farmers and focus groups through a series of oral consultation, \nquestionnaires, interviews, field studies and meeting sessions. Furthermore, to \nachieve an updated collection of the IK from the IK experts, this research utilises \na data collection application that captures the IK indicator (and its ecological \ninteractions with detailed descriptions) and geographic coordination in the natural \nhabitat. The IK data is temporarily stored in the indigenous Knowledge Database \nServer or Indigenous Knowledge Web App Server (backend) for further pre-\n\n77 \n \nprocessing and analysis. The acquired IK is pre-processed by the data mining tools \ninto a form that is stored in the Data Storage FG. \n \nFigure 3- 6: Indigenous Knowledge System Data Collection (IKSDC) module \nframework (Source: Author). \nWireless Sensor Data Collection (WSDC) Module \nThe Wireless Sensor Data Collection (WSDC) module architecture, as depicted in \nFigure 3-7 is a network of connected calibrated sensor devices for sensing \natmospheric pressure, temperature, humidity, precipitation and soil moisture. \nThe data (D2) are transmitted to the IoT hub (Microsoft Azure, Google Cloud, \nSigfox Cloud) via the gateway. \n\n78 \n \n \nFigure 3- 7: Wireless Sensor Data Collection (WSDC) module framework (Source: \nAuthor). \nThe communication medium for transmitting the sensor readings from the sensors \nand the gateway to the cloud varies due to several factors. The communication \nmedium ranges from the Bluetooth connection, ZigBee, MQTT, Sigfox network to \nHTTP protocol (Figure 3-8). The selection of an appropriate communication \nmedium is based on the data necessity and secrecy factor of the transmission \nmedium. This research used a Wi-Fi-enabled microcontroller board (Node MCU) \nmostly based on 6LoWPAN protocol. The time-series sensor readings are saved in \nthe storage blobs and are retrieved in JSON-LD format using RESTful services. \n \n \n\n79 \n \n \nFigure 3- 8: Communication medium patterns (Source: Author). \n3.5.2.2. \n Data Storage FG \nPre-processed data collected from the Data Acquisition FG will be transferred to \nthe Data Storage FG, where the data are stored in an internal context database \n(relation SQL or NoSQL). The Data Storage FG consists of modules that facilitate \nthe storage and processing of structured and unstructured data types using online \nrepository – Google Sheets, etc., and offline repository – storage media, phone \ncache etc. \nThe storage blobs filters and caches the streaming sensor data from the deployed \nWSN in a scalable real-time fashion. The raw sensor data is based on appropriate \ndomain semantics is stored using the Open Geospatial Consortium Observation \nand Measurement (O&M) model (Botts, Percivall, Reed, & Davidson, 2008; Probst, \n2006; Janowicz & Compton, 2010), which defines measurement units, concepts, \nvalues and uncertainty. The other set of data saved in the storage blobs is the IK \nfrom the domain experts which have been pre-processed and the knowledge \nextracted by semi-manual data mining techniques. \nThe dataset for D2 is transferred to the Stream Analytics FG which transforms \ndata into a consistent structure for the discovery of features and patterns to \n\n80 \n \nextract useful insights of real-world events for processing by the stream processing \nengine.  The IK gathered for D1 is mapped to a domain ontology specially \ndeveloped for this research (See Chapter 5) to ensure common understanding and \ndescription of objects relationships and observed events. \n3.5.2.3. \n Stream Analytics FG \nThe Stream Analytics FG incorporates the implementation of Event Processing \n(EP) concepts to infer meaningful insights in the stream of sensor data in real \ntime. The types of EP deployed are based on its application and are categorised \nunder three sub-types: Event Processing Platforms (EPP), Distributed Stream \nComputing Platforms (DSCP) and Complex Event Processing (CEP) libraries \n(Dayarathna & Perera, 2018). \nThe EPPs type of EPs have functionalities such as event filtering and the ability \nto determine correlations of different scenarios. DSCPs incorporates the additional \nfunctionality of computation across multiple nodes in a distributed cluster. On the \nother hand, CEP engine (or CEP libraries often used interchangeably in this thesis) \nhave the unique ability to infer meaningful patterns and relationships even in \nunrelated events. However, irrespective of the EPs, the suitability is based on the \npublish/subscribe patterns and compatibility with the use of RESTful services.  \nThis research utilises the CEP engine (See Chapter Six) that detects composite \nevents – specific patterns in the ‘stream of time’ series sensor data. The ability of \nthe CEP engine to infer the pattern of the event is achieved through CEP rules \nthat are embedded part of the application logic (Cugola, Margara, Pezzè, & \nPradella, 2015). In this context, rules are in this form of general syntax: \n𝐶𝐶𝐶𝐶 (𝐴𝐴1 =  𝐽𝐽1 (. . ) , . . . , 𝐴𝐴𝐴𝐴 =  𝐽𝐽𝐽𝐽 (. . . ) ) ∶=  𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃 …… (Equation 3-1) \nWhere the symbol: = separates the rule head from the pattern. CE specifies the \ncomposite event captured by the rule and how its attributes A1….An are \nfunctionally defined by the attributes of the events that appear in the pattern. \nWhen a pattern is detected within the stream of input sensor data, the CEP engine \nknows that the corresponding composite event has occurred based on the specified \nCEP rule and notifies the interested components if the stream of input events \n\n81 \n \nsatisfies the pattern (Dayarathna & Perera, 2018). For example, data from four \nsensors S1…S4 will serve as input to the CEP engine in the form of S1:=A1 (T1). The \nattribute value for the sensor is captured as well as the corresponding time stamp. \nA temperature sensor can capture four different reading within an hour period. \nBased on the drought forecasting model logic the average of those reading can \ntrigger a pattern and used to infer an event such as “High Temp”. Events inferred \nfrom the EPs component of the Stream Analytics FG are represented using the \nJSON-LD and transferred to the Inference Engine FG. \n3.5.2.4. \n Inference Engine FG \nThis FG of the middleware framework consists of the ontology modules for the \nsemantic representation of the heterogeneous data sources (D1 & D2), automated \nreasoners and rule-based expert system modules that work in an event-driven \nfashion for drought prediction and forecasting. It addresses the requirement FR1 \nand FR2. The Inference Engine FG implements the semantic representation of the \nheterogeneous data accordingly by using appropriate domain ontology; performs \nsimple domain-specific reasoning on the IK in the RB-DEWES module. The \ndomain ontologies in the Inference Engine FG address the need of a uniform \nrepresentation for the data (structured and unstructured) in a way to be \nunderstood and processed by the reasoning engine module and support real-time \npersistent queries (Akanbi & Masinde, 2018b). \nThis research study adopted the W3C Semantic Sensor Network (SSN) ontology \n(Compton, Barnaghi, Bermudez, García-Castro, Corcho, Cox, Graybeal, \nHauswirth, Henson, Herzog, & Huang, 2012) for the semantic representation and \nconceptualisation of the stream of sensor data and event inferred from it (D2). The \nontology provides a comprehensive framework for the explicit description of sensor \ndevices, observation, measurements, properties, etc., enabling reasoning of \nindividual sensors or a WSN. The SSN ontology module represents the sensor \ndata, properties of the data, and the events generated by the reasoners from the \nsequence of sensor reading (already represented in JSON-LD) in a machine-\nreadable language – OWL based on the SSN ontology.  \n\n82 \n \nFor the unstructured indigenous knowledge (IK) on drought (D1), the major \nchallenge is the lack of an existing domain ontology that explicitly represents the \nlocal indigenous knowledge. The ontology module in the Inference Engine FG is a \ndomain ontology that explicitly represents the local indigenous knowledge on \ndrought. It is designed to semantically represent the entities and event \n(behavioural/observation) in the indigenous knowledge domain using a minimal \nnumber of classes, properties and restrictions (Akanbi & Masinde, 2018c). The \nSSN ontology and the IKON ontology are grounded on DOLCE as the foundational \nontology. DOLCE provides a generic definition for conceptualisation, facilitating \nthe perfect alignment between ontologies founded on it.  \nThe semantic reasoner's module and the RB-DEWES module in the Inference \nEngine FG perform the generation of drought forecasting inference from the \nsemantically represented D1 data used in the middleware. Semantic reasoners \nmodule performs domain related reasoning based on the relationships and \nproperties of the entities in the domain. The RB-DEWES module as a fully \nintegrated expert system utilises rules derived from the knowledge representation \nof the IK to infer drought forecasting and prediction information with attributed \ncertainty factors. Applying formal representation to all data using ontology \nensures effective data exchange in the Inference Engine FG and high level of \nsemantic expressivity in conjunction with the syntactic expressivity offered by the \nJSON-LD. Chapter 6 presents a completed overview of the reasoners and expert \nsystem component of the middleware. \nRB-DEWES Development Methodology \n\n83 \n \nHarrison (1991) defined expert systems like “computer programs, designed to make \navailable some of the skills of an expert to non-experts”. Therefore, the development \nmethodology starts with the use of expert’s knowledge (skills) acquired in the Data \nAcquisition FG to system design, development and implementation. The \ndevelopment methodology consists of four (4) phases as depicted in Figure 8-1 \nbelow. Phase 1 starts with the knowledge engineering, knowledge categorisation, \nknowledge representation and rules ranking. Phase 2 of the methodology entails \nthe system architecture, programming of the system’s components etc. Phase 3 \npresents the system’s design, development and implementation. Phase 4 presents \nan illustration of the system operation and overall performance with evaluation. \n \n \nFigure 3- 9: RB-DEWES System Development Methodology. (Source: Author) \n\n84 \n \na) Knowledge Engineering: Rule-based systems require that the expert’s \nknowledge and thinking patterns be explicitly specified. Hence, the \nprocesses in this phase are knowledge acquisition from domain experts, \ncategorisation of the knowledge and knowledge representation in the form \nof rules. Figure 3-10 depicts the processes involves in the knowledge \nengineering phase.  \nThe process of knowledge acquisition is the first step in the development of \nany knowledge-based systems. It is the process that facilitates the transfer \nof knowledge from a human expert to the knowledge base of an event-driven \nsystem through the construction of new, specific inference (production) \nrules. Obtaining this knowledge and writing proper rules is the main core \nof the knowledge acquisition phase (Scott et al., 1991). The knowledge used \nin this process has been previously acquired through the implementation of \nthe middleware’s Data Acquisition FG and the rules were explicitly derived \nafter the knowledge representation of the domain (Chapter Five) through \nthe process of elicitation. The authors take the role of knowledge engineer \nand the local indigenous knowledge on drought was acquired through a \nseries of structured interviews, conducted case studies, selected focus \ngroups meetings and through the deployment of the developed data \nFigure 3- 10: Process Flowchart of Knowledge Engineering Phase. (Source: Sasikumar \net al., 2007) \n\n85 \n \ncollection mobile application from the two study areas: KwaZulu-Natal, \nSouth Africa and Mbeere District, Kenya. \n \nb) System Architecture: The nature of the middleware is taken into \nconsideration for the requirement and specification criteria for the system \narchitecture.  \nc) System Design and Implementation: This phase is achieved based on the \nmiddleware distributed architecture and implemented as a sub-system or \ncomponent of the Inference Engine FG.  \nd) System Operation: The RB-DEWES can be implemented as a standalone \nsystem or as part of the distributed middleware DEWS. \n \n3.5.2.5. \n Data Publishing FG \nThe distributed semantic middleware framework seeks to automate and \ncomplement the existing drought alerts/weather forecast information for policy \ndecision makers use in the study areas. This can include the application of modern \ntechnologies in the distribution and publishing of accurate inferred information. \nThe inferred drought forecasting/prediction information is called ‘drought \nforecasting advisory information’ (DFAI) – presented in a standardised format \nwith attributed certainty value to indicates the confidence level of the systems \nbased on the set of inputs for use by policy decision makers. The DFAI can further \nbe disseminated via mobile phones SMS, logic apps, notifications hubs, mobile \nservices, web apps, document dB and also in a machine-readable format to \npromote reuse and integration with other third-party applications using REST \nAPIs. \n3.6. \n Knowledge Modelling and Representation Methodology \nKnowledge modelling and representation is carried out by the application of a \nmethodology. A methodology is simply the organisation of some fundamental \nphases that ensure the correct completion of deliverables (Guarino, 1998; Gómez-\nPérez & Benjamins, 1999). The methodology phases are planned towards \nachieving the heterogeneous data integration middleware requirements (FR & \n\n86 \n \nNFR). This integrated bottom-up methodology consists of six phases, which allows \nseamless ontology development with system requirements at the centre of the \ndevelopment.  \nThe methodology depicted in Figure 3.11 based on the data collected in section \n3.5.2.1 starts by defining the high-level goals; which entails the type of ontology to \nbe created, the foundational ontology to be adopted etc. This is followed by the \ninformation gathering (data collection) and elicitation phase. Elicitation is a term \nused in knowledge modelling that means fleshing out of the information, which \ntypically means the extraction of knowledge from the domain experts or data \nsource. The next phase is to start the preliminary modelling task, which is \nmodelling in the form of light-weight ontologies. This helps generate more refined \nand encoded models in the formalisation phase. The initial structuring phases \nfocus on the conceptual definition of ontology. The next phase is the formalisation \n– knowledge representation using machine-readable languages, then the \n\n87 \n \ndeployment of the ontology which is the usage phase of the ontology and finally \nthe ontology evaluation to determine the effectiveness of the ontology. \n3.6.1. Phase One – Goal & Scope Definition \nThis phase is the starting point or preparatory stage of the KM methodology. It is \nthe starting point of the ontology development cycle.  In this research, the domain \nof interest is local indigenous knowledge on drought and WSN data sources. The \nfocus is the development of a domain ontology for the local IK on drought and the \nsensor data from the WSN. The scope of ontology development is defined in terms \nof its boundaries and ontological requirements. The domain ontology for D1 & D2 \nis be based on DOLCE as the foundational ontology for coherent ontology \nalignment between these heterogeneous knowledge bases as stated earlier.  \n3.6.2. Phase Two –Information Gathering & Elicitation \nThe information gathering and elicitation phase are about collecting information \nfrom a range of diverse sources (See Section 3.5.2.1). The capturing and \nFigure 3- 11: Overview of Knowledge Modelling Methodology (Source: Smith, 2003) \n\n88 \n \nunderstanding of information central to the domain of discourse are the key \nactivities of the ontology development cycle. This entails the application of \nappropriate data collection and pre-processing tools of the Data Acquisition FG. \nFor D1 the data and information about the local indigenous knowledge are \ncollected through a series of surveys, interview, focus groups and mobile \napplication. The preliminary information is gathered using available tools and \ntechniques such as simple documents, questionnaires, spreadsheets to more \nsophisticated means like mind maps and audio-visual recordings. Information is \ngathered from D2 in the form of sensor readings and events inferred by the stream \nprocessing engine.  \n3.6.3. Phase Three – Initial Structuring \nThis phase of the methodology encompasses several tools and techniques for \ntransforming the loosely organised information collected from the previous phase \ninto a more refined, visually-represented lightweight model. In this phase, all the \nclasses and the relationship are identified and mapped from the knowledge \ngathered (D1 & D2). The visual model representation at this phase is beneficial \nand helps provide an overview of the domain by providing a snapshot of the \nclasses, sub-classes and relations. The visual ontologies generated in this phase \nare great for reviews and sharing purposes; this allows for easy updating of the \nknowledge model based on the feedback received. Visual lightweight \nrepresentation makes it easier to build formal knowledge models for use in the \nnext phase of the methodology; because the agreed visual lightweight model \nmakes it easier during the encoding of the ontology. Hence, the process becomes \nmore streamlined.  \nThe first thing in this phase is the creation of the “term pool” – that captures the \npotential terms for inclusion into the knowledge model (Noy & McGuinness, 2001). \nThe information and knowledge gathered from the domain experts are put in the \nform of statements about the things that make up and describe the domain, \nforexample statement of facts. These statements are analysed, and the nouns in \nthe statements of facts are identified. After the identification of the nouns in the \nbody of knowledge or statement of fact, the complex sentences and phrases are \n\n89 \n \ndecomposed into several single statements (rules) that capture one or two simple \nideas that are built around the nouns. These set of statements allows the basic \nunderstanding of the things that are relevant to the knowledge model — the \nspreadsheet term pool for capturing the domain specific terms in the knowledge \nbase.  \nGraphical languages and notations such as UML are used to effectively model \nlightweight ontologies visually (Liepins et al., 2012 ). In KM, the most important \nconstruct \nused \nare \nclasses \nwhich \nrepresented \nthe \nmeaningful \ncategorisation/classification that contains individuals, subsumptions such as \ninheritance between subclasses and classes; also, relations, which are the \nassociation between two or more classes. Then, association or relations are used \nto associate pairs of individuals which are instances of a particular class and are \nthe most specific things in the universe of discourse (UoD) as illustrated below \n(Figure 3-12). \n \nSelecting the appropriate naming convention is the last step of the initial \nstructuring phase of KM methodology (Noy & McGuinness, 2001). The naming \nconvention ensures maintaining consistency in the manner or way of naming \nontology entities, and this is enforced by following strict naming conventions. In \nKM, there are two widely used conventions: (i) camel case convention where words \nare written in such a way that the first or second word always begins with a capital \nFigure 3- 12: Graphical Modelling of classes and relations (Source: Author). \n\n90 \n \nletter while a first or single word starts with an uppercase or lowercase letter; (ii) \nthe underscore convention, where underscore is used to separate words \nrepresenting an entity. This research adopts the camel case conventions for \nnaming entities, relations and individuals.  \n3.6.4. Phase Four – Formalization \nAs indicated in the previous phases of the methodology, visual lightweight \nrepresentation or graphical notation are very useful for representation when \nsharing and covering meaning across human beings. For machine interpretation, \nreasoning and decision support at the systems level, the use of visual \nrepresentation falls short of the ability to share meaning consistently with \ndetailed \nsemantics. \nTherefore, \nthat \nshortcoming \nis \novercome \nthrough \nformalisation, which means coding of knowledge models – ontology using formal, \nmachine-readable languages and semantic technologies. The application of \nformalisation of knowledge bases allows computer and intelligent systems to be \nable to interpret, understand and generate reasoning from the knowledge model. \nThe formalisation phase deals with the encoding of knowledge models – which \nimproves the ability to integrate diverse data sources, overcome data \nheterogeneity, enhance data integration and interoperability, search for \ninformation and use of heterogeneous knowledge base in information systems, \nintelligent schemas, etc. Formalisation requires using a formal knowledge \nrepresentation language in representing and expressing knowledge models using \nappropriate software tools. There are various formal languages of description logic \n– RDF/s or OWL for encoding an ontology. In this research, OWL is adopted for \nthe encoding and knowledge representation of our knowledge models due to the \nlevel of expressivity and the degree of formalism (Noy & McGuinness, 2001). OWL \nis a specification developed and maintained by the World Wide Web Consortium \n(W3C). There are several tools for encoding an ontology (Kapoor & Sharma, 2010; \nStojanovic, 2004), Protége is the leading ontology editing tools with integrated add-\nons to achieve reasoning capabilities of the developed ontology and also backed by \nan active community of users.  \n\n91 \n \nClasses identified during the initial structuring phases are represented and \nspecified in a flexible hierarchy; the relation (called properties) is used for \nspecifying axioms to define how classes and their individual components behave. \nThe adoption of OWL allows reasoning facilities that automatically classifies \nconcepts as well as to verify the effectiveness and consistencies of descriptions on \nthe knowledge model. In Protégé, the first thing to specify is the ontology \nInternationalized Resource Identifier (IRI) and the ontology version of the IRI. It \nis appropriate to add a semantic annotation to the ontology being created. The \nsemantic annotation provides a description of the ontology for the knowledge \nmodel. Protégé allows the ability to save the ontology in different knowledge \nrepresentation formats like RDF/XML Syntax, Turtle Syntax, OWL/XML Syntax, \nOWL Functional Syntax, Manchester OWL Syntax, OBO format, LaTeX Syntax \nand lastly the JSON-LD format. Each of the file formats has a different level of \nsyntactic and semantic expressivity. This research adopts the OWL/XML syntax \nand the JSON-LD for semantic representation of the domain and data integration \nrespectively. JSON/JSON-LD is the standard output data format for all the FGs \nof the middleware due to compatibility with RESTful web services for scalability. \n3.6.5. Phase Five – Deployment \nAfter the successful formalisation and encoding of the ontology, this phase deals \nwith the deployment of the developed ontology (Noy & McGuinness, 2001). The \nterm “deployment” in this regard means the release of the ontology or knowledge \nmodel by publishing the ontology for use in intelligent information systems and \nontology-driven information systems. The suitable way of deploying an ontology is \ndependent on the requirement management of the ontology in the context of its \ndevelopment. The deployment of the ontologies is about sharing the knowledge \nmodel with the wider audience or research community for download and reuse. \nFurthermore, the formal ontology can be exploited by integrating the knowledge \nmodel with another information system where the knowledge represented are \nused for decision-making processes. \nThe deployment phase also entails the ontology documentation of the entities as \nan important aspect in the deployment of the knowledge model. This ensures the \n\n92 \n \nrepresentation of the encoded ontology in a natural language. For example, an \nontology can be represented and view in HTML format for use by non-domain \nexperts. The conversion of an OWL ontology file into HTML can be achieved \nthrough the use of the Live OWL Documentation Environment (LODE) tool \ndeveloped by the University of Bologna, Italy (Peroni, Shotton & Vitali, 2012). The \ngenerated HTML files can be documented and shared with users for insight about \nthe conceptualisation and formal representation of the domain. \nThe visual deployment or representation of the ontology can also be achieved \nthrough the use of OWLGrEd (Liepins, Cerans & Sprogis, 2012), OntoGraf, Visual \nNotation for OWL Ontologies – VOWL (Lohmann, Negru, Haag & Ertl, 2016) or \nOWLViz Import Graphs. Another method for the visual deployment of an ontology \nis through the use of Radial Diagram; at the centre of the radial diagram is the \ncentral concept of the ontology, i.e. the most important class to be emphasised \nusing concentric shells with satellite classes relevant to the subject matter. The \nassociation between the classes are added using connectors which can be running \noutwards, inwards or centrally.  \n3.6.6. Phase Six – Evaluation \nThis phase involves assessing the goal and scope definition phase and determines \nthe extent to which the aim and objectives of the project have been fulfilled and \nhow the requirement has been met in the context of the established scope. This \nphase can be done iteratively during the ontology development life cycle. There \nare several methods used for ontology evaluation purposes. There is technical and \nspecialist perspective for evaluation and ontology project through the use of \nontology alignment or ontology comparison. \nHowever, as part of the evaluation procedure, there is the need to ensure the use \nof appropriate ontology development methodology, because a perfect methodology \nprovides the appropriate justification for ontology development from conception to \nimplementation. Also, there exists the need to check for inconsistent naming \nconventions and typos, which are common mistakes in the ontology development \nand indicate a lack of attention to details. The evaluation of the developed ontology \nis similar to the initial data gathering phase; the major difference is that in this \n\n93 \n \nphase, the output of the domain formalisation is verified to be accurate and a true \nrepresentation of the domain by the domain expert. \n3.7. \n Experimentation Process \nThe simulation was run using the implemented tool for short-term forecast and \nrecord the probability of accurate drought prediction or forecasting. The WSN \nprovided a series of sensor data for the short term of forecasts. The accuracy of the \ndrought prediction and forecasting information in the form of DFAI was verified \nduring the evaluation stage. \n3.8. \n Middleware Evaluation Procedure \nThe implemented middleware in the form of drought early warning system tool \nwas tested with usability specifications. This provides the ability to verify the \neffectiveness and ease of use of the implemented prototype. To evaluate the \nresearch methods used in this research study, a correlation between the \nforecasts/predictions and the actual weather data were analysed (Casati et al., \n2008). The evaluation procedure is presented in Chapter 7. \n3.9. \n Ethical Consideration  \nIn this research study, participants/respondents were informed of their rights of \nownership of the knowledge and that their privacy would be protected. Bryman \nand Bell (2007) stated ten principles related to ethical consideration in a research \nstudy; all were strictly adhered to, by ensuring full consent of each \nparticipant/respondents were obtained before data collection session through the \ncompletion of the “Consent Form\" by each participant/respondent. The consent \nform contained clauses that must be approved by the participants/respondents; \nthese clauses indicated that they had read and understood the information about \nthe research; they had the free will to ask questions about participation in the \nresearch study; they voluntarily agree to participate in the research; they had the \nright to withdraw at any time without giving reasons or being penalised for doing \nso; and that adequate levels of confidentiality of the research data would be \nensured. \n\n94 \n \nThe approval for conducting the research study was obtained from the Department \nof Information Technology’s Departmental Research and Innovation Committee \n(DRIC); and the Faculty Research and Innovations Committee (FRIC) at Central \nUniversity \nof Technology \n(CUT). The \ninformation \ncollected \nfrom \nthe \nparticipants/respondents \nremains \nthe \nintellectual \nproperty \nof \nthe \nparticipants/respondents of the area under study. The anonymity of \nparticipants/respondents participating in the research was ensured, detailed \naffiliations of researchers were declared, and all forms of communication in \nrelation to the research were carried out with transparency through the chief/head \nof the community. \n3.10. Summary \nThis chapter identified the research study design is a mixed research design where \nqualitative and quantitative techniques are used towards achieving the research \nobjectives. Also, it included a description research paradigm, primary data \nsources, data collection methods of the heterogeneous data sources. The data pre-\nprocessing and analysis use case scenarios as well as the ethical consideration for \nthe entire research study. The research was executed from a philosophical base on \naspects such as truth and validity, which determines acceptable research methods \nto be adopted. A purposeful sampling process was followed, and the data collection \ninstruments were the sensor devices, survey questionnaire, mobile application, \nstructured interviews with a focus group and use of case study. \nFurthermore, the chapter presents a vision of how the integration and \ninteroperability of heterogeneous data sources can be achieved through a semantic \nmiddleware for drought forecasting and environmental monitoring systems. A \ndistributed semantic middleware framework was presented, which acts as the \nmain catalyst for heterogeneous data integration, providing the contrivance for \nthe semantic data representation, annotation, generation of inference and \nreasoning. The methodology for the development of the RB-DEWS was also \npresented. The system generates levels of forecasting recommendation in the form \nof DFAI. This middleware takes processing, representation and dissemination of \ndrought forecasting data where information will be shared in a machine-readable \n\n95 \n \nformat for effective environmental monitoring or forecasting in the realm of this \nlatest technology. The SBDIM can serve as the basis to provide other forms of \nintegration \namong \nheterogeneous \nenvironmental \ndata \nsources \nand \ninteroperability of intelligent systems. \n\n96 \n \nCHAPTER FOUR \nHETEROGENEOUS DATA COLLECTION \n4.1. \n Introduction \nIn Chapter Three, the form of the research methodology and outline of the \nsemantic-based data integration middleware framework was presented. This \nchapter presents the implementation of the first Functional Group (FG) of the \nframework – Data Acquisition FG, which deals with the collection of data from two \nheterogeneous data sources – indigenous knowledge on drought (D1) and the \nwireless sensor data (D2) in this case. The indigenous knowledge on drought is \nmostly unstructured oral, with a historical knowledge base in the form of \nobservation of the ecological interactions, natural indicators for predicting the \noccurrence of an environmental phenomenon such as drought. These natural \nindicators are identified and used in the future for prediction and forecasting \npurposes. \nOn the other hand, D2 is a structured weather data collected from deployed sensor \ndevices and calibrated weather stations in the area under study. The sensors are \nused to measure the environmental parameters in remote locations, while the \nprofessionally calibrated weather stations in the area under study are used as \nreference measurement model. These two data sources (D1 and D2) are collected \nfrom the two areas under study: Swayimane in KwaZulu-Natal, South Africa and \nMbeere in Embu County in Kenya. \nFor D2, five (5) weather data parameters that are crucial in this research are \ncollected: (1) temperature; (2) humidity; (3) soil moisture; (4) atmospheric \npressure; and (5) precipitation. Some of the weather data is observed using \nwireless sensors while other readings are observed from the weather stations. For \nexample, temperature and humidity readings are remotely measured using the \nDHT22 sensor module on Arduino board; soil moisture is measured using the \nhygrometer sensor – SEN13322; the atmospheric pressure, precipitation, and \n\n97 \n \nrainfall are observed from the weather stations. The data from the sensor devices \nare pushed to the cloud for easy access and future analysis. \nFor the IK on drought domain, the preliminary task was to recognise the local \nindicators for the indigenous knowledge on drought. This is achieved through the \nreview of existing literature presented in Chapter Two. Here, the indigenous \ndrought forecasting indicator are categorised under: (1) patterns of seasons; (2) \nbehavior of animals, insects and bird; (3) behavior of plant/trees; (4) \nmeteorological; (5) astronomical; and (6) knowledge of seasons. Further, each of \nthe local indicators has an attributed certainty factor (CF), which is the measure \nof belief/disbelief in the local indicator as determined by IK experts who are the \ncustodian of the IK in the study areas. For example, if the sighting of \nPhezukomkhono (a migratory bird) indicating the onset of the raining season has \na CF of 0.20, this might imply there is a 20% chance of onset of the raining season \nunless combined with other local indicators for accurate generation of inference \nfrom the set of local indicators.  \n4.2. \n Domain 1 – Local Indigenous Knowledge on Drought \nThis research study is focused on the indigenous knowledge system of Swayimane \nin KwaZulu-Natal, South Africa and Mbeere community in Embu County of \nKenya. The local indigenous knowledge on drought knowledge collection and \ngathering is based on the Indigenous Knowledge System Data Collection (IKSDC) \nframework of the middleware’s Data Acquisition FG. The IK on drought was \ngathered by the author with the help of facilitators.  Both focus groups and \nquestionnaires were used for the IK collection over a period of 12 months. IK data, \npreviously collected in two related projects (Mwagha, 2017; Masinde, 2015) were \nalso utilised. \n4.2.1. Data Collection – Swayimane, KZN \nIn this case study, indigenous knowledge experts from Swayimane community \nparticipated in the knowledge acquisition process (Figure 4-1). Through the help \nof a local facilitator, the contents of the questionnaire and objective of the research \nwere communicated in the isiZulu language. The surveying and the structured \n\n98 \n \ninterview took place between September to March 2017 with the aim of using the \nquestionnaire to measure the application level of indigenous knowledge on \ndrought in the area under study. \n \nFigure 4- 1: Surveying and interviewing IK experts and local farmers at \nSwayimane, KZN, South Africa (Source: Author). \n4.2.1.1. \n Demographics of Respondents \nA sample of 61 respondents consisting of 82% females and 18% males participated, \nusing the positive sampling technique (Duan & Hoagwood, 2013) from uMngeni \nlocal municipality of uMgungundlovu district of KwaZulu-Natal. All the \nrespondents are active farmers utilising IKS for drought forecasting and cropping \ndecisions and are from Swayimane village of the uMngeni municipality of \nuMgungundlovu district, KZN, South Africa. \nThe majority of the respondents were middle-aged females, with 8.1% falling in \nthe age bracket of 18 to 35 years; 13.1% of the respondents were between the ages \n\n99 \n \nof 36 and 45 years; 32.7% of the respondents were in the age bracket of 46 and 55 \nyears; 40.9% were between the ages of 56 and 65 years and only 4.9% fell in the \nage bracket of above 66 years. \n \n \nMost of the respondents had a basic education, with 75.5% having some form of \neducation, and 25.5% had none. The level of education distribution was 45.9% \nhaving primary education; 18% with a secondary qualification and 11.4% with a \nform of post-secondary qualification.  \nThe main economic activity of the sample group was farming. The reason for this \nwas obvious due to the fact that IK knowledge of forecasting and predicting \ndrought was the criterion for selecting the respondents. \n4.2.1.2. \n Knowledge of Indigenous Knowledge System on Drought \nDuring the interview and survey process, the respondents were asked about their \nknowledge and the significance of the IKS. Of these, 85.2% stated that they used \none form of local indicator or another for forecasting drought and to determine \nwhen to prepare their crops or when to plant their crops, while 14.7% relied on \ndrought forecasting information from the municipality weather services, radio or \nnews channel.  \nWhen asked to categorise the indicators they use, 42.6% of the respondents \nindicated they use meteorological indicators such as knowledge of the seasons, \n21.3% of the respondents use astronomical indicators such as moon phases or \ncloud patterns, 36.0% relied on behavioural indicators such as ecological \ninteraction of animals and plants (Table 4-1).   \nTable 4- 1: Categories of IK used by the respondents – Swayimane, KZN. \n \nFrequency \nPercent \nCumulative Percent \n \nMeteorological  \n26 \n42.6 \n42.6 \nAstronomical \n13 \n21.3 \n63.9 \n\n100 \n \nBehavioural \n22 \n36.0 \n100.0 \nMyth and Religious \nBeliefs \n0 \n0 \n100.0 \nTotal \n61 \n100.0  \n \n4.2.1.3. \n Characteristics of Weather Seasons in Swayimane, KwaZulu-\nNatal \nThe findings from the survey and interviews indicated four (4) seasons in \nKwaZulu-Natal; this is further corroborated by existing research reported in \nMwagha and Masinde (2016). The summer season is from October to February \nand locally called ihlobo; Autumn is from March to May and is called \nintwasabusika, Winter exists from May to July and is called ubusika, and Spring \nis called intwasahlo in the local language, isiZulu. Table 4-8 below shows the \ncategory of each season.  \nTable 4- 2: Onset and Cessation of Weather Seasons in KwaZulu-Natal. \nSeason \nLocal Name \nOnset \nsigns \nCessatio\nn signs \nLocal \nindicators \nStar\nt \nEnd \nSumme\nr \nihlobo \nHot \nweathe\nr \nDry \nwinds \nLess \nrain \nCold \nWinds \nRain stops \nMagwababa, \nInkojane, \nNtuthwana \nants, etc. \nOct \nFeb \nAutumn intwasabusik\na \nTrees \nshed \nleaves \nVery cold \nInyosi bees, \nMviti tree, etc. \nMar \nMa\ny \nWinter \nubusika \nCold \nMist \nWarm \nweather \nOnogolantethe \nbird etc \nMay \nJul\ny \n\n101 \n \nSpring \nintwasahlo \nLot of \nwinds \nHot \nweather \nPhezukomkhon\no bird, etc. \nAug \nOct \n \n4.2.1.4. \n Indigenous Knowledge Drought Indicator for KwaZulu-\nNatal \nIK indicators are a critical component of the IKS. The observation or occurrence of \nthe local indicators helps in making decisions about the likely occurrence of \ndrought or related environmental phenomena. However, in most cases, several \nindicators are combined before reaching a likely interpretation of the local \nindicators or scenarios observed. Since observation of indicators is mostly in the \nform of sighting, observation or ecological interactions, listing the local indicators \nwith their respective interpretation is paramount. IK holders, experts and local \nfarmers provide the list of the indicators as well as the in-depth interpretation of \nthe scenarios. \n \n\n102 \n \nTable 4- 3: Swayimane KwaZulu-Natal Weather Indicators. \n\n103 \n \n \nSUMMER (Oct – Feb) \nAUTUMN (March-\nMay)  \nWINTER (May – \nJuly) \nSPRING (Aug – Oct) \nAstronomica\nl \n• \nFull moon \n• \nThe moon is small \nin size \n• \nFull moon \n• \nHalf of small \nmoon \n• \nHalf moon \nMeteorologi\ncal \n(Knowledge of \nthe Seasons) \n• \nVery hot weather \n• \nHigh temperature \nduring the day and \nnight \n \n• \nCold weather \n• \nIts rains \n• \nPresence of \nthunderstorm and \nlightning. \nBehaviors of \nBirds \n• \nMagwababa and \ninkojane flock in \nbefore the rain \n \n• \nOnogolantethe \nbird searching for \nsmall snakes and \nearthworms to \neat \n• \nFlocking in of \nPhezukomkhono which is \na noisy yellow bird that \nflocks in during the \nspring \nBehaviors of \nInsects \n• \nInsects are present in \nthe summer \n• \nNtuthwana ants are \npresent. \n• \nInsects are \ndecreasing in \nAutumn. \n• \nPresent of Inyosi \nbees \n• \nInsects are \nabsent in the \nwinter \n• \nAnts are hiding \n• \nNo ants \n• \nAbsence of Inyosi bees \n• \nLittle insects are sighted \nBehaviors of \nAnimals \n• \nThe animals are \nbeautiful and look well \nfed in summer \n• \nSighting of Ingxangxa \nfrogs \n• \nCattles are gaining \nweight and getting fat \n• \nMost animals are \ngetting fat. \n• \nThe animals are \nthin \n• \nCows are fat \n• \nLittle trace of \nbush animals, \nbecause of the \ncold weather; \nactivities \n• \nThe animals are \nthin \n• \nThe animals have \naverage weight \nFlower, \nleaves and \nfruit \nproductions \n• \nMviti trees are \nflowering \n• \nPeach trees are \nflowering \n• \nSome plants leaves \nare withering  \n• \nWithering of \nleaves of some \ntrees \n• \nBlooming of Guava tree. \n• \nFlowering of trees like \nWattle, Wiki-Jolo and \nUmphenjane. \n\n104 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nby some \nTrees \n• \nAmapetjies trees are \nblooming \n• \nMiviti tree is \nwithering and \nloosing leaves \n\n105 \n \n4.2.2. Data Collection – Mbeere District \nFor Mbeere study area, the questionnaire, the ODK mobile application (see \nAppendix B) and focus groups were used. The data was collected through the \napplication ODK Collect and saved to the database (Google Sheet). Figure 4-2 \nrepresents the structure of the database entry in the Google Sheet. The data \ndistribution saved to the Google Sheets was visually analysed using Google Fusion \nTable for the data analysis. \n \nFigure 4- 2: Mbeere’s District Respondents entry in the database (Source: \nAuthor). \n4.2.2.1. \n Data Analysis – Mbeere District \nA sample of 1505 respondents’ data was collected. The first set of data in the form \nof raw data is obtained by combining the digitalised respondents’ information from \nthe questionnaires with the data from the mobile application online database \nrepository (Google Sheets). The combined data was processed to eliminate \nambiguities and repetitions into a form compatible with Google Fusion for data \nvisualisation.  \nBy gender, the respondents consisted of 70.1% females and 29.9% males from \nMbeere community (Figure 4-3). All the respondents were active farmers utilising \nIKS for drought forecasting and cropping decisions. Furthermore, 21.4% of the \nrespondents fell in the age bracket of 18 to 35 years; 33.5% between the ages of 36 \n\n106 \n \nand 45 years; 36.1% of the respondents were between the ages of 46 and 55 years; \nand only 9% were above 66 years. \nAll the respondents had a basic education, with 62.5% having primary education, \n31.2% with secondary qualification, and 6.3% with a form of post-secondary \nqualification.  \nUnderstanding the cropping practices in the area helped in determining the \npotential impact of drought on the crops.  The response showed that most farmers \nengaged in mixed farming – where two or more crops are planted as displayed in \nthe chart below (Figure 4-3). The chart indicates the quantity of crops produced \nby the respondents in the population sample in tonnes. For example, 10000Kg of \nmaize, beans, sorghum and green grams were produced. \n \nFigure 4- 3: Distribution of the Respondents by crops planted – Mbeere (Source: \nAuthor). \n4.2.2.2. \n Knowledge of Indigenous Knowledge System on Drought \nTo determine the knowledge of the respondents in IKS, respondents were asked \nabout their level of understanding and usage of the IKS. Of these, 99.42% stated \nthat they rely on one form of local indicator or another for forecasting drought and \nto determine when to prepare their crops or when to plant their crops, while only \n0.58% relied on drought forecasting information from the weather services in the \narea (Figure 4-4).  \n\n107 \n \n \nFigure 4- 4: Distribution of the Respondents by IK usage – Mbeere (Source: \nAuthor). \nWhen asked to categorise the form of local indicators used, 47.92% of the \nrespondents use meteorological indicators such as knowledge of the seasons, 29.7% \nused astronomical indicators such as moon phases or cloud patterns, 21.9% relied \non behavioural indicators such as ecological interaction of animals and plants and \n0.48% relied on myth and religious beliefs (Figure 4-5). \n \nFigure 4- 5: Categories of IK used by the respondents – Mbeere (Source: Author) \n4.2.2.3. \n Characteristics of Weather Seasons in Mbeere Community \nIK among the Mbeeres has been extensively studied and served as a subject of \nresearch by Masinde (2013, 2015, 2018), which was used to validate the findings \nfrom this research. The onset and cessation of seasons in Mbeere community are \nstated in Table 4-4, which shows, the long rains, dry season and short rains \n(Masinde & Bagula, 2011).  \n\n108 \n \nTable 4- 4: Onset and Cessation of Weather Seasons in Mbeere Community. \nSeason \nLocal \nName \nOnset signs \nCessati\non signs \nLocal \nindicators \nSta\nrt \nEn\nd \nTransition   \nHigh \ntemperature \nRains \nTemperature, \nlightning, \nmidithu \ninsects, etc. \nJan \nFeb \nLong \nRains \nMbura \nya \nnihorok\no \nThunderstor\nms, lightning, \netc. \nVery cold \n& foggy \nThunderstorm\ns, Bugvare, \nbeetles, etc. \nMar \nJun\ne \nDry \nSeason \nMbevo \n(cold) & \nThano \n(dry) \nHigh \ntemperature \nat night, \nwindy, etc \nWarm \nweather \nKamutuanjiru, \nmidithu \ninsects, etc. \nJun\ne \nOct \nShort \nRains \nMbura \nya \nmwere  \nSharp \nlightning \nfrom the \nEast, etc. \nHot \nweather \nNgiri, Thari \nbird, etc. \nOct \nDec \n \n \n4.2.2.4. \n Indigenous Knowledge Drought Indicator for Mbeere \nCommunity \nIK indicators are a critical component of the IKS; the observation or occurrence of \nthe local indicators helps in deciding the likely occurrence of drought or related \nenvironmental phenomena. Local indicators for Mbeere community are well \ndocumented by Masinde (2015). This helps in refining and listing the IK indicators \nin the study area. Table 4-5 below provides the list of the indicators on a seasonal \nbasis as well as the interpretation or implication of the sighting and/or occurrence \nof the indicators. \n\n109 \n \nTable 4- 5: Mbeere IK Weather Indicators (Source: Masinde, 2015) \n \nJanuary – February  \nLong Rains  \nDry Season \nShort Rains \nAstronomica\nl \n \n• \nSighting on new \nmoon \n• \nVisible phases of the \nmoon \n \n• \nSighting on new \nmoon \n• \nVisible phases of \nthe moon \nMeteorologi\ncal \n(Knowledge of \nthe Seasons) \n• \nModerate daily \ntemperature \n• \nDrizzling in the \nevening \n• \nSevere \nthunderstorms \n• \nSprouting of new \nleaves by \ncowpeas \n• \nCold temperature \nat night \n• \nWhirling winds \n• \nRaining daily \n• \nEarly morning dews \n \nBehaviors of \nBirds \n \n• \nKivuta mbura birds \nstarts making \nsounds \n• \nNesting of Ngoco \nbird along water \nbanks. \n \n• \nFlocking of thari \nbird signifies onset \nof drought. \nBehaviors of \nInsects \n• \nSighting of Midithu \nants \n• \nCroaking of frogs \n• \nBugvare birds are \nbuilding their nests. \n• \nMindithu starts \nmoving \nsouthwards \n• \nNgiri starts \nmaking noise \nBehaviors of \nAnimals \n• \nGoats giving births \n• \nCows and bulls \njumping up and \ndown. \n• \nLow nesting of \nngoco bird near \nwater banks \n• \nBulls behavior  \nFlower, \nleaves and \nfruit \nproductions \nby some \nTrees \n• \nMango trees fruiting, \nYield size of Ngaa \n• \nSprouting of \nnthinuriu and \nmbaku \n• \nBlooming of \nmigaa and \ncowpeas. \n• \nMaturity and \ngermination of \nkaramba ka nthi \n• \nFlowering of \nmugaa, mutororo \n• \nFlowering of \ndrought category \nmango tree \n\n110 \n \n4.2.3. Representation and Use of Aggregated Indigenous Knowledge  \nThe gathering and collection of local IK on drought from the case studies help in \ndocumenting and understanding the local indicators used by the indigenous \nfarmers in predicting drought (Manyanhaire, 2015). Each indicator is subjective \nto different interpretation based on the sighting or occurrence. However, in most \ncases, several indicators are combined to achieve a definite interpretation.  \nThe aggregated IK data gathered from the two study areas are used for the \nsemantic representation of the local indigenous knowledge on drought domain, \nusing an ontology (see Chapter 5). Semantic modelling and knowledge \nrepresentation of local IK on drought are fundamental in achieving RO – \nintegration of the two heterogeneous data sources – IK and WSN data.  The \nknowledge is formalised into the semantic structure using an ontology for machine \nreadability, reusability, integration, and interoperability with another sub-system \nin the distributed FG of the middleware. \nAlso, interpretation of several indicators and observations identified from the \nindigenous knowledge gathered from the domain experts are constructed in the \nform of rules for use in the Inference Engine FG of the middleware. These rule set \nwill be saved in the knowledge base and are used to infer and predict drought \nphenomenon by the inference engine. The expert system module generates \ninference by using the rule set derived from the IK and provides DFAI with \nattributed CF based on the set of user’s inputs.  \n4.3. \n Domain 2 – WSN & Weather Station Data \n4.3.1. Wireless Sensor Data Collection \nThe WSN data gathering process started with the deployment of the sensors to \nremote locations in the area under study. The sensor boards transfer data from \nthe sensors to the gateway/sink in the WSN. These time-critical sensor readings \nare sent to the Sigfox cloud (IoT Hub) using the Sigfox network. The Squidnet \nnetwork module contains a unique identifier (UID) which gives access to the Sigfox \ncloud backend web interface. The Sigfox module is connected to the microcontroller \n\n111 \n \nboard and all sensor readings based on the preset time frames are uploaded to the \ncloud accessible via the backend (Figure 4-7).  \n \n \nThere are the capabilities to create callbacks to transfer data received from the \ndevices associated with this device type to an IT infrastructure. The backend \nautomatically forwards some events using the “callback” system. A callback is a \ncustom HTTP request or routine that consists of the device(s’) data and readings \nsent to a cloud server/platform. The callbacks are automatically triggered when a \nnew message is received from the device, when a location has been computed, or \nwhen a device communication loss has been detected. In this research, the callback \nfunction will be used to push the streams of sensor data through the Data Storage \nFG to the Stream Analytics FG for data analytics and inference generation in real \nFigure 4- 6: Squidnet Network Module (Source: Author). \nFigure 4- 7: Sigfox Cloud Web Interface (Source: Author). \n\n112 \n \ntime and data streams in real time. The sensor readings are available in JSON, \nXML and CSV data format. \n \n4.3.2. Sensors \nMiniature sensor modules were connected to the microcontroller boards to \nremotely measure the temperature, humidity, soil moisture and atmospheric \npressure while the weather station was used for reference measurements. \nHowever, in some cases where the IoT devices could be damaged, the weather \nstation is used. Table 4-6 below list the sensor modules used to measure \ntemperature, humidity, soil moisture and atmospheric pressure. \nTable 4- 6: List of sensor modules. \nWeather Parameter Sensor Module \nHumidity \nTemperature \nSensor module DHT22 is a sensor used to measure \nhumidity and digital temperature. This sensor is a   \ncombination of the capacitive humidity sensor and a \nthermistor. The sensor measures the surrounding air \nand readings are channelled out in the form of a digital \nsignal on the data pin. DHT22 is an improvement on \nthe previous version (DHT11), and compatible with \nmost microcontroller boards. \nDHT22 (Source: Author) \n\n113 \n \nSoil Moisture \nThe \nSEN13322 \nand \nthe \nIrrometer \n200SS-5PR \nWatermark sensor were used to measure the soil \nmoisture. The SEN13322 is less fragile and can only be \ninserted to the depth of 5cm to prevent water/moisture \nfrom short-circuiting the exposed electronic component \nof the sensor. The most commonly known issue with soil \nmoisture sensors is the exposure to moisture and water, \nwhich \nadversely \nshortens \ntheir \nlifespan. \nThe \nWatermark sensor is a probe can be embedded at a \ngreater depth due to enclosed electronic components.  \nSEN13322 (Source: Author)   Irrometer 200SS-5PR \n(Source: Author) \nAtmospheric Pressure The \natmospheric \npressure \nsensor \nused \nis \nthe \nMPX4115A/MPXA4115A from Motorola. The sensor \nconverts atmospheric pressure to an analogue voltage \nby using a silicon piezoresistive sensor element. \nPressure Sensor (Source: Author) \n \n\n114 \n \nThe deployed sensors take the readings of the environmental parameters and \nstreams the sensor readings to the CEP engine component of the Stream Analytics \nFG. The readings are uploaded to the Sigfox cloud at every interval.  \n4.3.3. Weather Station Data Collection \nA weather station is the aggregation of instrument and equipment for measuring \nenvironmental conditions to provide information to understand and study the \nweather and climate. In the two areas under study, there is a weather station that \nmonitors and record the precipitation, rainfall, relative humidity, air temperature \nand atmospheric pressure in real time. The weather stations are situated in an \narea free of obstruction in accordance with the manufacturer’s specifications. The \ncurrent readings and the historical data are stored in the repository accessible via \nthe web interface.  \nThe weather station consists of components that are used to measure and monitor \nthe weather and climate, based on a programmable datalogger. The measuring \ninstruments and sensors, measures, processes, stores, and transmits the data via \nmultiple communications channel. In this instance, the readings and historical \ndata are available and accessible online in real-time. Figure 4-9 shows the weather \nFigure 4- 8: Swayimane Weather Station (Source: Author). \n\n115 \n \nstation readings at Swayimane, KwaZulu-Natal, South Africa through a web \ninterface; the data are readily available for download in JSON, CSV and XML \nformat.    \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \nIn the Kenya case study, the research study leverage on the partnership between \nthe Central University of Technology, Free State and Trans-African Hydro-\nMeteorological Observatory (TAHMO) to have access to real-time weather station \nreadings data.  The current and historical weather data is available and accessible \nFigure 4- 9: Real-time readings of Swayimane Weather Station (Source: \nhttp://agromet.ukzn.ac.za/). \n\n116 \n \nonline in real time via the TAHMO web portal (Figure 4-10). TAHMO also offers \naccess to backend data sources through the use of RESTful APIs for data \nintegration and utilisation. \n \nFigure 4- 10: TAHMO Web Portal (Source: www.portal.tahmo.org) \n4.4. \n Summary \nThis chapter presents the data collection for the heterogeneous data sources \nthrough the Data Acquisition FG. The IK is gathered using qualitative \ninterpretative methodology from the interviews with local farmers and indigenous \nknowledge domain expert using questionnaire, structured interviews, and survey \nmobile applications. The IK data are analysed and processed with the main focus \nto document the unstructured IK on drought knowledge. The structured WSN and \nweather station data are collected from the weather station and deployed sensors. \nThe indigenous knowledge on drought obtained in the Data Acquisition FG serves \nas input for the Data Storage FG, Stream Analytics FG and Inference Engine FG \ntowards the realisation of semantics-based data integration middleware for local \nindigenous knowledge and modern knowledge on drought. \n\n117 \n \nCHAPTER FIVE \nKNOWLEDGE MODELLING AND REPRESENTATION \nUSING ONTOLOGIES \n5.1. \n Introduction \nIn all forms of communication, the ability to share knowledge and information is \noften hindered because the meaning of information and the application of \nknowledge can be severely aﬀected by the context in which it is interpreted. This \nnotion is applicable in all spheres of human endeavours and subsequently now in \nintelligent information systems. The problem is most severe for application \nsystems that must manage the data heterogeneity in various domains and \nintegrate models of diﬀerent domains into coherent frameworks (Ciocoiu, Nau & \nGruninger, 2001). The lack of detailed meaning prevents or affects the full \nexpressivity, use, reuse and application of knowledge and information irrespective \nof the context. When there is a lack of adequate meaning, the integration of several \nforms of information and knowledge towards a common goal of understanding \nbecome less desirable. Thus, the important aspect of interoperability is the \nmechanism to represent data. For example, in the environmental monitoring \ndomain, the integration of different forms of knowledge in software applications \nhave become central to improving the degree of accuracy of environmental \nmonitoring systems due to the variability of environmental parameters. But this \neffort is hampered by diﬀerent representations of the same information and use \nabstruse axioms and terminology in diﬀerent contexts to mean diﬀerent things \n(Kuhn, 2009; Akanbi & Masinde, 2015b; Devaraju, 2009), with the key challenge \n– how to infer accurate knowledge heterogenous environmental observations. \nIn this research, considering the challenges of integrating these heterogeneous \ndata sources that were acquired and presented in Chapter 4, a solution to this \nproblem was proposed through the use of semantic technologies and ontologies \n(Kuhn, 2005; Kuhn, 2009; Fogwill et al., 2012; Akanbi & Masinde, 2015b; \nDevaraju, 2009; Guarino, 1998; Walls, Deck, Guralnick, Baskauf, Beaman, Blum, \n\n118 \n \nBowers, Buttigieg, Davies, Endresen, & Gandolfo, 2014; Gómez-Pérez & \nBenjamins, 1999; Akanbi, Agunbiade, Kuti, & Dehinbo, 2014; Bally, Boneh, \nNicholson & Korb, 2004; ) for a common understanding of concepts and terms. The \napplication of ontology presents explicit semantics for the entities and concepts \nused, rather than relying just on the syntax used to encode those concepts. The \nadoption of ontological techniques helps with resolving ambiguity with abstruse \nterms, axioms and relationships for the local indigenous knowledge on drought \ndomain (D1) and WSN domain (D2). This will ensure unifying the diﬀerences in \nhow information and knowledge are conceptualised, and formal knowledge \nrepresentation for translating those deﬁnitions and relationships into the \nspecialised representation languages of intelligent systems.  \nThis chapter presents the formal process of semantic representation of the \nheterogeneous data sources used in this research – the natural indicators, \nbehavioural and ecological interactions of local IK on drought forecasting (D1) and \nthe acquired sensor data from the WSN (D2). The knowledge is formalised into a \nsemantic structure using an ontology for machine readability, reusability, \nreasoning, integration, and interoperability with intelligent systems in fulfilment \nof the research objectives (RO) and system requirement (FR1, FR2 and NFR1). \nThe objective is to model the acquired knowledge in an explicit form that is \nshareable and reusable for use by the Inference Engine FG subsystems. The \nchapter hence presents the Inference Engine FG component of the semantic \nmiddleware; it describes the ontology modules for the semantic representation of \nthe heterogeneous data sources, the development processes of a domain ontology \nfor local IK on drought and the adoption of an existing ontology for WSN sensors \ndata. \n5.2. \n Knowledge Modelling & Representation of Local Indigenous \nKnowledge on Drought (D1) \nBefore the commencement of knowledge modelling and formal representation of a \ndomain using an ontology, effort have made towards reviewing the literature for \nany existing ontology that could be modified, extended or reuse. Currently, domain \nontology that captures the context of local indigenous knowledge on drought \n\n119 \n \nexplicitly using standardised languages for data exchange and semantic \nintegration across software boundaries is missing (Akanbi & Masinde, 2015a). \nDomain ontology describes the properties, attributes and interrelationships of \nconcepts, about a specific domain. Designing ontologies is the first step towards \nthe integration and interoperability vision (Gerber et al., 2015; Akanbi & Masinde, \n2015b). Local IK on drought such as the behaviour of natural indicators, ecological \ninteractions between different species of insects and animals, sighting of \nmigratory birds, blooming and withering of floral and leaves – all pointing to the \nlikely occurrence of an environmental phenomenon can be used to forecast drought \naccurately (Masinde & Bagula, 2011; Manyanhaire, 2015). The semantic \nknowledge representation of the domain using an ontology lead to richer \nprocessing of the concepts and knowledge through the use of a rule-based \ninferencing system as proposed in this research study (Akanbi & Masinde, 2018a).  \nKnowledge modelling and representation using an ontology has modernised the \ninference \nsystems \ncapability \nby \npermitting \ninteroperability \nbetween \nheterogeneous knowledge systems and semantic web applications (Fahad & Qadir, \n2008). Developed ontologies can also furnish the necessary semantics for inference \ngenerating capability required in intelligent systems (Fahad, Qadir & Shah, 2008). \nOntological modeling of the indigenous knowledge on drought involves identifying \nthe domain-controlled vocabularies, taxonomies, properties, and relationships; for \nadding of semantic (meaning) annotation to the data for an accurate inference \ngeneration from the knowledge base (KB) and to make them available in a \nstructured form that can be processed by computers (Guarino, 1998). The \nmethodology of knowledge modelling and representation has been outlined and \npresented in Chapter Three.  \n5.2.1. Ontology Development and Encoding of IKON – Knowledge \nRepresentation \nThe ontological representation and encoding of the local indigenous knowledge on \ndrought in formal, machine-readable languages is a critical part of the knowledge \nmodelling process for the domain. This phase comprises the initial knowledge \ngathering and formalisation phases, both intertwined, and led to the development \n\n120 \n \nand encoding of Indigenous Knowledge on Drought Domain ONtology (IKON) \n(Akanbi & Masinde, 2018c) – domain ontology for local indigenous knowledge on \ndrought. The method consists of the following steps a) enumerate terms in the \nontology; b) define the classes and the class hierarchy; c) define the properties of \nclasses; d) define the class instances.  \na) Enumerate terms in the Ontology.  \nThis step involves the development of the terminology about the domain; \nthis is done by reviewing related published and working papers and \ninterviewing \nthe \nindigenous \nknowledge \ndomain \nexperts \nthrough \nquestionnaires and workshops with the focus groups. This allows the \nanalysis of the domain data based on axioms and terms. Enumerating the \nterms in the domain provides an explicit knowledge of the domain. This is \nachieved by identifying the concepts that could become the classes of the \ndomain. The phrase “IS-A” is a pointer to identify the class and sub-class \nrelationship. \nFor \nexample, \nin \nthe \nlocal \nindigenous \ndomain, \nPhezukomkhono “IS-A” local bird sighted which is categorised under the \nBird sub-classes under the Vertebrate sub-class etc. The “IS-A” indicate \nsome form of inheritance between the class and its sub-classes. Another way \nof spotting an inheritance or sub-class of a class is through the direct \nmentioning of terms like “KindOf” and “TypeOf”. This process is used to \nidentify the classes and sub-classes in the domain before encoding Protégé \nontology editor. \nb) Define class and hierarchy.  \nEach class in the domain has a corresponding OWL class, since an OWL \nclass represents a set of individuals that form the extension of the concept \nmapped by class. Based on DOLCE foundational ontology classification, the \nidentified classes are categorised with on their attributes. For example, \nDurationOfRainfall and StreamWaterLevel are two physical qualities, \ni.e. subclasses of the dolce:physical-quality class. The activities or \nrelationships of the entities are described ontologically as DOLCE \nprocesses. For example, Blooming is an Event, i.e., subclasses of \ndolce:perdurant based on DOLCE classification. These OWL classes form \n\n121 \n \nthe basis of the IKON ontology as during the construction of taxonomy. The \nclasses are organised in a taxonomy created by the subsumption relation. \nAll classes and sub-classes created are a subset of Thing which means \nowl:Thing is the class of set of all defined individuals. However, something \ninherent about the classes is that they can be disjoint which means \nexpressing the logic that the individual cannot belong to more than one \ndifferent classes, for example, an individual of the sub-class Vertebrate \ncannot belong to a sub-class FloweringPlants under any circumstances. \nIn an ontology development project, it is critical to add the natural language \ndescription in the form of annotation to the classes and other ontology \nentities defined, this helps in the detailed documentation of the ontology. \nThis is achieved by annotating each class or entity on the annotation section \nof the class or sub-classes. For example, the annotation of class \nLivingThingsBehaviour is depicted in Figure 5-1 below. \n \n \nSix main classes are identified and are subclasses of Thing as depicted in \nFigure 5-1. The six main classes were classified under the owl:Things into \nsuperclasses \nowl:LivingThings, \nowl:NonLivingThings, \nowl:LivingThingsBehaviour, \nowl:NonLivingThingsBehaviour, \nowl:Event and owl:TimeAndPlace. Each of these classes with subclass \nhierarchy. The domain was classified based on the expert knowledge, and \nFigure 5- 1: Annotation of class LivingThingBehaviour (Source: Author). \n\n122 \n \nthe mapping of the domain classes to the ontology was achieved through \nobject-oriented techniques using multiple inheritances. After the main \nsuperclasses of the local indigenous knowledge, the subclasses of each of the \nsuperclasses are defined. The IKON domain ontology represents all types \nof entities, relationships and events of the local indigenous knowledge on \ndrought in the study areas. Through the use of natural indicators and \nrelations to model the events or scenario in the domain. The domain \nontology is reusable and fully extendable to accommodate additional \nindicators or drought-related events.  \n \nThe superclass owl:LivingThings will be classified into two subclasses of \nowl:Animals and owl:Plants, each with its own derived subclasses and \nindividuals that are instances of the subclasses, for example, Mugumo tree, \nWild figs, Peulwane bird, Lehota frog, Sifenenefene worms, etc. The \nowl:NonLivingThings class is used to capture the non-living entities of \nthe IK domain, with individuals such as Temperature, Rain, Humidity, etc. \nFigure 5- 2 The hierarchical representation of the IKON Ontology classes and subclasses \n(Source: Author). \n\n123 \n \nBehaviours \n(or \nobservations) \nare \nrepresented \nas \nsubclasses \nof \nowl:LivingThingsBehaviour and owl:NonLivingThingsBehaviour. \nAn owl:LivingThings and owl:NonLivingThings provides a view on a \nset \nof \nentities \nwhich \nis \nconsistent \nwith \na \ndescription. \nThe \nowl:LivingThingsBehaviour and owl:NonLivingThingsBehaviour is \nused \nto \nmodel \nthe \ncorresponding \nbehavioral \nactivities \nof \nthe \nowl:LivingThings and owl:NonLivingThings respectively, for example, \nsighting of migratory birds, blooming of flower, withering of plant, etc. The \nmapping of the semantically annotated behaviours (observations) to the \nentities is a formalisation of domain knowledge and allows deductive \ninference. The outcome of this phase for our proposed ontology helps to \nconceptualise and have a detailed understanding of the controlled \nvocabularies used, the class, properties, and relationship \nc) Define class properties. \nAfter identifying the classes and defining it, the next step is the class \nproperties definition. The definition of class properties ensures the addition \nof semantics to the identified and defined concepts. Properties are used to \ndescribe attributes of the class, for example, characteristics of a class of \nAnimal. In OWL the term used for relation is properties. OWL allows the \nspecification of two main types of properties: object property and data \nproperty. In the IK domain, the relation (properties) capture the relation \ndescribing the objects in general. However, an object property is defined to \nrelate classes and their objects. Further refinement could be added to the \nproperties to include property constraints which describe or restrict the set \nof possible property value. Below are some of the object properties of this \nstudy’s ontology. All the object properties (Figure 5-3) created are based on \nthe ontology classes interrelationship. Few examples are stated below:  \n \na) hasFlower \nrelates \na \nFlower \nplant \nwith \nthe \nFloweringPlantBehaviour which is the state of flowering \ndepending on the seasonal changes. \n\n124 \n \nb) OccursAt relates the occurrence of an Event with the corresponding \nclass. \nc) hasWithered relates the Plant with PlantBehaviourEvent. \nd) BloomingOf is an object property that relates Flower with \nBlooming Behavior. \ne) hasPhase relates Moon with phases of moon such as FullMoon, \nHalfMoon and SmallMoon. \nf) hasTemp relates to the daily average Temperature. This can either \nbe High or Low as assumed by the IK expert. \ng) hasWindSpeed relates to the average WindSpeed for the day as \ndetermined by the IK expert. \n \nFigure 5- 3: The object properties of IKON Ontology classes and subclasses (Source: Author). \n\n125 \n \nThe data property can be simple or complex, this difference depends on the \ntype of class, and are special attributes whose values are the object of (other) \nclasses, or used to associate something to a data value. Figure 5-4 shows \nsome of the captured data properties in Protégé.  \nFor example, during modelling, the data property AnimalSighting is a \nboolean property that has two data values, “Yes” or “No”. This data property \nis used to represent the sighting of a particular local indicator, an animal \nin this instance. The type of animal sighted at an instance of time and period \nhas an interpretation in the local indigenous knowledge on drought domain. \nAnother example is StreamWaterLevel, DurationOfRainfall etc. \nd) Class instances. \nFigure 5- 4: The data properties of IKON Ontology classes and subclasses (Source: Author). \n\n126 \n \nThe class instances are the member (individuals) of the class and are the \nstructural component of an ontology. The instances are “Individual” created \nafter defining the classes, sub-classes, data and object properties of the \ndomain. Individuals are added to the classes by Protégé by selecting the \nclasses and click “Instance”. This allows the add “individual button” to add \na new instance to the class. Some individuals created are called asserted \nindividuals if they declare explicitly the class they instantiate. In IKON \nontology, each class has several individuals. Figure 5-5 depict some of the \nIKON individuals. \n \n \n5.2.2. Lightweight Ontology Representation of IKON \nThe lightweight ontology representation of a domain is the visual representation \nof an ontology through the use of appropriate graphical notation. Lightweight \nontology is tree-like structures where each node is labelled with corresponding \nFigure 5- 5: Some Individuals of IKON Ontology (Source: Author). \n\n127 \n \nnatural language concept names. The lightweight ontology representation consists \nof backbone taxonomies of the domain.  \nIn Protégé, there exist several plugins for the visual lightweight ontology \nrepresentation of IKON ontology such as OntoGraf, OWLViz and VOWL. This \nresearch adopts the use of OntoGraf for the visual representation of the IKON \nontology due to several inherent features that shows the detailed overview as well \nas the subsumptions relationships between the nodes (subclasses and the classes). \nFigure 5-6 below shows the lightweight visual representation of IKON ontology. \n \n \n \nFigure 5- 6: Lightweight visual representation of IKON ontology using OntoGraf (Source: \nAuthor). \n\n128 \n \n5.2.3. Heavyweight Ontology Representation of IKON \nA heavyweight ontology of IKON is an enriched version of the lightweight ontology \nencoded using OWL with necessary axioms to fix the semantic interpretation of \nconcepts and relations. The inclusion of axioms is what differentiate lightweight \nontologies from the heavyweight ontologies. For semantics-based information \nsystems, axioms are a critical component of the ontology module (Fürst & Trichet, \n2006) and are in the form of statement, assertions and inference rules – which are \nused to perform deductive inference on the domain. The heavyweight ontology \nrepresentation of IKON will allow the generation of deductive inference and \nautomated reasoning. The heavyweight ontology representation of IKON includes \naxioms added to the domain ontology encoded using OWL in Protégé. The encoded \nIKON domain ontology is represented based on the OWL/XML Syntax. Figure 5-7 \nshows the code snippet of the representation of a class in IKON ontology. The \ncomplete OWL/XML code representation of IKON domain ontology is available on \nAppendix C. \n\n129 \n \n \n5.2.4. Publishing and Deployment of IKON \nThe deployment and publishing of the developed IKON ontology involves the \nrelease of the ontology/knowledge model and publishing the ontology. Deployment \nof a domain ontology is about sharing the knowledge model with the research \ncommunities and published in a major ontology repository, for other users or \nresearchers to download, reuse, extend or improve. IKON has been published as \na research paper (Akanbi & Masinde, 2018c) and added to online ontology \nrepository, \navailable \nfor \ndownload \nvia \nGithub \n(https://github.com/yinchar/Indigenous-Knowledge-on-Drought-Domain-\nOntology) and in Appendix C and E as OWL/XML syntax and JSON-LD \nrespectively. \nPublishing and deployment of an ontology involve the ontology documentation of \nentities. This is as an important aspect in the development of the knowledge \nmodel, to ensure the documentation of the encoded ontology in a natural language. \nThe HTML file of the developed IKON ontology is generated by using the Live \nOWL Documentation Environment (LODE) tool (Peroni, Shotton & Vitali, 2012) \n(Figure 5-8). The IKON OWL file is loaded to the LODE tool which automatically \nextracts the classes, properties, instances, axioms and namespace from the IKON \nOWL file and transformed the domain ontology into a human-readable HTML file \nwith hyperlinks. \nFigure 5- 7: A snippet of OWL/XML code representation of IKON (Source: Author). \n\n130 \n \n \nFigure 5- 8: Live OWL Documentation Environment (LODE) tool (Source: \nhttps://essepuntato.it/lode/). \n5.3. \n Knowledge Representation of WSN (D2) \nThe sensor data and weather station data are in the form of raw data, formatted \nin binary without any metadata. This data lacks the formality and standardisation \nto ensure data integration with other datasets.  Subsequently, this makes it \ndifficult to generate meaningful inference and interpretation from the sensor \nreadings. This is due to the lack of formal vocabularies to describe how \nobservations (sensor readings) are related to the natural event (Devaraju, Kuhn \n& Renschler, 2015). The semantic annotation of these stream of sensor data will \nsupport data integration service interoperability and promote richer knowledge-\ndriven use of data. The involves semantic representation of the sensor’s’ data using \naxioms that represents specific environmental property. The application of \nsemantic model ensures the addition of variety of sensor through detailed \nsemantic annotation of the concepts and data. This will enhance data integration \nand system interoperability when fusing heterogeneous sensor datasets.  \nIn this research, the essence of the knowledge representation of D2 through \nsemantic-based ontology models is in two phases: a) to represent the sensor’s data \n\n131 \n \nin machine-readable languages to enhance data and service interoperability, \norchestration and extension in intelligent systems; b) to represent the CEP engine \ninference generated from the stream of time-sensitive sensors data in a shared \nknowledge – ontology. A semantic model incorporates explicit metadata definition \nand ontological concept definitions (Poslad, Middleton, Chaves, Tao, Necmioglu & \nBügel, 2015). Example of a semantic model to represent these types of concepts is \nthe Open Geospatial Consortium (OGC) Observations & Measurements Schema \n(O&M) (Botts, Percivall, Reed & Davidson, 2008) model and the World Wide Web \nConsortium (W3C) Semantic Sensor Network (SSN) ontology (Compton et al., \n2012). However, the OGC’s O&G model is a lighter semantic model for \nrepresenting concepts such as the Observed Properties, Features with the \ncapability of a few reasoning mechanisms.  \nWith the WSN domain (D2) there are existing domain ontologies for the semantic \nrepresentation of the stream of sensor data, properties and inference outputs. \nBased on the methodology of ontology development (Noy & McGuinness, 2001), \nreviewing of existing ontologies and standards is paramount before developing a \nnew ontology. Thus, this research adopted the W3C’s SSN ontology for the \nontological representation of sensors data and inference outputs due to the \nmathematical rigour, degree of expressivity and comprehensive reason \ncapabilities and ontological alignments with DOLCE. \n \n5.3.1. Axiomatisation of Semantic Sensor Network (SSN) \nCurrently, several conceptual modules are used to represent the sensor, actuation \nand sampling concepts. SSN ontology consists of eight (8) modules representing \nforty-one (41) concepts with thirty-nine (39) object properties. Eleven (11) concepts \nand fourteen (14) object properties are inherited from DOLCE-UltraLite (DUL), \nwhich is the foundational ontology (Compton et al., 2012). Figure 5-9 below \nprovides an overview of the modules. \n\n132 \n \n \nFigure 5- 9: Overview of the SOSA/SSN ontology modules (Source: Compton et \nal., 2012) \nThe SSN ontology represents every sensing device as a function of the eight \ndepicted modules. Each module contains several classes and properties inherent \nto it from the perspective of Observation, Actuation and Sampling. This research \nis only interested in the Observation paradigm of representing the sensing \ndevice. In other words, the Deployment, System, SystemProperty, Condition, \nFeature, Procedure, Observation and Result of each sensor is semantically \nannotated and represented using the SSN Ontology. Figure 5-10 below shows the \nclasses and properties inherent for each module.  \n\n133 \n \n \nFigure 5- 10: Overview of the SSN classes and properties for the observation \nperspective, SSN only components in blue colour (Source: Compton et al., 2012). \nIn this research we cover all the eight modules for the semantic annotation of the \nsensing device and its observation: \na) Deployment module: represents the Platform concept to indicate if the \nsensor is part of a platform or deployed alone. For example, a Sensing \nDevice (measuring module) was hosted on a cloud repository platform \n(Data Storage FG) of the middleware. By utilising the properties \nhasDeployment, inDeployment, deployedOnPlatform, isHostedBy, the \nrelationships of the concepts are modeled.  \nb) System module: represents the System concept composed by sub-systems \n(hasSubsystems) which are deployed (deployedSystem), hosted on a platform \n(hosts) and implemented (implementedBy) a procedural call or action.  \nc) SystemProperty module: covers the SystemCapability, SurvivalRange and \nOperatingRange \nusing \nproperties \nsuch \nas \nhasSystemCapability, \nhasSurvivalRange and hasOperatingRange to represent the property of the \nsystem or sensing device. For example, a DHT22 sensor deployed will have \nsystem capability to measure the temperature and humidity, with survival \n\n134 \n \nrange as specified by the manufacturer and operating range of the \nminimum and maximum value that the sensor can measure correctly.  \nd) Feature module: covers the Property, the FeatureOfInterest and its \nCondition using properties such as forProperty, hasProperty, inCondition \netc. \ne) Procedure module: represents the procedural routine block of code that \ncaptures the Input and produces the Output using properties of hasInput, \nhasOutput and implements.  \nf) Observation module: represents the core concept of the SSN. The Stimulus \nis a core concept the Sensor is measuring after detection based on an \nObservation and must have an ObservableProperty. For example, the level \nof a water body. These classes are represented with properties such as \ndetects, \nobserves, \nisProxyFor, \nwasOriginatedBy, \nmadeObservation, \nobservationResultTime, observationSamplingTime etc. \ng) Result module: covers the representation of the senosr’s raw data output \nusing annotation such as resultTime, phenomenomTime, hasResult, \nisResultOf with the appropriate data properties. \n \n5.3.2. Application of SSN Ontology – Use Case \nSuccinctly, a sensor is an object that senses and measures the properties of the \nfeature of interest. The ontological representation of the sensor and its related \nconcepts using SSN ontology allows the generation of environmental events \ninference based on standardised rules expressed regarding observed properties.  \nThis section explains the ontological representation of the soil moisture sensor \n(SEN13322) used in this research using the SSN ontology. The sensor and the \nobservation are semantically represented as classes and properties of the SSN \nmodules. The formalisation using SSN ontology provides a comprehensive \nspecification to describe the ssn:Output, ssn:System, ssn-system:OperatingRange, \nssn-system:Condition, \nssn-system:SystemCapability, \nssn-system:inCondition, \nssn-system:hasSystemProperty, \nssn-system:Accuracy, \nssn-system:Sensitivity, \nssn-system:Resolution, \nssn:Property, \nssn-system:Precision, \nssn-\n\n135 \n \nsystem:Frequency, \nssn-system:qualityOfObservation. \nFigure \n5-11 \nbelow \npresented the code snippet of the ontological representation of the SEN13322. \nThe sensing unit’s data are represented using SSN ontology. For example, in this \ncase study of SEN13322 soil moisture sensor, the object property ssn:System \nprovides the possibility to semantically annotate the description of the sensing \ndevice using the rdfs:comment and a sub-system ssn:hasSubSystem  represents \nFigure 5- 11: A snippet of ontological representation of a SEN13322 sensor using SSN \nontology (Source: Author) \n\n136 \n \nthe relationship between the sensing device (microcontroller) and the soil moisture \nsensor (SEN13322). The ssn-system:OperatingRange represents the operating \nrange of the sensor, in this particular instance, the range the SEN13322 Soil \nMoisture sensor is expected to operate. This is followed by the ssn-\nsystem:Condition an object property for the range of operation of the soil moisture, \nfrom ~0 to ~880 in accordance to the manufacturer’s specification. The ssn-\nsystem:Accuracy annotates the accuracy of the Soil Moisture sensor which is 3% \nin \nall \nconditions. \nThe \naccuracy \nvalue \nis \nrepresented \nwith \nthe \nschema:PropertyValue, using range schema:minValue 0 to  schema:maxValue 3; \nand the unit value in percentage is represented as schema:unitCode qudt-unit-1-\n1:Percentage.  The ssn-system:Sensitivity and ssn-system:Resolution of the Soil \nMoisture sensor is 0.1% VWC in normal conditions, represented with \nschema:PropertyValue of 0.1%. \nFurthermore, the quality of the observation based on the existing parameters of \nthe sensor can be represented using class ssn-system:qualityOfObservation \n(Figure 5-12) or subsequently use another quality ontology. The quality of the \nobservation can be evaluated, and the attributed confidence value of the sensor \nobservation declared as part of the ssn-system:qualityOfObservation.  \n \nFigure 5- 12: A snippet of class ssn-system:qualityOfObservation (Source: \nAuthor). \n\n137 \n \n5.4. \n Implementation Scenario \nFigure 5-13 illustrate the integration scenarios of the semantic representation of \ndata sources (D1 & D2) in the Stream Analytics FG and Inference Engine FG of \nthe developed SB-DIM middleware. For D1 – scenario B in the figure below, the \ninference is generated using an expert system inference engine module of the \nInference Engine FG. The oral local indigenous knowledge gathered from the Data \nAcquisition FG is pre-processed at the Data Storage FG and represented in the \ndigital format where the local indicators in the form of rules and interpretation of \nthe rules are identified. These rules are saved in the knowledge base of the RB-\nDEWS module of the Inference Engine FG to deduct inference from the set of \nobservations. The generated inference is semantically represented using the \nIKON domain ontology and also pushed to the Data Publishing FG of the \nmiddleware.  \nFor domain data D2 – scenario A in Figure 5-13. The inference is generated using \nstream processing engine of the Stream Analytics FG of the middleware. The \nstream of sensor readings/observation from the WSN are in the form of Machine-\n2-Machine (M2M) raw data generated at the Data Acquisition FG and is streamed \nthrough the storage blobs in the Data Storage FG. The data stream is then \nprocessed through the streaming platform and engine of the Stream Analytics FG \nto infer patterns from the sensor data based on the prediction model logic. The \nprediction logic is an EDI drought prediction or forecasting model represented in \nEP language. The data streams are queried in real-time, and the deductive \ninference generated by the Stream Analytics FG is semantically represented based \non the ontology and also pushed to the Data Publishing FG of the middleware. \n\n138 \n \n \nFigure 5- 13: Integration scenarios of semantic represented heterogeneous data \nsources (Sources: Author) \nRule-based Reasoning. The generation of inference in this domain requires \nadditional reasoning techniques beyond that supported by the standard reasoning \nwith OWL-DL semantics. This has been proven and adopted in several related \nresearch projects (Devaraju et al., 2015; Borgo et al., 2016; Patni, 2011). Hence, we \nemployed a rule-based mechanism to perform the first set of deductive inference \non the input data (See Chapter 6). A rule has the form “IF Condition1 and \nCondition2; Then Action1, Action2,..” (Figure 5-14). \nIn the case of the local IK on drought domain (D1), the oral documented knowledge \nis elicited for natural indicators in the form of rules for interpreting an observation \nor occurrences. The saved rules are for generating a new inference based on the \nset of inputs. The generated inference and the input data are semantically \nrepresented in a machine-readable language (OWL) based on the IKON ontology \nin the form of domain dataset for the cross-domain integration. \nFigure 5- 14: Example of an expert system rule definition for D1 data (Source: Author). \n\n139 \n \nStream Processing Reasoning. Generating inference from the data streams (D2). \nThe sensing device measures the parameters every 1 min, and the readings are \npushed to the Stream Analytics FG using RESTful services. The streaming engine \nof the Stream Analytics FG uses a persistent query system to infers patterns from \nthe data streams based on a prediction model logic or set of pre-conditional rules. \nAn example of the predictive logic query structure is depicted in Figure 5-15. \n  \nStandard Ontological Reasoning. Because both our domain ontologies share the \nsame foundational ontologies, i.e. DOLCE, there is a perfect integration and \nalignment of the semantically annotated domain datasets. Therefore, further \nstandard ontological reasoning could be performed on the datasets to generate \nshort, medium or long-term forecasts. The standard reasoning is done with Pellet \nOWL reasoners to check for the knowledge model consistency, deduce the forecast \ninformation and update the model with inferred information. This is outside the \nscope of this research work. \n5.5. \n Summary \nThis chapter presents the development and semantic representation of the \nheterogeneous data sources using ontologies. The ontology modules that perform \nthe formalisation, semantic representation of the domains and data sources is a \ncomponent of the Inference Engine FG of the middleware. The contribution of the \nchapter lies in the development and encoding of Indigenous Knowledge on \nDrought Domain ONtology (IKON), which captures and models the description of \nlocal indicators related to drought forecasting in the area under study, using the \nentities, ecological interactions and behavioural relationships. The IKON ontology \ncan be used to understand the overview of intricate indigenous knowledge on \ndrought. The mapping of the semantic annotated observations or behaviours to \nFigure 5- 15: Example of CEP persistent query logic for performing deductive inference \nfrom WSN data streams (Source: Author) \n\n140 \n \nthe class entities results in the formalisation of domain knowledge and allows \ngenerating drought-related inference from events and sensor’s data automatically.  \nThis chapter presents the SSN ontology which uses declarative descriptions of \nsensors, networks and domain concepts to aid in searching, querying and \nmanaging the data sources. Both ontologies extend the functionalities of DOLCE, \nwhich aids cross-domain data integration and ontology alignment. The semantic \nannotations link the sensor data to more expressive ontological representations \nusing reference models. This ensures that sensor data has semantic descriptions \nthat would enhance heterogeneous data integration, and generation of accurate \ninference. \n \n \nCHAPTER SIX \nAUTOMATED INFERENCE GENERATION SYSTEMS \n6.1. \n Introduction \nIn this chapter, the Inference Engine FG is presented that consists of the module \nto perform deductive inference from the local indigenous knowledge on drought \n(D1) and Stream Analytics FG that consists of the technological framework – \nESTemd (Event STream Processing Engine for Environmental Monitoring \nDomain) which is an event processing stack for the real-time data analytics of \ndrought forecasting on the data streams from the deployed environmental \nmonitoring sensors (D2) of the Data Acquisition FG. The RB-DEWES and ESTemd \ncan be deployed in distributed mode as an FG of the distributed semantic \nmiddleware. In distributed mode, the Stream Analytics FG and Inference Engine \nFG consist of the deployed sensors, cloud-based infrastructure, stream processing \nengine using open-source Apache Kafka, JESS inference engine, notification \nsystem, adapters and APIs needed to perform the real-time data processing and \nanalytics.  \n\n141 \n \nThe inference generated from the local indigenous knowledge on drought (D1) \ninference engine (Inference Engine FG) is merged with the inference generated \nfrom the WSN data (D2) automated reasoners (Stream Analytics FG) for the \ncreation of DFAI which is sent to the Data Publishing FG of the middleware for \npublishing. The published DFAI with attributed certainty factor is proposed to be \nused by the policymakers in their decision-making processes \n6.2. \nRule-based Drought Early Warning Expert System (RB-DEWES) \nThe RB-DEWES is a software module and component of the Inference Engine FG \nof the distributed semantic-based data integration middleware aim at performing \ndeductive inference from the acquired local indigenous knowledge on drought (D1) \n(Akanbi & Masinde, 2018a). This software module is tasked with the generation \nof drought forecasting inference from a set of input using the rules derived from \nthe local indicators/observations on drought in the study areas. The sub-system \nutilises the domain indigenous knowledge and acquired facts stored in the Data \nStorage FG. The rules derived from the gathered knowledge indicators are saved \nin the knowledge base; and used by the inference engine for generating inference \nfrom a set of inputs.  \nIn IK on drought, after the knowledge representation of the domain knowledge, \nnatural indicators, their relationships, ecological interactions and interpretation \nof the scenarios are implicitly identified and is formulated in the form of rules \nmaking the adoption of an expert system with inference engine for reasoning \nsuitable for automated generation of drought prediction inferences. A review of \nexisting research projects and literature (Giarratano & Riley, 1998; Weiss & \nKulikowski, 1991; Borgo et al., 2014) emphasised the ability of the expert system \nin the reproduction of reasoning capabilities of the domain experts by formalising \ntheir knowledge for implicit reasoning through the emulation of human thoughts. \n6.2.1. Rules Ranking with Certainty Factor from Indigenous Knowledge \nRepresentation \nDerivation knowledge, control knowledge and factual knowledge on drought \nacquired from the domain experts need to be represented and transformed into \nrules for use by the inference engine component of the RB-DEWES. Hence, \n\n142 \n \nknowledge representation process aims to encode the domain expert knowledge on \ndrought. The researcher recognise that the study giving up an attractive feature \nof indigenous knowledge: a homogeneous definition of terms, concepts and events. \nHowever, the knowledge representation is a must and is achieved through the \nformalisation of local indicators and scenarios such as the sighting of a local \nindicator or ecological interactions into rules; using a rule-based programming \nstyle. Table 6-1 lists some of the main animals, plants, meteorological and \nastronomical indicators included in the expert system. Other includes the \nbehavioural scenarios which are subjected to interpretations. \nTable 6- 1: Indigenous animal, plants, meteorological, astronomical indicators \nincluded in the expert system. \nAnimals \nPlants \nMeteorological \nAstronomical \nMagwababa bird \nMviti tree \nHumidity \nFull Moon \nInkonjane bird \nWiki-jolo tree \nSoil Moisture \nHalf moon \nNtuthwane ant \nUmphenejane tree Weather \ntemperature \nStars \nIngxangxa frog \nPeach trees \nRainfall \nDay Sky \nOnogolantethe \nbird \nAmapetjies tree \nThunderstorm \nNight Sky \nPhezukomkhono \nbird \nTshi tree \nSunlight intensity Cloud patterns \nCows \nMotoma tree \nWindstorm \n \nInyosi \nMarakarakane \ntree \n \n \nLehota frog \nMutiga tree \n \n \nAll_animals \nAll_plants \n \n \n \nThe rule base for RB-DEWES currently contains 33 natural indicators \n(behavioural observation, astronomical, meteorological), with the capability of \nadding additional indicators in the future. Each indicator has its corresponding \ncertainty factor (CF), which is a measure of the indicator’s relevance to natural \noccurrences, as determined by the focus group based on years of experience (Table \n6-2) (Chu, Hwang, 2008).  \nTable 6- 2: Certainty Factor (CF) ranking scale. \nPercentage Scale (%) \nCertainty Factor (CF) \n\n143 \n \n0 - 10 \n0.1 \n11 - 20 \n0.2 \n21 - 30 \n0.3 \n31 - 40 \n0.4 \n41 - 50 \n0.5 \n51 - 60 \n0.6 \n61 - 70 \n0.7 \n71 - 80 \n0.8 \n81 - 90 \n0.9 \n91 - 100 \n1.0 \n \nAll rules comprise the natural indicator observation, or ecological scenario are \nrepresented as Object-Attribute-Value (O-A-V) by the expert system as shown in \nTable 6-3. Several indicators or observation scenarios can be combined in the \nexpert system to improve the accuracy of the inference mechanism based on the \nuser's input. Observation by a user is captured by the system with the user \nindicating \nthe \nlevel \nof \ncertainty \n(CF) \nof \nobserving \nthe \ncaptured \nscenario/observation. This helps the system to perform deductive inference using \nprobabilistic forward-chaining method in calculating the overall CF attributed to \nthe inferred output. \nTable 6- 3: Representation of natural indicators and observation in O-A-V form. \nRule \ncondition \nObject \nAttribute \nValue \nCF \nRC2 \nUmphenjane \nIs \nBlooming \n0.40 \nRC5 \nSoil moisture \nIs \nHigh \n0.50 \nRC6 \nPhezukomkhono \nIs \nSighted \n0.60 \nRC10 \nHumidity \nIs \nHigh \n0.60 \nRC15 \nMviti \nShows \nWilting \n0.70 \nRC15 \nInyosibees \nIs \nSighted \n0.70 \nRC15 \nMoon \nAppears \nFull \n0.70 \nRC17 \nAll_animals \nAppears \nThin \n0.50 \nRC17 \nAll_plants \nShows \nWithering \n0.50 \n\n144 \n \n6.2.2. RB-DEWS Module Architecture  \nThe architectural overview and components of the RB-DEWES are depicted in \nFigure 6-1 below. This sub-system consists of five (5) main components: (i) the \nGraphical User Interface (GUI), (ii) a database, (iii) inference engine, (iv) \nknowledge base, and (v) model base. The developed RB-DEWES module was \nimplemented as a standalone distributed component of the middleware with the \nnecessary GUI for interacting with the system while maintaining a uniform data \npipeline for seamless integration with other FG components.  \n \n \n6.2.2.1. \n Graphical User Interface (GUI) \nThe GUI provides the interface that facilitates the communication with the \nfrontend and the backend of the expert system module of the Inference Engine FG. \nHence, there are two types of GUIs for accessing the system – the Frontend GUI \nand the Backend GUI. The frontend GUI (Figure 6-2) is designed to be user-\nFigure 6- 1: The architecture of RB-DEWES (Source: Author). \n\n145 \n \nfriendly and achieve the desired usability. It provides the links that allow a non-\nregistered user to create a profile and subsequently log-in to the system. On \nsuccessful login to the system, the user can generate drought forecasting inference \nbased on the response to a set of systems pre-programmed local indicator \nobservation or scenarios. The user will click on the Generate Inference to start a \nnew session of inference mechanism. Also, the Reasoning History provides an \narchive of previous inference outputs for record purposes. A different set of \ninterfaces are designed for knowledge base editor, data input with CF and \ninference output in the form of Drought Forecast Advisory Information (DFAI) \nwith attributed CF. \nThe clicking of Generate Inference, the system interface displays a series of \npreconfigured local indicator occurrence or observation in a sequential fashion. \nThe users have to select the appropriate option “Yes” or “No” as a response to the \nquestion. For instance, as displayed in Figure 6-3, the users have to reply to the \nfirst set of the question – “Do you experience observation/scenario like \nUmphenjane is blooming? \nFigure 6- 2: RB-DEWES Frontend GUI (Source: Author). \n\n146 \n \n \nFigure 6- 3: Screenshot of RB-DEWES Inference Generation Process (Source: \nAuthor). \nAt the end of the inference mechanism, the inference engine generates the \ninference and determine the classification and type of drought based on the \nseverity using the EDI scale. The system captures the CF of each user’s input \nobservation/scenarios to calculate the CF or confidence level of the system’s \ninferred output (Figure 6-4).  \n \nFigure 6- 4: A screenshot of Inference Output (Source: Author). \n\n147 \n \nThe backend GUI depicted in Figure 6-5 below provides the interface to the \nKnowledge Base Editor (KBE). This interface allows the knowledge engineer to \nadd and edit the relevant section of the database through a user-friendly interface.  \n \nThrough this interface the KE can perform knowledge base administration; add or \nedit the drought classification records (Figure 6-6); add, edit and delete from the \nnatural indicators list; and specify the calculation for the certainty factor. \nFigure 6- 5: Knowledge Editor Interface (Source: Author). \nFigure 6- 6: Knowledge base administration interface (Source: Author). \n\n148 \n \n \n6.2.2.2. \n Database \nThe database component of the expert system utilises a SQL-based relational \ndatabase to store the indigenous knowledge on drought. The database is used to \nstore the natural indicators, scenarios, CFs, classification of droughts and drought \nforecast advisory information. For the expert systems and database schema \ndefinition see Appendix F. \n6.2.2.3. \n JESS Inference Engine \nThe function of the inference engine component is to perform the rule-based \nreasoning using forward chaining technique (Sasikumar, Ramani, Raman, \nAnjaneyulu & Chandrasekar, 2007). The engine is programmed and makes use of \nthe Java Expert System Shell (JESS) (Hill, 2003). This component contains the \nsoftware code that process the users selected local indicators/observation based on \nthe rules derived from the domain expert knowledge. It predicts the onset of \ndroughts based on the rule patterns experience stored in the knowledge base and \ngenerates part of the DFAI output. \n6.2.2.4. \n Knowledge Base \nThe knowledge base is the repository to store the domain knowledge represented \nin the form of rules. This storage component is also used to save the inference \noutput or interpretation from a combination of several rules. The interpretations \nor inference outputs are represented in O-A-V pattern and saved in the knowledge \nbase. The following sample rules for local indicators and scenarios are listed below: \nRC18:  IF rainfall is High  \nAND soil moisture is high \nAND soil temperature is moderate  \nTHEN no evidence of drought (0.9) \nRC21: IF phezukomkhono is sighted \n \nAND Guavatree is flowering \n \nAND Wiki-Jolo is blooming \n \nAND Umphenjane is flowering \n \nTHEN No evidence of drought, onset of spring (0.85) \nRC30: IF mviti tree is flowering \n \nAND weather temperature is high \n\n149 \n \n \nAND ntuthwane ant was sighted \n \nAND soil moisture is low \n \nAND amapetjies is flowering \n \nTHEN No evidence of drought, onset of summer (0.70) \nRC15: IF mviti shows wilting \n \nAND Inyosibees is sighted \n \nAND Moon appears full \n \nTHEN moderate evidence of drought, onset of autumn (0.75) \nRC2: IF umphenjane is blooming \n \nTHEN no evidence of drought (0.4) \nRC5: IF soil moisture is high \n \nTHEN no evidence of drought (0.5) \nRC6: IF phezukomkhono is sighted \n \nTHEN no evidence of drought (0.6) \nRC10:  \nIF humidity is high \n \nTHEN no evidence of drought (0.6) \nRC38: IF all_animals are thin \n \nAND all_plants shows withering  \n \nAND humidity is high \n \nAND rainfall is none \n \nAND day sky appears clear \n \nAND night sky is clear \n \nAND stars are sighted \n \nAND weather temperature is high \n \nAND sunlight intensity is high \n \nTHEN evidence of drought (0.68) \nFigure 6- 7: Production rules in the knowledge base (Source: Author). \n\n150 \n \n6.2.2.5. \n Model Base \nThe model base component of the expert systems executes the probabilistic \nforward chaining algorithm that determines the certainty level of the output of \nthe system. The qualitative probabilistic model is based on MYCIN (Shortliffe, \nDavis, Axline, Buchanan, Green & Cohen, 1975) and attributes calculated \ncertainty factor to the inferred output. \n6.2.3. RB-DEWS Module System Design and Implementation \nThe RB-DEWES is a modular sub-system of the Inference Engine FG of the \ndistributed semantic middleware. The sub-system is compatible with the data \nrepresentation and communication format of the middleware. The overall \ninference output is represented using JSON and merged with the inference from \nthe streaming engine from the Stream Analytics FG to form the DFAI which is \ndisseminated by the Data Publishing FG of the middleware. The DFAI output can \nalso be integrated with other intelligent systems through the use of appropriate \nRESTful APIs.  \nAs stated earlier, the RB-DEWES module was developed in a way that can be \nimplemented as a standalone application for use independently of the middleware, \nin a situation where there are challenges obtaining drought prediction inference \nfrom D2 – due to lack of data, or for quick inference generation based on a unique \ndataset. This will ensure a wider usage by policymakers for forecasting and \npredicting drought in the study areas. The RB-DEWES was implemented on \nMicrosoft Windows and MacOS platform through the use of compatible web \nservices. The minimum hardware and software requirement are as follows. \n6.2.3.1. \n Software Component \nRB-DEWS makes use of Java Expert System Shell (JESS) with SQL database for \noperation. The minimum requirement for the software either as a standalone or \npart of the middleware at runtime are: \n• JAVA SE Runtime Environment 7 \n• SQL Server 2012 \n• Microsoft Windows OS 7 \n\n151 \n \n• MacOS Snow Leopard \n• Web browser. \n6.2.3.2. \n Hardware Component \nThe hardware platform on which the RB-DEWS will be developed and, if different, \nwhere it will be run, is a major consideration when developing the module. Bearing \nin mind that the system is a component of the Inference Engine FG of the SBDIM \nMiddleware, future reflection was considered for the use of the expert system as a \nstandalone application-independent from the suite of functional groups of the \nmiddleware.   Hence, the system was developed to be compatible with five general \nplatforms: personal computers, workstations, minicomputers, mainframe \ncomputers (servers), online cloud systems. However, the minimum hardware \nrequirements are: \n• A PC or Mac with Intel CPU processor, 4GB RAM and 2GB hard drive \nspace. \n• A VGA monitor. \n \n6.2.4. RB-DEWS Module Implementation Operation \nThe system components were developed using a suite of programming languages \nsuch as JavaScript, PHP, HTML5, SQL etc. The frontend and backend GUI were \ndeveloped using HTML5 – CSS, inference engine was based on Java Expert Shell \nScript (JESS) using JavaScript and PHP, while the knowledge base is a relational \ndatabase – SQL.  \n6.2.4.1. \n Module Execution \nAt the start of each drought forecasting and predicting session, a normal user is \nprompted to login into the system via GUI to commence the inference generation \nprocess. However, there are other available interfaces, such as the – knowledge \nbase editor, data input and output. The user operates the system through the GUI \nand supplies data using push buttons, radio buttons, drop-down list, and text–\nfield. The knowledge base editor interface allows the domain expert to add, edit, \nand delete rules and other contents in the knowledge base and database. \n\n152 \n \nThe data input interface displays a sequence of pre-defined observation and \nnatural indicators to the end user. The user responds in affirmative to the sighting \nor observation of a scenario/local indicators. Multiple observation or occurrence(s) \nof natural indicators can be selected. The systems perform the deductive inference \nbased on the user’s responses using the rules stored the knowledge base. After \neach inference, the DFAI is generated as output with attributed CF; indicating the \nsystem level of certainty based on the users input.  \n6.2.5. Reasoning with Uncertainty \nDetermining the level of certainty in decision-making programs is very critical \n(Laudon & Laudon, 2000). In an expert system, the vagueness of expert rules and \nambiguities in users’ input are the major factors affecting the absolute certainty \nof system outputs.  Hence, an expert system must exhibit a high level of \nmodularity, and each rule may have associated with it a certainty factor (CF). The \nCF is a measure of the confidence in the piece of knowledge or observation of \nnatural indicators (Juristo & Morant, 1998). However, there are many ways in \nwhich CFs can be defined and combined with the inference process. Our system \nincorporates the MYCIN model (Shortliffe et al., 1975) for calculating the certainty \nfactor (CF). The model ensures the rule probability is calculated by multiplying \nthe domain expert implication probability by the user's input precondition \nprobability. The domain expert implied probability is stated in the rule and \nexpresses the expert confidence level based on a set of condition(s) (Akanbi & \nMasinde, 2018a). On the other hand, the user's input precondition probability \ndetermined by the user is also utilised. The CF value was calculated applying the \nformula: \n𝑃𝑃= 𝑃𝑃𝑜𝑜𝑜𝑜𝑜𝑜+ (1 −𝑃𝑃𝑜𝑜𝑜𝑜𝑜𝑜) ∗ 𝑃𝑃𝑛𝑛𝑛𝑛𝑛𝑛  ……Equation 6-1 \nFor example, the end-user input the following preconditions and their \ncorresponding certainty factors (CF) of their observation through the system GUI \n(Table 6-4). \nTable 6- 4: A random dataset of users input. \n\n153 \n \nUser \nInput ID \nObject \nAttribute \nValue \nRelation \nCF \nUIID4 \nUmphenjane \nis \nBlooming \n&& \n0.90 \nUIID7 \nSoil moisture \nis \nHigh \n&& \n0.50 \nUIID8 \nPhezukomkhono \nis \nflocking \n&& \n0.80 \nUIID23 \nRelative humidity \nis \nHigh \n&& \n0.70 \n \nThe interpretation of the likely combination of several natural indicators/scenarios \n– UIID4 && UIID7 && UIID8 && UIID23, as obtained from the domain expert \nduring the knowledge acquisition phase means “No evidence of drought” with the \ndomain expert certainty factor (CF) of 0.80 as represented in Table 6-5 below. \nTable 6- 5: Rule R28 in the knowledge base. \nRule \nNumber \nIF \nRelation \nTHEN \nCF \nR28 \nUIID4 \n&& \n \n \n \nUIID7 \n&& \n \n \n \nUIID8 \n&& \n \n \n \nUIID23 \n&& \nNo evidence of \ndrought \n0.80 \n \nTherefore, since the relation of all the preconditions is “AND”. Using MYCIN \nmodel, the overall probability of the preconditions is given by the minimum CF of \nthe precondition set, i.e. min[UIID4(CF), UIID7(CF), UIID8(CF), UIID22(CF)]. \nTherefore, the probability of the preconditions is: min(0.9,0.5,0.8,0.7) = 0.5. The \nCF of the inferred knowledge based on the RC28 will be as 0.8*0.5 = 0.4 = 40%. \nTherefore, the model base will attribute a CF value of 40% to the inferred output.  \n6.3. \n Streaming Analytics FG \nIn the novel approach of generating inference from the sensors data streams (D2), \nESTemd framework is presented, which is an integrated method for knowledge \nreasoning and semantic annotation of the data streams using stream processor. \n\n154 \n \nAccurate semantic annotation is achieved through adopted ontology – W3C SSN \nOntology (Compton et al., 2012), which is an effective way to associate meaning to \nraw data produced by sensors. In consideration of the major challenges of \nstreaming data processing – (i) the requirement for a storage layer, and  (2) a \nprocessing layer; there exist available cloud platforms that provide the \ninfrastructure needed to build a streaming data application with sensor data \nintegrated using APIs. Therefore, this research adopts the use of open source \nApache Kafka as the real-time distributed stream processing system due to \ninherent ability to process complex queries on a stream of raw data in an efficient, \nhighly scalable and easy to program manner. It also offers data durability, fault \ntolerance, lowered latency with increased high throughput and can be easily \nmanaged through a centralised platform – Confluent. \n6.3.1. Event STream Processing Engine for Environmental Monitoring \nDomain (ESTemd) \nStream analytics as a Big Data technology has shown great promise and \ntechniques in data analytics. Several analytics approaches and platform are \nalready in existence to process data streams and detect simple or complex events \nusing intelligent analytics methods. The application of stream analytics in this \nresearch is focused on identifying evidence of drought from the streams of sensor \ndata/observation using appropriate drought prediction model and indices. In this \ncontext, the Stream Analytics FG of the SBDIM Middleware comprises of complex \nsoftware modules and technologies where data streams are channelled using data \npipelines from data sources (deployed sensors) to the stream processing engine, \nand processed output records are channeled to the data sinks in a real-time \norchestrated manner. The inferred processing output is integrated with the data \nfrom other SBDIM Middleware FGs on the IK domain as part of the effort towards \nincreasing the level of accuracy of drought forecasting systems using \nheterogeneous data sources.  \n\n155 \n \n \nFigure 6- 8: ESTemd Stack (Source: Author). \nTo achieve the analytics functionality of the middleware’s objective for a common \nconceptual representation of the heterogeneous data sources and outputs, the \ndeveloped (IKON) and adopted ontologies (SSN) were incorporated for data \nannotation and semantic representation. This solution makes the system \ncompatible with intelligent information systems and scalable for future \nextensions. The Stream Analytics FG design satisfies the requirement for efficient \ndata processing for IoT applications and supports the extraction of insights from \na stream of incoming sensors observation. The ESTemd stack and framework of \nthe Stream Analytics FG for drought prediction and forecasting are depicted in \nFigure 6-8 and 6-9, respectively. \n \nFigure 6- 9: Stream Analytics FG layered model (Source: Author). \n\n156 \n \n \n6.3.1.1. \n Data Ingestion Layer \nThe data ingestion layer incorporates the data from the Data Acquisition FG \n(sensing device – called Producers) via the gateways in the form of messages. This \nlayer must be a highly scalable using a publish-subscribe event bus which ensures \nthat data streams are captured with minimal loss. Apache Kafka through the use \nof Kafka source connectors acting as a broker will buffer the incoming data \nstreams from the producers and also helps to achieve better fault tolerance and \nload balancing in the eventuality of component failure as depicted in Figure 6-10 \nbelow.  \n \n \n \n \n \n \n \n \n \n \n \nThe data are channelled from the producers – sensors (Data Acquisition FG) to the \nbroker of the Stream Analytics FG via respective Kafka topics in the cluster – \nready to be queried or utilised by the streaming engine. The data stream from the \nsensors in the Data Acquisition FG is responsible for feeding the system. The \noverall data flow to the system is driven by fixed sensor data acquisition from the \nFigure 6- 10: Overview of the streaming engine – Apache Kafka (Source: \nwww.apache.org) \n\n157 \n \nData Acquisition FG. Figure 6-11 below depicts starting the Kafka broker through \nthe Command Line Interface (CLI) on a local server. \n \n6.3.1.2. \n Data Broker Layer (Kafka Connect Source) \nThe data broker layer performs the coordinated processing and transformation of \nthe unbounded data stream coming from the data ingestion layer. The data is \nreceived from the Data Storage FG transformed using Kafka Connect protocol, \nwith additional data preprocessing is performed, before the data is published to \nthe next layer. We exploited the features of RESTful Web services and API to plug \ninto Sigfox cloud infrastructure for seamless data flow through the use of \nappropriate adapters. An example of the several processes executed in this layer \nFigure 6- 11: Starting Apache Kafka in the FG using CLI (Source: Author) \n\n158 \n \nis the data cleaning process, where data are adjusted, normalised and \ninconsistencies resolved to attain a common structure through the Kafka Connect. \nThis layer further employ the use of Kafka Connect to facilitate the onward data \ntransmission and compatible data pipeline due to its compatibility with most \ntechnologies. \n \nThe programming flow of data is such that the data from the first node is fetched \nfrom the sensing devices encoded in a simple JSON format using Kafka Connect \nbefore being transmitted to other nodes, as illustrated in Figure 6-12 above. \nSubsequent nodes in the node chain plugged into the semantic repository are \nresponsible for the parsing and converting of the JSON messages into JSON-LD \nfor compatibility of the data pipeline in the middleware. The messages represented \nin the JSON-LD are transmitted to the next layer node-red-contrib-Kafka-node \n(Wang, 2016; Greco, Ritrovato & Xhafa, 2019). The Apache Kafka broker in the \nStream Analytics FG host some topics for aggregating similar sensor data. For \nexample, all temperature sensors can be assigned to topics_temp, which makes that \ncategorisation and fetching of the all temperature data/event easier in a publish-\nsubscribe manner. \n6.3.1.3. \n Stream Data Processing Engine and Service \nThe stream data processing layer is devoted to the stream processing of the \nsemantically-enriched stream data collected by the Kafka broker. Apache Kafka \noffers Kafka stream processing engine with great throughput as an IaaS and \nhigher-end API for seamless integration and interoperability using the Confluent \nplatform. The stream of data flowing through several Kafka topics in Kafka broker \nFigure 6- 12: Node-Kafka-broker data pipeline programming flow (Source: Wang, 2016; \nGreco, Ritrovato & Xhafa, 2019) \n\n159 \n \nis processed through the KSQL node to detect events in the time-attributed sensor \ndata streams.  \nPredictive Data Analytics \nThis layer consists of the data and processes analytics components of the Stream \nAnalytics FG, that performs several analytics functionalities. The acquired data \nfrom the sensors is adequately enhanced with preprocessing techniques in the \nData Storage FG to eliminate inconsistent observations before data analytics is \nperformed on the sensors stream data set. The streaming dataset is queried from \nthe integrated KSQL cluster with SQL-like operators based on the EDI drought \nmodel to gain drought prediction insights.  \n \nPredictive Model Logic – Effective Drought Indices (EDI) \nSeveral drought indices exist such as the PDSI, EDI or SPI – that serve as a \nmeasure to determine the onset of drought based on environmental observation of \nparameters like relative humidity, atmospheric pressure and soil moisture (see \nChapter 2). The drought indices categorise the severity of a drought event at scale. \nEDI has been identified as a good index for determining and monitoring of both \nmeteorological and agricultural drought (Byun and Wilhite, 1996). The EDI model \nis represented in the form of a logic using the EP language. Data from the deployed \nsensors would be used to calculate the EDI for profiling droughts in real time on a \ndaily using the CEP engine. The EDI formula set, where precipitation is recorded \nis below. \n𝐸𝐸𝐸𝐸𝐸𝐸= ∑\n[(∑\n𝑃𝑃𝑃𝑃)/𝑛𝑛]\n𝑛𝑛\n𝑚𝑚−1\n𝑖𝑖\n𝑛𝑛−1\n   \n(Equation 6-2) \n𝐷𝐷𝐷𝐷𝐷𝐷𝑛𝑛= 𝐸𝐸𝐸𝐸𝑛𝑛− 𝑀𝑀𝑀𝑀𝑀𝑀𝑛𝑛   \n \n(Equation 6-3) \n𝐸𝐸𝐸𝐸𝐸𝐸𝑛𝑛= 𝐷𝐷𝐷𝐷𝐷𝐷𝑛𝑛  / 𝑆𝑆𝑆𝑆 (𝐷𝐷𝐷𝐷𝐷𝐷𝑛𝑛)   \n(Equation 6-4) \nwhere, EPi  represents the valid accumulations of precipitation of each day, \naccumulated for n days, Pm is the precipitation for m days, 𝑚𝑚= 𝑛𝑛. In Equation 1,  \nif 𝑚𝑚/𝑛𝑛 =  365, then, EP becomes the valid accumulation of precipitation for 365 \ndays divided by 365. DEPn in Equation 6-3 represents a deviation of EPn from the \n\n160 \n \nmean of EPn (MEP) – typically 30-year average of the EP. EDIn  in Equation 3 \nrepresents the Effective Drought Index, calculated by dividing the DEP by the \nstandard deviation of DEP – SD (DEPn) for the specified period. In order to detect \nthe onset of drought based on the EDI prediction model, analysis and \nmanipulation were performed on the datasets using Kafka operators – Filter (), \nMap (), FlatMap (), Aggregation (), Sum (), Average () used to represent the EDI \nmodel in KSQL. The sensors streams in the Kafka topics are queried in real-time \nusing the EDI model in KSQL. The historical precipitation data will be read from \na file system to a Kafka topic. The output of the persistent query is committed to \nthe output Kafka topic in the form of drought indices belonging to one of the four \nclasses of the EDI. \nThe drought levels are categorised into four classes in  EDI (Table 2-1). After \ncomputation using Equation 6-3, the output value of the EDI which ranges from \nnegative to positive determines the category of the drought, which indicates the \nintensity of the drought, giving a clear definition of the onset, end and duration of \ndrought. For example, a value of -1.05 indicates near normal drought. The \ninterpretation and classification of the drought based on the output values of the \nEDI calculation are published by the event publisher component of the Stream \nAnalytics FG. The output is represented in JSON format to be used by the next \nFG, which is the Inference Engine FG. \nKafka CEP Operators \nA stream processing engine utilises the use the CEP operators to identify \nmeaningful patterns,  relationships and gain weather-related insights from \nstreams of unbounded sensor data. Kafka streaming processing engine primitive \noperators such as Filter (), Map (), FlatMap (), Aggregation (), Projection (), \nNegation () are used for various combination and permutation of parameters of \nthe stream sensor data. These operations are invoked on the Kafka topics in the \ncluster(s) using KSQL. Once a pattern(s) is/are identified and extracted, the KSQL \nwill encapsulate it into a composite (derived) event to be published into an output \nKafka output topic saved in the cluster or in the form of a message to a secondary \nindex by the event publishers.  \n\n161 \n \nThe Selection filter selection is based on atrributes values. For example, the \nfollowing pseudocode which selects DHT22 Sensor messages from the message \nqueue to detect temperature readings between 31 – 45 (Celsius). \nPattern 1: \nSelect DHT22 (temp >= 31.0 and temp <= 45.0) \nFrom DataSource \n \nProjection operator extracts a subset of attributes of the event. For example, \nPattern 2 select the humidity attributes of the DHT22 events. \nPattern 2: \nSelect DHT22 (humidity) \nFrom DataSource \nThe Conjunction operator determines the occurrence of two or more events, either \nsimultaneously or consecutively within a window time frame. As an example, the \nfollowing pattern can be used to determine in real time a hypothetical onset of a \nnear normal drought event where high temperature and low soil moisture events \nare notified within the window frame of 4320 hours (6 months). \nPattern 3: \nWithin 4320hr. SoilMoisture(Value < 10%) and Thermometer(temp > 35) \nFrom DataSource \nThe Aggregation operator is used to perform a calculation to determine aggregated \nattributes values. For example, Pattern 4 computes the average value of \ntemperature from the DHT22 Sensor events. \nPattern 4: \nSelect Avg(DHT22.humidity) \nFrom DataSource \nDisjunction operator determines the occurrence of either one or more event in a \npredefined set. \n\n162 \n \nRepetition operator determines some occurrence observation of a particular event \nin the messages queue. As an example, Pattern 5 detects the number of occurrence \nof high temperature. \nPattern 5: \nSelect DHT22(temp > 35) as Temp \nFrom DataSource \nWhere count(Temp) > 10 \n \nSequence operator is useful to determine ordering relations or sequence of \ncorresponding events of a pattern which is satisfied when all the events have been \ndetected. \nNegation operator usually considers the non-occurrence/absence of an event, used \nto further strengthen an inference generation or assertation. For example, \nadditional credence could be given to Pattern 6 for the onset of drought by \nintroducing the absence of Rain events. \nPattern 6: \nWithin 4320hr. SoilMoisture(Value < 10%) and Thermometer(temp > 35) and not \nRain () \nFrom DataSource \nThe use of several and combination of primitive CEP operators to perform CEP \nquery ensure the identification of complex patterns and determination of \ncomposite events. The queries are matched against data streams and get triggered \nwhenever the queries condition have been fulfilled (Lam, & Haugen, 2016). Apache \nFlink will chain the operators together to form a single task. \n \nSemantic Annotation Layer \nThis layer deal performs the enrichment of the data with metadata and semantic \nannotation using the available ontology with Semantic Technologies. Semantic \nannotation of the data stream with well-defined knowledge will ensure contextual \nrepresentation, analysis and integration. Lightweight semantics are added and \n\n163 \n \nlinked via the SSN ontology repository in the Inference Engine FG to annotate the \ndata for further enhanced inferencing procedure semantically. The semantic \nservice is responsible for analysing the data or information to predict the \nconceptual states of the entities or event occurrences. \n6.3.1.4. \n Data Broker Layer (Kafka Connect Sink) \nThe output from the stream data processing and service system is represented by \nthe data broker layer Kafka Connect Sink connection protocol for the \ntransformation of the data into a middleware data pipeline compatible format.  \n6.3.1.5. \n Data Sink (Event Publishers) \nThe output from the stream processing engine is made available to other clusters \nusing Kafka Connect sink connectors and standard APIs. The data sink acts as a \nbuffer to output from the streaming engine. The output can be saved in Kafka topic \nor other secondary indexes such as MongoDB, Cassandra, NoSQL databases for \nan offline longer time series analysis or immediate visual analysis using AKKA to \nget further insights.  \n6.3.2. Experimental Implementation and Use Case Discussion \nFor testing the ESTemd framework – Stream Analytics FG, events records from \nthe sensors deployed in the study area are feed into the system. Data are captured \nat a constant stipulated interval from the sensors and the weather station. Each \nreading entry is in the form of a key-value pair containing the information and the \ntime when data was collected critical for the stream processing.  \nThe hardware used for this experimental implementation was provided by the \nUnit for Research and Informatics for Drought in Africa (URIDA) of Information \nTechnology Department at Central University of Technology, Free State, South \nAfrica. The entire Stream Analytics FG clusters and infrastructure could be \ndeployed as docker containers and managed by kebenetics in the cloud, Virtual \nMachine (VM), bare-metal computer or local servers depending on the \nrequirement and scale of the ecosystem. For this FG implementation, the physical \nmachine employ is Intel Core i7 Quad-Core 3.1GHz running macOS Mojave; the \n\n164 \n \nVM is running Ubuntu Linux with Intel Core-based processor as a base machine \nof the distributed middleware module. \nThe infrastructure is composed of two clusters: (1) a cluster running on a local \nmachine with a quad-core Intel CPU and 16GB RAM hosts the ZooKeeper, an \ninstance of Kafka broker, an active controller and Kafka broker; (2) Kafka client \nhosting the Kafka streaming engine API and the KSQL for persistent querying of \nthe streams in real time,  both clusters monitored and managed through the \nConfluent streaming platform. \n6.3.2.1. \n Central Streaming Platform \nIn order to achieve a fully streaming architecture of sensors in the context of IoT, \na central streaming platform is required to monitor and manage the data pipelines \nof deployed sensors and devices in remote locations.  This research leverages on \nthe compatibility of Confluent Platform with Apache Kafka. Confluent is an \nenterprise streaming platform based on open-source Apache Kafka. It is a central \nplatform which ensures the real-time monitoring of streams through the \ninfrastructure clusters from producers to consumers as depicted in Figure 6-13. It \nprovides the ability to build contextual event-driven applications with Apache \nKafka using a variety of connectors for different native clients and process event \nstreams in real time using Confluent KSQL.  \n\n165 \n \n \nFigure 6- 13: Confluent Enterprise Streaming Framework (Source: \nwww.confluent.io) \nUnique topics can be created for each type of sensor streams in the system. This \nallows the grouping of a particular type of sensor data in the same topic, and \nconsumers can retrieve the right data through the sensor group. Confluent \nPlatform is started through the Terminal (Figure 6-14) by invoking the bash file \nto start an array of services such as zookeeper, Kafka, schema-registry, Kafka-\nrest, Kafka connect, KSQL-server and the control-center services all in a sequence. \n\n166 \n \n \nFigure 6- 14: Starting Confluent Platform in the Terminal (Source: Author). \nAfter starting Confluent, the streaming platform interface can be accessed \nthrough the localhost server on Port 9021 (Figure 6-15). The dashboard provides \nan integrated approach to monitor the health of the clusters, brokers, topics, \nmeasure the system load, performance operations and even aggregated statistics \nat a broker or topic level. Confluent Platform provides a broker-centric view of the \nclusters, used to perform end-to-end stream monitoring, configure the data \npipeline using Kafka Connect and query the data streams, also with the ability to \ninspect streams, measure latency and throughput. \n\n167 \n \n \nFigure 6- 15: Confluent Platform Interface (Source: Author). \n6.3.2.2. \n Configuring data pipelines using Kafka Connect \nThe Confluent Platform ensures the integration of all services and managing of \nthe data connectors to connect data emanating from heterogenous FG in one place. \nThe integration of heterogeneous data sources is made possible through Kafka \nConnectors; it provides meaningful data abstractions to pull or push data to Kafka \nbrokers (Kafka Connect — Confluent Platform, 2019). Kafka connectors are \nforward and backward compatible with vast data representation formats such as \nXML, JSON, AVRO etc. The configuration of the Kafka connector is through the \nKafka Connect management console. There are two major types of Kafka \nconnectors – the Kafka Source Connector for connecting to the producers and the \nKafka Sink Connector for connecting to the secondary data storage indexes. In the \nKafka Connect management console, the connector class, key converter class, \nvalue converter class are defined for the data formats for the Kafka Source \nConnector and the Kafka Sink Connector to achieve common serialization format \nand ecosystem compatibility. This will specify the Kafka messages and convert it \nbased on the key-value pairs using key.converter and value.converter \nconfiguration settings. In this research, the entire data pipeline in the middleware \n\n168 \n \ninfrastructure is represented in JSON. Hence, for JSON, the key.converter will be \nrepresented as “key.converter”: “org.apache.kafka.connect.json.JsonConverter”. If \nwe \nwant \nKafka \nto \ninclude \nthe \nschema \nwe \ninsert \n“key.converter.schemas.enable=true”. The same will be applicable for the \nvalue.converter. \n \nFigure 6- 16: Overview of Kafka Connect. (Source: www.apache.org) \n \nKafka Source Connector \nKafka Connect (Figure 6-16) provides the set of API classes based on different \nmessaging protocols to facilitate stream messages from the producers (sensors) \ngateways channels to the Kafka broker. The Kafka Source Connectors broker \nbuffers the incoming messages, kept it in a queue and are replicated across all the \nbrokers in the cluster. The connectors automatically perform data transformations \non the messages to make it easier to process. The source connectors ingest the data \nstreams table or entire database and pass it on to the appropriate Kafka topics in \nthe broker. \nThe Kafka Source Single Message Transform makes real-time light-weight \nmodifications to the raw messages before publishing to Kafka stream engine. \nThere are several source connectors available on the Kafka platform, depending \n\n169 \n \non the native language of event producers. For example, Kafka Connect MQTT, \nKafka Connect RabbitMQ, Kafka Connect JDBC, Kafka Connect CDC Microsoft \nSQL and many more.  \n \nKafka Sink Connector \nKafka Sink Connector streams the data out of Kafka clusters to other secondary \nindexes such as Elasticsearch or Cassandra using Kafka Source Single Message \nTransform to make light-weight modifications to Kafka messages before writing \nthe output to an external repository. The stream processed outputs are delivered \nfrom the Kafka topics to the secondary indexes for visual representation and \nanalysis or offline batch analysis with Hadoop. In the context of this research, the \noutput data will be consumed and used by policymakers as a critical output of the \nmiddleware. Configuration of Kafka Connect for MQTT-JSON (Figure 6-17), other \nrelevant examples of Kafka Sink Connectors are Kafka Connect Neo4j, and Kafka \nConnect HDFS, Kafka Connect HTTP.  \n \nFigure 6- 17: Configuration of Kafka Connect in Confluent Platform (Source: \nAuthor). \n6.3.2.3. \n Kafka Topics \n\n170 \n \nTopics in Kafka are similar to RSS feeds that allow users to access updates in a \nstandardised format. Hence, a Kafka topic is a feed that stores similar messages \nor event records. The messages or event records are generated from the Producer \n– data sources (sensor) and are written to the appropriate topic. Several topics can \nbe created to categorise similar types of messages belonging to a broker. \nConsumers make use of the messages by reading the messages from the topics. \nNew topics (Figure 6-18) can be created to store the output of manipulation \nperformed on an existing topic within the same cluster and infrastructure.  \n \nFigure 6- 18: Creating a new topic in Confluent platform (Source: Author). \nIn this research, five unique topics will be created to cater for and specifically \ncategorise the temperature readings, humidity readings, atmospheric pressure \nreadings, precipitation readings and the soil moisture readings from the producers \n(sensors). Table 6-6 below shows the grouping of the sensor readings to a specific \ntopic. \nTable 6-6: Categorisation of the Sensors Readings to Kafka Topics. \nType of Readings \nKafka Topic \nTemperature \nTemperatureSensors \nHumidity \nHumiditySensors \nPrecipitation \nPrecipitationSensors \nAtmospheric Pressure \nAtmosPressureSensors \nSoil Moisture \nSoilMoistureSensors \n\n171 \n \nEDI Output \nEDIOutput \n \nFurther manipulation of the Kafka topics messages using CEP operators based on \nthe EDI model formula will yield new topics to store the processed messages. \nPerforming the average operator (Avg ()) on the topics will create five (5) new \nadditional \ntopics \nnamely: \nTemperatureSensors \n \nAvg_Temperature; \nHumiditySensors \n \nAvg_Humidity; \nAtmosPressureSensors \n \nAvg_AtmosPressure; \nSoilMoistureSensors \n \nAvg_SoilMoisture; \nPrecipitationSensors  Avg_Precipitation. Additional six (6)  Kafka topics will be \ncreated to further store the output of the EDI computations, namely: DEP, \nStandard deviation of DEP, EP, Mean of Effective Precipitation (MEP), Sum of \nprecipitation (Sum_Precipitation) and EDI. Lastly, a new topic that stores the \nhistorical precipitation data from file – “HistoricalPrecipitation” will be created for \ncalculating the MEP. Therefore, there are 17 Kafka topics in our broker, all created \nwith the same number of partition and replication factor across the cluster (Figure \n6-19). \n \nFigure 6- 19: Available topics in the Kafka broker (Source: Author). \n6.3.2.4. \n Workflows \n\n172 \n \nIn this case study, a couple of producers deployed in the area under study send \nsensor readings (messages) to four (4) different Kafka topics. The data streams \ngenerated by the sensors (producers) are passed on to the Kafka topics in the Kafka \nbroker for stream processing. The Kafka cluster is composed of two (2) nodes \nhaving similar setting running Intel-based processors. Kafka broker runs \noperators and user-defined functions inside the JVM. EDI computational process \nperformed on the data streams using KSQL will generate new tables that will be \ncommitted to the appropriate topics in the broker. KSQL performs persistent line \nqueries, filtering and aggregation of data records for drought predictions and \nforecasting over a period of time. \n \n \n \n6.3.2.5. \n Persistent Querying of the Data Streams using KSQL \nEach record or message from a producer is typically represented as a key-value \npair, and the streams of record are processed in real-time with the smallest \namount of latency through the help of Kafka-SQL (KSQL). KSQL is a  streaming \nSQL engine for Kafka, with almost identical syntax and mode of operations to \nnormal SQL, the only difference is that SQL queries a relational database while \nKSQL queries data streams. KSQL allows the stream processing of data streams \nFigure 6- 20: KSQL cluster interfacing with the Kafka broker (Source: www.apache.org). \n\n173 \n \nusing operators such as data filtering using WHERE clause to filter data that \ncomes from streams and meet certain requirements and save the filtered output \nto other topics in the broker. As depicted in Figure 6-20. KSQL Server consists of \nthe KSQL engine and the REST API. KSQL Server routines communicate with \nthe Kafka cluster through the KSQL UI. \nData transformation are performed with JOIN or SELECT operator for data \nenrichment or scalar functions; while data analysis with stateful processing, \naggregation and windowing operation for time-series analysis are also possible. \nKSQL \nconsumes \nstreams \nof \nsensor \ndata \nstored \nin \nKafka \ntopics \n– \nTemperatureSensors, \nHumiditySensors, \nAtmosPressureSensors \nand \nSoilMoistureSensors; which are mostly structured data set in JSON but could be \nin a format like AVRO or delimited formats (CSV) by using the appropriate Kafka \nConnect API for the data pipeline. Queries are performed through the use of KSQL \ncluster connected to the Kafka broker. KSQL supports standard Data Definition \nLanguage (DDL) and Data Manipulation Language (DML) statements. \nKSQL Querying Algorithm \nGenerate KSQL (DStream) \n(1) \nFOR historical precipitation dataset \n \nIF dataset is Filesystem WHERE file format is .xslv \n \nREAD file (.csv) \n \nCREATE Table “HistoricalPrecipitation” \n \nSAVE file (.csv) to Table “HistoricalPrecipitation” \n(2) \nFOR 𝑆𝑆𝑆𝑆𝑆𝑆_𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃 =  𝑆𝑆𝑆𝑆𝑆𝑆 (𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃) \n \nCREATE Table “Sum_Precipitation” \n \nSAVE “Sum_Precipitation” to Table “Sum_Precipitation” \n(3) \nFOR 𝐸𝐸𝐸𝐸= 𝑆𝑆𝑆𝑆𝑆𝑆_𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃𝑃\n𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇 𝐹𝐹𝐹𝐹𝐹𝐹𝐹𝐹𝐹𝐹\nൗ\n \n \nCREATE Table “EP” \n \nSAVE “EP” values to Table “EP” \n(4) \nFOR 𝑀𝑀𝑀𝑀𝑀𝑀 =  𝑀𝑀𝑀𝑀𝑀𝑀𝑀𝑀 (𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻𝐻) \n \nCREATE Table “MEP” \n\n174 \n \n \nSAVE “MEP” values to Table “MEP” \n(5) \nFOR 𝐷𝐷𝐷𝐷𝐷𝐷 =  𝐸𝐸𝐸𝐸 − 𝑀𝑀𝑀𝑀𝑀𝑀 \n \nCREATE Table “DEP” \n \nSAVE “DEP” values to Table “DEP” \n(6) \nFOR SD(DEP) = Standard deviation (DEP) \n \nCREATE Table “SD(DEP)” \n \nSAVE “SD(DEP)” values to Table “SD(DEP)” \n(7) \nFOR 𝐸𝐸𝐸𝐸𝐸𝐸= 𝐷𝐷𝐷𝐷𝐷𝐷𝑆𝑆𝑆𝑆(𝐷𝐷𝐷𝐷𝐷𝐷)\nൗ\n \n \nCREATE Table “EDI” \n \nSAVE “EDI” values to Table “EDI” \n(8) \nRETURN persistent KSQL query \nPrediction Model Logic Codes \nThe detailed KSQL code for querying the data streams based on the EDI model is \navailable on https://github.com/yinchar/KSQL-Code-for-EDI-Model-Logic.  \n6.4. \n \nInferences Outputs as Drought Forecast Advisory \nInformation (DFAI) \nThe inference output for the Inference Engine FG from D1 and inference output \nfrom the Stream Analytics FG from D2 are merged together to form the DFAI with \nattributed CF. The higher the CF attributed to the inferred output, the higher the \ncertainty level of the system. Hence, the certainty of the systems is dependent on \nthe number of input data and the attributed CF of each observation/scenarios. The \nfinal DFAI output contains a categorisation of the predicted drought based on the \nEDI scale. In this case study, the DFAI is meant to be interpreted and used by \npolicymakers in the study areas for their drought-related decision-making \nprocesses.  \n6.5. \n \nIntegration of the Stream Analytics and Inference Engine \nFGs to the Middleware \nThe development tools and data input/outputs format adopted for the Stream \nAnalytics FG and Inference Engine FG ensures the easy integration with other \nexisting functional groups of the distributed semantic middleware as well as \n\n175 \n \nmaking it forward compatible with conventional software environments. This is \nachieved through the consistent use of compatible data representation format \nthroughout the middleware’s data pipeline. In the Middleware, effective data \nsharing and communication is important and achieved through the semantic \nrepresentation of the data flow using uniform JSON/JSON-LD machine-readable \nlanguage in all the FG. This ensures ease of data integration and interoperability \nof the distributed FGs. The inferences outputs from the RB-DEWES and ESTemd \nare passed to the Eventhub and merged for the creation of the DFAI, which will be \nsubsequently published by the Data Publishing FG of the middleware. \n6.6. \n Summary \nThis chapter presents the inference generation systems of the middleware. The \ninference from the heterogeneous data sources is achieved in the Stream Analytics \nFG and Inference Engine FG of the semantic middleware from the indigenous \nknowledge on drought and sensors data, respectively. The overview of the Stream \nAnalytics FG is outlined using the ESTemd framework. The key technological \ncomponents of the FG that facilitates the effective stream processing of the sensor \nstreams in the FG cluster are Apache Kafka, Kafka Connect, Kafka Streaming \nEngine, KSQL and Confluent Platform. Apache Kafka provides a lightweight \nstateful streaming operation of records from the data sources by storing and \nreplicating the data across several nodes in the cluster, using Kafka Connect \nwhich provides the necessary API to ensure data compatibility in the middleware \npipeline.  The KSQL that queries the data streams in real time through the use of \nKafka Streaming Engine API was also presented through the Confluent streaming \nplatform.   \nThe RB-DEWES – is an expert system component of the Inference Engine FG of \nthe semantic Middleware for drought forecasting and prediction using rules \nidentified from the local indigenous knowledge acquired in the areas under study \nwas presented. The sub-system utilises a rule-based methodology and probabilistic \nreasoning technique using rules derived from the IKS. This approach enabled the \ngeneration of inference from the IK acquired from the domain experts. RB-DEWES \nallows the ascription of CFs with the input and output information, which vastly \n\n176 \n \nhelps with evaluating the quality and confidence level of the user’s observation \nand the system’s inferred output. The inference outputs of the automated \ninference generation systems of the middleware are merged in the Eventhub to \nform the DFAI which uses the EDI index to categorise the severity or onset of \ndrought. \n\n177 \n \nCHAPTER SEVEN \nEVALUATION OF SEMANTICS-BASED DATA \nINTEGRATION MIDDLEWARE \n7.1. \n Introduction \nIn the following paragraphs, the evaluation of all the Functional Groups (FG) of \nthe experimental system and the middleware prototype is presented. This is used \nfor software verification and validation (V&V) processes of each of the semantic \nmiddleware FGs modules. This chapter also reports on the data flow in the \nsemantic middleware geared towards achieving a semantics-based data \nintegration for drought forecasting and prediction systems. There are several V&V \napproaches for software modules evaluation; however, the evaluation of the \nsemantic middleware will be based on the core five categories of V&V (Ferreira, \nCollofello, Shunk & Mackulak, 2009). \nAlso, during the implementation procedure, the data pipeline is uniformly \nrepresented in JSON/JSON-LD for continuous data flows in the data plane to \nconnect various part of the middleware infrastructure irrespective of the schema \nor specification. The middleware is intelligently capable of data transformation at \ndedicated FG nodes or edge/gateway in a cloud or standalone environment. This \neliminates data heterogeneity and provides efficient data integration with service \ninteroperability in the middleware with strict adherence to the principles of SOA.  \nThe core objective of the V&V of the semantic middleware is for building and \nquantifying confidence in the software development process through adequate \ntesting of the modules. The functioning walkthrough of the aggregated FGs with \ntest results of the middleware services are presented below. This is ascertained \nthrough a series of experimental test, V&V of the FGs, presenting of results and \nuser experience (UX) evaluation.  \n\n178 \n \n7.2. \n FGs Verification and Validation (V&V) \nThe core aspect of the middleware’s FGs V&V is to determine the semantic \nmiddleware performs the intended functions correctly based on the NFRs and \nFRs (see Section 3.5.1); and as a measure of middleware quality and reliability. \nThe verification involves evaluating the middleware to ensure it meets the \nmiddleware initial requirements; and the validation involves testing of each \nmiddleware FGs during the implementation to ensure the initial requirements are \nindeed met against the system requirements. The FGs V&V gives the incremental \npreview of the middleware FGs performance as required by the IEEE 1012-2012 \n– IEEE Standard for System and Software Verification and Validation (Freund, \n2012). The V&V is performed during the implementation of each of the \nmiddleware’s FGs and requires minimum input and output requirements for the \nV&V task (Wallace & Fujii, 1989; Wallace, Ippolito & Cuthill, 1996).   \nDuring the development process, different forms of execution and non-execution-\nbased testing were performed to ensure conformity. For example, reviews, audits, \ndocument-driven walkthroughs were performed for each FG of the semantic \nmiddleware. Subsequently, detailed inspections were performed for each FG \nduring the implementation to ensure it satisfies the five behavioural properties of \nutility, robustness, reliability, performance and correctness for in-depth \nevaluation. \n7.3. \n Overview of the SB-DIM Middleware Implementation \nTo start with, tests were presented on the data acquisition FG of the middleware \n– IK data representation and the WSN data transformation, as well as all other \nFGs. The outcomes of a verification and validation processes based on the \ncomparison of weather forecasts to actual weather observation are presented. To \nmake evident the validity of SB-DIM middleware, experiments and results using \nactual data acquired from study area during the month of September and October \n2017 are presented. The structure of the FGs is based on the middleware’s \nframework presented in Chapter Three.  \n\n179 \n \nThe procedural components of the distributed middleware are programmed in \nparallel. This ensures the middleware was developed using an incremental \nsoftware development life cycle model and was continuously enhanced during and \nafter development. The realisation of individual components consisted of \nexperimental tests, coding, and execution to gauge the sensor devices outputs with \nthe acceptable outputs from the weather station. After the development, real tests \nwere run transmitting and uploading the data through the middleware FGs. The \nmiddleware process that data across all the FGs with a disjointed interactive \nplatform for input and output visualisations. \n7.4. \nData Acquisition FG Phase \n7.4.1. Configuration of the Wireless Sensor Network and Professional \nWeather Station \nThe microcontroller and sensors were deployed in a simple start network topology \nfor effective transmission of sensor readings data to the sink. The sensors \nconnected are the DHT22 – for temperature and relative humidity, atmospheric \npressure sensor. Each sink was equipped with Sigfox module/Wi-Fi module acting \nas the to transmit the data to the Sigfox cloud. Each sink is powered by a 3.3V \n18600 battery pack for the microcontroller. These battery packs are rechargeable \nand could be easy replaced when the voltage is low. All components are encased in \na Pyrex box for prevention against weather effects (Figure 7-1). \n \nFigure 7- 1: Micro-controllers, sensors with a battery in a Pyrex casing (Source: Author). \n\n180 \n \nThe wireless weather station was used as a reference model for the wireless sensor \nnetwork and also for accurate monitoring of weather conditions. The sensor probes \n– some embedded in the soil – are directly connected to the weather station. The \nCampbell Scientific WxPRO™ research-grade equipment is a programmable \ndatalogger used for the reliable monitoring enhanced with several components \nthat are used to measure, monitor, and study the weather and climate. The \nweather station has been comprehensively calibrated, validated, and ISO \n9001:2015 Certified. The wireless weather station gathered in real time the \ntemperature, precipitation, relative humidity, atmospheric pressure, wind \ndirection, soil moisture, wind speed, among other parameters. The weather station \nused in this research is depicted below (Figure 7-2). \n \nFigure 7- 2: Campbell Scientific Research Grade Weather Station (Source: \nAuthor). \n7.4.1.1. \n Data Representation Formats \nThe WSN sensors motes directly send the messages to the Sigfox Cloud through \nthe sink/gateway where it's available for offline processing. Sigfox Cloud provides \nthe ability to download or export the sensor readings in .csv formats for further \nanalysis from the Sigfox cloud as shown in Figure 7-3 and Figure 7-4. The data \nformat can be further converted from CSV format to JSON format for \ncompatibility with other FGs in the middleware. \n\n181 \n \n \n \n \nFigure 7- 4: Sensor device messages in CSV format (Source: Author). \nFigure 7- 3: Exporting sensor device messages from the Sigfox Cloud (Source: Author). \n\n182 \n \n The weather station data are represented and are downloaded in an array of \nformats such as HTML, JSON, TOA5, XML depending on the suitability and \nrequirement using a custom data query. The readings are available through - \nhttp://143.128.64.9:5355/Sw_weather/index.html (Figure 7-5) where the \nhistorical data are downloaded in JSON format (Figure 7-6). \n \n \nFigure 7- 6: Weather station readings in JSON format (Source: Author). \n7.4.1.2. \n Conversion and Representation of Sensor Data in JSON files \nThis section presents the method of converting the sensor readings data in CSV \nformat to JSON files. Data files in CSV format are converted using NPM package \ninstalled on a LAMP localhost server. The installation command takes the form \nbelow; it is self-contained without dependencies. \nFigure 7- 5: Sensor device messages in CSV format (Source: Author). \nFigure 7- 7: NPM conversion code (Source: Author). \n\n183 \n \nAfter installation, the command csv2json was called to reliably convert the CSV \nfiles to JSON; the command will auto-detect the separator although you may \noverride or force it via the separator option. The converted sensor devices \nmessages in JSON format is depicted below. The outputs show the process \nconforms with the NFR and the FR initially specified. \n7.4.2. Indigenous Knowledge on Drought Component \n7.4.2.1. \n Overview of Indigenous Knowledge Indicators  \nThis section presents the verification experiments using various forecast skill \nmetrics in determining the level of confidence are presented. The transformation \nprocesses applied to the data set in transforming the data in a structured format \nwith the final output in JSON.  \n7.4.2.2. \n Data Collection Tool \nFigure 7- 8: Converted sensor readings in JSON format (Source: Author). \n \n\n184 \n \nThe data collection tool used was an Android application for smart devices – ODK \nTool Version 2.3.1. The application latest version (APK) could be downloaded from \nthe Google Play Store and is based on a free and open-source framework for \ncollecting data from respondents. It allows the collection of data offline and \nsubmission of the data when internet connectivity is available. The application \nwas a configurable and programmable survey tool that could be customised to \nmeet the survey requirements, and in this instance, for collecting the IK. It \nconsists of a programmable frontend and the backend database that saves each \nrespondent response entry in the database. The questions are prepared in XML \nformat and uploaded to the smart device for use. Each entry was saved by clicking \nthe submit button and are automatically saved to the database in real time. Figure \n7-8 shows the code snippet of the developed questionnaire in XML format; \ncomplete code is available in Appendix B.  \nFigure 7- 8: Sample questionnaire in XML format (Source: Author). \n \n7.4.2.3. \n Indigenous Knowledge Verification and Confidence Level \nTwo IK input data set were obtained for verification purposes. The primary IK \ndata set was gathered from the local farmers using ODK IK Collector. The \n\n185 \n \nreference data set was obtained from a focus group comprising of ten (10) IK \ndomain experts uniquely selected to perform verification and validation of the \nknowledge sample. These two data sets are crucial in the validation of the IK \ncomponent of the data sources. The gathered knowledge was further refined. \n7.5. \nData Storage FG Phase \n7.5.1. Data Pipeline Data Format \nThe data in the data pipeline has been transformed and stored in a unified JSON \nformat, making it compatible for processing by other Functional Groups (FGs). \nThe data represented in JSON will be ingested or consumed by other services \nwithin the context of the middleware. The outputs shows the process conforms \nwith the NFR and the FR initially specified. \n7.6. \n Stream Analytics Phase \n7.6.1. Overview of the Stream Analytics FG \nThis FG process the streams of sensor data from the wireless sensor network \n(WSN) component of the Data Acquisition FG in real-time. Through the use of \npersistent query of the data streams, the inference is generated in real-time \nwithout committing the data to the database. This phase consists of several \nstacked layers producing services in a unified manner.  \n7.6.2. Implementation Scenario \nFor implementation, the technical specifications of the entire Stream Analytics FG \nclusters and infrastructure bare-metal computer with a localhost server. The \nphysical machine employ is a MacBook Pro Intel Core i7 Quad-Core 3.1GHz \nrunning MacOS Mojave; the VM is running Ubuntu Linux with Intel Core-based \nprocessor as the base machine. Full experimental implementation is available in \nChapter 5. \nThe infrastructure is composed of 2 clusters: a cluster running on a local machine \nwith a quad-core Intel CPU and 16GB RAM. The cluster hosts the ZooKeeper, \ninstance of Kafka broker, an active controller and Kafka broker; the second cluster \nis a Kafka client hosting the Kafka streaming engine API and the KSQL for \n\n186 \n \npersistent querying of the streams in real time, both clusters monitored and \nmanaged through the Confluent streaming platform. \nThe streaming platform is started up through the Terminal by first navigating to \nthe location of the installation folder and by calling the associated bash script file \n./𝑐𝑐𝑐𝑐𝑐𝑐𝑐𝑐𝑐𝑐𝑐𝑐𝑐𝑐𝑐𝑐𝑐𝑐 𝑠𝑠𝑠𝑠𝑠𝑠𝑠𝑠𝑠𝑠, which will invoke and start the streaming platform on the \ndedicated port – 9021. This starts up the Zookeeper, Apache Kafka, Schema-\nRegistry, Kafka-rest, Kafka connect, ksql-server and the streaming control center \n(Figure 7-9).  \nAfter startup, the streaming platform could be assessed through a web browser \nusing port 9021. However, through the central platform, the configurations for \nFigure 7- 9:Starting up the streaming platform and associated services in Terminal (Source: \nAuthor). \nFigure 7- 10: Querying the data stream through the KSQL CLI (Source: Author). \n\n187 \n \ncreating Topics, Kafka Connect, KSQL and metrics for monitoring the cluster's \nhealth are accessible through the interface in real time.  \n7.6.3. Persistent Query Output Data Format. \nThe data streams are queried in real time through the KSQL CLI (Figure 7-11). \nThe query is structured and based on the EDI formula algorithm (see Appendix \nG). The output created from the real-time persistent querying are saved and \ncommitted to the output topic EDI in JSON format. The output is represented as \na category of EDI and can be viewed in the output topic using the SHOW TABLE \nor SHOW STREAM command with the stream/table name, Kafka topic name and \nthe data format (Figure 7-11). \n \nFigure 7- 11: Querying output stream format using SHOW command in KSQL \nCLI (Source: Author). \n7.7. \n Inference Engine FG Phase \n7.7.1. Overview of the Inference Engine FG \nThis Inference Engine FG consists of various sub-systems for the generation of \naccurate inference from the heterogeneous data sources. It consists of the semantic \nannotation, the event hub and the reasoner's subsystem.  \n7.7.2. Semantic Annotation Sub-System - Transformation of IK into \nStructured Machine-Readable Format \nThe verified IK gathered were analysed using a top-down approach to identify the \nindicators, the relationship between the indicators, the occurrence of an indicator \nwith the significance. The entire IK domain was modelled and represented in a \ndomain ontology – capturing the core objects (indicators), mappings with the \nrelationships. This is carried out in the Semantic Annotation sun-system. The \ndomain ontology was transformed and represented in a machine-readable format \n\n188 \n \nthat can be used by intelligent information systems and part of the web of linked \ndata such as RDF, OWL, XML and JSON. The knowledge representation process \nwas presented in Chapter Six. \nFor representing the data as JSON Files – using Protégé, the IK domain ontology \nis transformed and exported in JSON format for use or integration with other \nmachine-readable ontology and intelligent information systems. JSON format \nprovides seamless data integration and service interoperability through the \nutilisation of RESTful web services. Figure 7 – 12 below shows the JSON format \nof the IK domain ontology. The complete JSON code is available in Appendix D. \n\n189 \n \n \nFigure 7- 12: Indigenous Knowledge Ontology in JSON format (Source: Author). \n \n \n7.7.3. Expert System Event Hub \nThe expert system event hub is a component of the Inference Engine FG of the \nSBDIM Middleware called RB-DEWES. The event hub is deployed on the local \nserver and provides a tool for drought forecasting and prediction using local IK \n\n190 \n \nacquired in the study area. The sub-system employs rule-based methodology and \nprobabilistic reasoning technique using rules derived from the IKS. The derived \nrules which are based on different scenarios and interpretation are saved in the \nknowledge base of the expert system event hub. The hub has an interactive \ninterface accessed through the localhost, where the end user can select their \ncurrent observation and the inference engine of the expert system event hub is \nfired using deductive mechanism from a rule or combination of rules with certainty \nfactors. The output with attributed certainty factors is represented in JSON for \nuse by the reasoners. Complete code in JAVA is available in Appendix E. \n7.7.4. Reasoners \nThe task of augmenting the service output from the Semantic Annotation and \nExpert System Event Hub Sub-System is the responsibility of the reasoners. \nSeveral semantics reasoners exist as a plugin for achieving reasoning services. \nThe middleware utilises the FACT++ reasoners. The reasoner's leverage on the \nsemantic representation of the sub-systems’ outputs in JSON/JSON-LD for \nmerging and aggregation of the outputs with a simple generation of information \nto be published by the Data Publishing FG. \n7.8. \n Data Publishing FG Phase \nThe final output of the middleware is called Drought Forecast Advisory \nInformation (DFAI). This information is made available to policymakers for \ndecision-making processes and dissemination to the farmers. The system analyst \ninteracts with the middleware using data input sources from the WSN and the IK \nas shown in Figure 7-13, and the middleware processes the data through the FGs \nand also factored in the current IK observation, and a final inferred output is \ngenerated. The output is published via Web apps, notifications hubs, mobile \nservices or saved to document repository for offline storage. \n\n191 \n \n \nFigure 7- 13: SBDIM Middleware Process Flow Chart (Source: Author). \n7.9. \n Review of Software Verification and Validation (V&V) Process \nThe system evaluation in terms of the V&V were performed during the \nimplementation processes with minimum inputs and outputs to ensure strict \nadherence with the initial requirements. The is carried out during the unit \nevaluation of each FGs, with the V&V outcome indicated that the distributed FGs \nof the middleware conforms perfectly with the FRs and NFRs of the semantic \nmiddleware. \n7.10.  UX Evaluation of Prototype \nAfter the unit evaluation of each FGs phase, this section further presents the \nresults UX evaluation of the developed distributed semantics-based data \nintegration middleware – an intermediary distributed middleware infrastructure \nthat integrate heterogeneous data sources. The aim is to test the applicability of \nthe distributed FGs of the middleware prototype from an end users’ point of view. \nThe evaluation procedure adopted the human-centred design process method \n(Mabanza, 2018). After developing the prototype, a UX evaluation of the semantic \nmiddleware was done to determine the ease of use. \n\n192 \n \nFor UX evaluation of the middleware prototype, a focus group comprising of twelve \n(12) participants (SQA testers and proposed users) – six (6) literate farmers and \nsix (6) software developers were tasked to rate the UX experience at a workshop \nsession. The number of participants for the evaluation was relatively small, but \naccording to Nielsen (1994) – “a small number of participants can be sufficient for \nhaving a valid result for testing a developed system”. Hence, the result of the \nevaluation process was accepted to be a valid result. The workshop started with a \nbackground explanation, demonstration of the distributed prototype to the \nparticipants, and a simple hand-on interaction of each FG phases by the \nparticipants through the middleware’s FGs GUI.  \nAfter the participant’s interactions with the middleware prototype, the \nparticipants were tasked to rate the usability experience through a given System \nUsability Scale (SUS) (Brooke, 1996). The SUS questionnaire (Appendix F) \nprovides a measure to determine how efficiently and easily users can utilise a \nsoftware product or service. \n7.10.1. \nPerformance and Usability Evaluation \nUsing the System Usability Scale (SUS) as mentioned above, the SUS consists of \nten (10) statements with 5 points each on the Likert scale of agreement or \ndisagreement (Brooke, 1996). To calculate the overall SUS score – a cumulative of \nthe statements points was performed using the division of the overall scores as \nfollows: score of 0-25: worst, score of 25-39: poor, score of 39-52: ok, score of 52-85 \nFigure 7- 14: SUS Scores (Source: Author). \n\n193 \n \nexcellent, and score of 85-100: best imaginable (Brooke, 1996). Hence, SUS scores \nhave a range of 0 to 100. The results of the SUS scores are shown in Figure 7-14 \nbelow.  \nThe participants were divided into group of three each – SD 1, SD 2, LFM 1, and \nLFM 2. From Figure 7-15, the results indicate an approval rating of above 65%. It \nis observed that the LFM 1 (Literate Farmers Group 1), LFM 2 (Literate Farmers \nGroup 2) rated the middleware prototype as “excellent”; while the SD 1 (Software \nDeveloper Group 1) and SD 2 (Software Developer Group 2) rated the systems as \n“best imaginable”. Therefore, the Middleware prototype attained an “Excellent \nand Best Imaginable” SUS score.  \n7.10.2. \nRecommendation from the Participants \nDespite achieving positive evaluation feedback from the study’s distributed \nmiddleware infrastructure prototype, few recommendations were received from \nthe participants towards improving the overall usability of the system. The most \nimportant recommendation received was about the unification of the entire \ndistributed FGs of the middleware as a unified system in the form of IaaS \n(Infrastructure-as-a-Service) accessible through the cloud. \n7.11. Summary \nThis chapter has presented the evaluation of all the Functional Groups (FG) of the \nmiddleware in the form of V&V during implementation from a holistic point of \nview. The FG service(s) output data format from the implementation was \npresented and the data flow from the first FG (Data Acquisition FG) to the last FG \n(Data Publishing FG). The V&V evaluation is a way of ensuring the initial \nrequirements have been satisfied, and effective at uncovering basic design \nassumption errors and deviation from research objectives. \n \n \n \n \n\n194 \n \n \n \n \n \nCHAPTER EIGHT \nDISCUSSION AND CONCLUSIONS \n8.1. \n Introduction \nThis chapter summarises the evaluation of the thesis objectives together. The \nchapter also presents the main contribution, innovative aspects of the research, \nconclusion and future research directions. \n8.2. \nEvaluation of Thesis Objectives \nIn this the thesis, all objectives, which were described in the introduction, were \nachieved. \n8.2.1. Weather Prediction based on Integration of Heterogeneous Data \nSources \nThe complex nature of drought demands a complete understanding of all \nknowledge spheres for a holistic integration, analysis and inference generation. \nWhile it was a difficult requirement, especially considering the heterogeneity of \ndata and technology, there is a gap in providing efficient and scalable methods \ntowards achieving this – and it is a vital objective of this research – towards more \naccurate drought early warning systems (DEWS).  An investigation was \naccomplished on the most effective exploit in achieving a perfect integration of IK \nand WSN data for accurate drought forecasting (Akanbi & Masinde, 2015b). The \ninvestigation established that ontologies and Semantic Web technologies might \nfacilitate the integration of heterogeneous data and interoperability of services. \nThe identification proved usable and resulted in the development of several \nframeworks for the semantic integration of different data sources.  \n\n195 \n \nThe first of the series of frameworks developed was the IKSDC module framework, \nwhich facilitated the collection of indigenous knowledge. From the IK data \ncollected, over 90% stated that they knew and applied IK to predict likely rainfall \nand onset of drought in their area. The second framework is the WSDC framework \nfor the deployment of IoT/WSN sensors in the study area for collecting accurate \nlocalised data. The two heterogeneous data sources were semantically integrated \ntowards creating a more accurate drought early warning system (DEWS) using \nthe SB-DIM framework. An analysis of the SB-DIM framework as presented \n(Akanbi & Masinde, 2018b) was found to enhance effective data collection, \nintegration and development of a semantics-based data integration middleware. \n8.2.2. The Semantic Representation of Heterogeneous Weather Data (IK \n& WSN Data) \nThe problem of information integration and interoperability of the two different \ndata sources was encountered, discussed; with the semantic representation of the \ndata as the main solution. Representation of the knowledge base using semantic \nrepresentation was described. As the first requirement for resolving data \nheterogeneity, a domain ontology was developed. There exists no semantic \nontological framework for the local indigenous knowledge on drought currently in \nexistence (Akanbi & Masinde, 2018c). Hence, it is a primary objective to develop \nfrom scratch a domain ontology for the representation of local indigenous \nknowledge.  \nDetailed attention was paid to the use of foundational ontologies (mainly DOLCE) \nfor supporting the task of knowledge representation. Next, the development and \nencoding of Indigenous Knowledge on Drought Domain ONtology (IKON), which \ncaptures and models the description of local indicators related to drought \nforecasting in the study area, using the entities, ecological interactions with \nbehavioural relationships were described (Akanbi & Masinde, 2018c). The \nproposed solution for sensor data was built on SSN ontology – which was extended \nby the required concepts.  \nThe main benefit of the ontology utilisation is the capability of unambiguous \nidentification of natural indicators used in the context of indigenous knowledge on \n\n196 \n \ndrought and sensor devices’ data which may not be misinterpreted even without a \ngiven context. The employment of ontologies for the knowledge representation of \nthe heterogeneous knowledge bases eliminates data heterogeneity and ensures a \nunified approach for representing the data models and seamless use of the data in \nthe proposed semantics-based data integration Middleware or other intelligent \ninformation systems. Moreover, the proposed solution also offers additional \nbenefits: \na) The application of the developed domain ontologies in Semantic Web and \nWeb of Linked Data. \nb) Ontology matching methods for accurate identifications of objects or entities \n(natural indicators or sensors), irrespective of the representation format. \nc) The use of IK on drought domain ontology, which is publicly available and \nan extension. The adoption of DOLCE ontology (upper ontology) ensures the \nease of reusability and compatibility. \n \n8.2.3. Using IoT/WSN in Real-Time Monitoring of Drought Parameters \nTo achieve this objective, a wireless sensor network was deployed in the study \narea, using different varieties of sensors devices and weather station all with \ndifferent data representation format. At first, the sensors were calibrated before \ndeployment, to factor in instrument error against a standard instrument. The \ncalibrated sensors were deployed to a remote part of the study area with the \ngateway/sink at the centre of the star network topology, ensuring complete \ncoverage. Accurate readings were taken every 15 minutes and the data streamed \nand saved to the cloud. \nThe study result has proven that the use of IoT/WSN in environmental monitoring \nprovides an accurate in-situ measurement of the parameters that could be \ncommitted to the cloud in real-time. However, several challenges do exist – such \nas powering the sensors and keeping them safe from environmental conditions. \nThe pros outweigh the cons and have proven dependable towards achieving a \nreliable and accurate dataset. \n\n197 \n \nThrough the implementation of a CEP engine like Apache Kafka in this study’s \ncluster, IoT/WSN, sensor readings in the form of data streams are processed in \nreal time using filters, aggregations, joins on a set of window data based on \ndifferent predefined patterns in the cloud. The streaming platform facilitates the \nend-to-end enterprise stream monitoring of the entire cluster’s health with the \nability to receive alerts or set triggers, measure system loads and network \nutilisation, determine latencies and throughput for each broker per cluster. \n8.2.4. Application of Semantic Middleware in Solving Integration and \nInteroperability of Different Entities. \nThe SM-DIM framework was formulated as an overview of the semantics-based \ndata integration middleware based on a service-oriented architecture (SOA). The \nsemantic middleware comprises various Functional Groups (FG) already \ndiscussed in earlier chapters, working in an orchestrated way towards achieving \nseamless data integration and interoperability. This is achieved through the \nrepresentation of the inputs/output data in a unified machine-readable language. \nThe ease of a unified language in the data pipeline compatible with the plethora \nof sub-systems in the middleware eliminates data heterogeneity, which hampers \nthe integration of data and interoperability of services. \n8.2.5. Implementing the Middleware as a DEWS for Creating Accurate \nDrought Prediction and Forecasting \nAfter the design and development of the semantics-based data integration \nmiddleware, the semantic middleware was implemented as a form of Drought \nEarly Warning System (DEWS) to ensure the feasibility of the middleware. The \nmiddleware integration is based on semantic technologies, and the inference \ngeneration is based on the use of CEPs, inference engines and reasoners as \nencompassed by the SB-DIM framework. The proposed solution incorporates \nseveral inference generation mechanisms in different FGs of the middleware to \nprovides adequate flexibility and optimal inference generation capability. The \nCEP engine is an open-source Apache Kafka in the streaming platform – \nConfluent. The inference engine is JESS, with various reasoners in Protégé.  \n\n198 \n \n8.3. \n Innovative Contributions of the Research Thesis \nIn order to improve the accuracy level of drought prediction and forecasting \nsystems, this thesis investigates the possibility of integrating available \nheterogeneous data sources by solving the challenges of data integration and \ninteroperability. The main contributions to the knowledge of the research in this \nthesis are summarised below. \na) Development encoding of Indigenous Knowledge on Drought Domain \nONtology (IKON) – In this research, a domain ontology for the local \nindigenous knowledge on drought was developed. This ontology provides a \nmachine-readable format of the domain. The model is developed in Protégé \nand available in RDF and OWL format. This domain ontology is based on \nDOLCE, making it more easily reusable and extendable for future research \npurposes. More details can be found in Chapter Five and Paper D. \nb) The conceptualisation of semantics-based data integration middleware \nframework – A model semantics-based data integration middleware \nframework has been proposed and implemented to solve the challenges of \nheterogeneous data integration and interoperability. The proposed \nframework facilitated the semantic representation of the data sources \neliminating data heterogeneity and created a model with a unified data \nformat. The framework is presented in Chapter Three. The details of the \nframework can be found in papers B and C. \nc) Implementation of semantic middleware for the integration and \ninteroperability of heterogeneous data sources for drought forecasting and \nprediction – A semantically-enhanced distributed middleware approach has \nbeen utilised for integrating the heterogeneous data. Using this approach, \nthe structured and unstructured data sources are transformed and \nrepresented in a machine-readable language for seamless integration and \ninference generation. This contribution is presented in Chapter Four and \npaper C. \nd) A streaming processing engine based on Apache Kafka for real-time \nprocessing of sensor data – Streams of data from the deployed sensors are \nchannelled through a streaming platform; using a drought prediction \n\n199 \n \nmodel; the streaming engine determines patterns in the data streams, and \ninference are generated as outputs. More details can be found in Chapter \nSix. \ne) RB-DEWES sub-system that could be implemented as a standalone system \n– A component of the entire system can be implemented as a standalone \nsystem with customisable GUI for end-users to specify current indigenous \nknowledge observation of occurrences. The inference engine of the RB-\nDEWS will fire and determine the likely implication of the scenarios using \nexpert knowledge saved in the knowledge base. Details of the system can be \nfound in Chapter Six and paper E. \nf) Implementation of a more accurate semantics-based DEWS based on the \nsemantic middleware – The middleware is implemented as a DEWS for the \nstudy area. More details can be found in the thesis and published papers. \n8.4. \n Conclusion and Future Work \nThis thesis proposed a semantics-based data integration middleware for drought \nforecasting and prediction. The aim of the research was to develop a framework \nfor semantic middleware that facilitates integration of heterogeneous data sources \n(IK on drought and sensors data) and interoperability of services towards \nachieving more accurate drought early warning systems (DEWS); using \nheterogeneous data from various places through mediator-based data integration \napproach would be beneficial and increase the level of reliability and variability. \nIn the requirement elicitation phase of this study’s approach, the researcher \nconducted a survey, interviewed IK domain experts, collected and documented the \nIK on drought in the study areas. The study also reviewed the literature on the \nmost suitable IoT/WSN based systems that would facilitate useful measurement \nof the required environmental parameters and determine the challenges of \nintegrating the heterogeneous data sources. \nBased on the requirements identified and the research gap, in this thesis, the \nsolution for achieving an accurate drought forecasting and prediction system using \ndifferent data sources has been presented, and subsequently, this work proved \nthat the integration and interoperability using Semantic Web technologies are \n\n200 \n \nfeasible and reliable.  The presented semantic middleware performs semantic \nrepresentation and metadata annotation of input data and knowledge base to \ncreate unified machine-readable data for use in various functional groups that \nperform aggregation and computational analysis based on forecasting models and \ncurrent indigenous observations. As this thesis has shown, heterogeneous data \nintegration and interoperability could be solved. \nThrough the thesis, the study introduced the proposition, conceptualised \nframework and system design, and explained all detailed implementations in \nstages based on the presented semantics-based data integration frameworks. The \nmultitude of sub-systems in the semantic middleware produces a service(s) as a \ncombined output – enabling other services to be created – with drought forecast \nadvisory information (DFAI) as an output of the middleware. The DFAI as an \noutput of the middleware is based on the EDI drought severity index – which \ncategorises the severity of the drought. This serves as advisory information to \npolicy-makers or system analyst for interpretation and recommendation to the \nfarmers (end-users). Accurate risk perception and knowledge needed to interpret \nthe advisory information by the policy-makers is essential. \nHeterogeneous data integration and interoperability were fascinating but \nchallenging subjects to study. Nevertheless, this research has made a meaningful \ncontribution to the challenging task of solving the data integration and \ninteroperability problems of the data-driven solution towards achieving a more \naccurate inference in the environmental monitoring domain – for drought \nforecasting and prediction. The results of this research are focused mainly on \ndrought forecasting and prediction. Also, it applies to the challenges of integration \nand interoperability will eliminate the bottlenecks hampering the full realisation \nof IoT potentials. \nThe presented work is the first step for achieving seamless integration, \ninteroperability and improving the accuracy of drought forecasting and prediction \nsystems. Constant improvement of warning systems is challenging and necessary \nto reflect the trend and improving the systems accuracy (Twigg & Lavell, 2006; \nLeonard, Johnston, Paton, Christianson, Becker & Keys, 2008). Future research \n\n201 \n \nand development will be aimed to complement the developed system and suggests \nto explore the following: \na) Improving the mechanism of drought early warning system through the \napplication of an ontological-based reasoning technique. \nb) The semantic representation and integration of inferences generated from \nheterogeneous knowledge bases with other intelligent information systems \nfor a more accurate drought forecasting and prediction system. \nc) The implementation of the proposed middleware FGs approach could be \nfurther improved by a formalisation how to utilise cloud-based services as \nan IaaS (Infrastructure-as-a-Service); currently – it is a distributed service \nwith some of the FGs residing on a local server environment and others in \nthe cloud. Primary experiment with the local servers and sub-systems of the \nInference Engine FG in the cloud were conducted, but proper methodology \nand formalisation of these servers together could exploit web-based \ncapabilities – to promote ease of use. \nd) Indigenous knowledge component (and its developed domain ontology) of \nthis research is currently limited to the study areas. More case studies could \nbe done to document the indigenous knowledge on the drought of other \ncommunities, expand the knowledge base and extend the domain ontology \nfor extensive reuse purposes.  \ne) Even though the evaluation model presented here has been developed \ncentred on drought forecasting and prediction early warning systems, the \ndeveloped framework and middleware apply to other warning systems that \nneed \nto \nintegrate \nheterogeneous \ndata \nsources \n(structured \nand \nunstructured). \nf)  In this research, to integrate the heterogeneous data sources, manual and \nsemi-automatic methods were used in the semantic middleware in a \ndistributed manner. For future work, complex algorithms for automatic \ndata integration could be developed. This can include the adoption of more \ncomplex streaming techniques, mapping, reasoning methods. \ng) The security of the data pipeline was not taken into consideration for the \ndata exchange and communication amongst all the devices, sub-systems, \n\n202 \n \nclusters and all the functional groups in the middleware. It was assumed \nall communication and data exchanges are handled using secure channels. \nAs future work, securing the entire data pipeline could be carried out. \n \nREFERENCES \nAjibade, L.T. and Shokemi, O.O., 2003. Indigenous approach to weather \nforecasting in ASA LGA, Kwara State, Nigeria. Indilinga African Journal \nof Indigenous Knowledge Systems, 2(1), pp.37-44. \nAkanbi, A., 2014. LB2CO: A Semantic Ontology Framework for B2c Ecommerce \nTransaction on The Internet. International Research Journal of Computer \nScience, 4(1), p.9. \nAkanbi, A.K. and Masinde, M., 2015a. A Framework for Accurate Drought \nForecasting System Using Semantics-Based Data Integration Middleware. \nIn International Conference on e-Infrastructure and e-Services for \nDeveloping Countries, pp. 106-110. Springer, Cham. \nAkanbi, A.K. and Masinde, M., 2015b. Towards semantic integration of \nheterogeneous sensor data with indigenous knowledge for drought \nforecasting. In Proceedings of the Doctoral Symposium of the 16th \nInternational Middleware Conference, p.2. ACM. \nAkanbi, A.K. and Masinde, M., 2018a. Towards the Development of a Rule-based \nDrought Early Warning Expert Systems using Indigenous Knowledge. In \n2018 International Conference on Advances in Big Data, Computing and \nData Communication Systems (icABCD), pp. 1-8. IEEE. \nAkanbi, A.K. and Masinde, M., 2018b. Semantic Interoperability Middleware \nArchitecture for Heterogeneous Environmental Data Sources. In 2018 IST-\nAfrica Week Conference (IST-Africa), pp. Page-1. IEEE. \nAkanbi, A.K. and Masinde, M., 2018c. IKON-OWL: Using Ontologies for \nKnowledge Representation of Local Indigenous Knowledge on Drought. \n24th Americas Conference on Information Systems (AMCIS). Louisiana, \nUSA.  \n\n203 \n \nAkanbi, A.K., Agunbiade, O.Y., Kuti, S. and Dehinbo, O.J. 2014. “A semantic \nenhanced model for effective spatial information retrieval.” In Proceedings \nof the World Congress on Engineering and Computer Science WCECS 2014 \n(Vol. 1), pp.6. San Francisco, USA. \nAlavi, M. and Leidner, D.E., 2001. Knowledge management and knowledge \nmanagement systems: Conceptual foundations and research issues. MIS \nquarterly, pp.107-136. \nAltmann, J., 1974. Observational study of behavior: sampling methods. Behaviour, \n49(3), pp.227-266. \nAnderson, J., 1993. Rules of the mind Lawrence Erlbaum Associates. Hillsdale, \nNJ. \nAntoniou, G. and Harmelen, F.V. 2008.  A Semantic Web Primer. Cambridge: MIT \nPress. \nAtzori, L., Iera, A. and Morabito, G., 2010. The internet of things: A survey. \nComputer networks, 54(15), pp.2787-2805. \nBally, J., Boneh, T., Nicholson, A.E. and Korb, K.B., 2004. Developing an ontology \nfor the Meteorological Forecasting Process. Decision Support in an \nUncertain and Complex World: The IFIP TC8/WG8, 3. \nBarnaghi, P., Wang, W., Henson, C. and Taylor, K. 2012. Semantics for the \nInternet of Things: early progress and back to the future. International \nJournal on Semantic Web and Information Systems (IJSWIS), 8(1), pp.1-21. \nBartolomeo, M., 2014. Internet of things: Science fiction or business fact. A \nHarvard Business Review Analytic Services Report, Tech. Rep. \nBelow, R., Grover-Kopec, E. and Dilley, M., 2007. Documenting drought-related \ndisasters: A global reassessment. The Journal of Environment & \nDevelopment, 16(3), pp.328-344. \nBenbasat, I., Goldstein, D.K. and Mead, M., 1987. The case research strategy in \nstudies of information systems. MIS quarterly, pp.369-386. \nBenjamin, P.C., Menzel, C.P., Mayer, R.J., Fillion, F., Futrell, M.T., deWitte, P.S. \nand Lingineni, M., 1994. Idef5 method report. Knowledge Based Systems. \n\n204 \n \nBerkes, F., Folke, C. and Gadgil, M. 1994. Traditional ecological knowledge, \nbiodiversity, resilience and sustainability. In Biodiversity conservation (pp. \n269-287). Springer, Dordrecht. \nBernard, H.R., 2002. Qualitative data analysis I: text analysis. Research methods \nof anthropology, pp.440-448. \nBerners-Lee, T., Hendler, J. and Lassila, O. 2001. The semantic web. Scientific \namerican, 284(5), pp.28-37. \nBissell, C. and Chapman, D., 1992. Digital signal transmission. London \nCambridge University Press. \nBoef, W.D., Amanor, K., Wellard, K. and Bebbington, A. 1993. Cultivating \nknowledge: genetic diversity, farmer experimentation and crop research. \nIntermediate technology publications. \nBorgo, S. and Masolo, C., 2010. Ontological foundations of DOLCE. In Theory and \napplications of ontology: Computer applications (pp. 279-295). Springer, \nDordrecht.: Springer. \nBorgo, S., Cesta, A., Orlandini, A. and Umbrico, A. 2016. A Planning-Based \nArchitecture for a Reconfigurable Manufacturing System. In ICAPS, \npp.358-366. \nBorgo, S., Cesta, A., Orlandini, A., Rasconi, R., Suriano, M. and Umbrico, A. 2014. \nTowards a cooperative knowledge-based control architecture for a \nreconfigurable manufacturing plant. In 19th IEEE International Conference \non Emerging Technologies and Factory Automation (ETFA). IEEE. \nBotts, M., Percivall, G., Reed, C. and Davidson, J, 2008. OGC® sensor web \nenablement: Overview and high level architecture. In GeoSensor networks, \npp.175-190. Berlin, Heidelberg: Springer. \nBrewster, C. and O'Hara, K. 2004. Knowledge representation with ontologies: the \npresent and future. IEEE Intelligent Systems, 19(1), pp.72-81. \nBrokensha, D.W., Warren, D.M. and Werner, O. 1980. Indigenous knowledge \nsystems and development. University Press of America. \nBrooke, J. 1996. SUS-A quick and dirty usability scale. Usability evaluation in \nindustry, 189(194), pp.4-7. \n\n205 \n \nBryman, A. and Bell, E. 2015. Business research methods. Oxford University \nPress. \nBryman, \nA., \n2008. \nWhy \ndo \nresearchers \nintegrate/combine/mesh/blend/mix/merge/fuse quantitative and qualitative \nresearch. Advances in mixed methods research, pp.87-100. \nBurstein, F. and Gregor, S., 1999. The systems development or engineering \napproach to research in information systems: An action research \nperspective. In Proceedings of the 10th Australasian Conference on \nInformation Systems, pp.122-134. Victoria University of Wellington, New \nZealand. \nBychkovskiy, V., Megerian, S., Estrin, D. and Potkonjak, M. 2003. A collaborative \napproach to in-place sensor calibration. In Information Processing in Sensor \nNetworks, pp.301-316. Berlin, Heidelberg: Springer. \nByun, H.R. and Wilhite, D.A. 1996. Daily quantification of drought severity and \nduration. Journal of Climate, 5, pp.1181-1201. \nByun, H.R. and Wilhite, D.A. 1999. Objective quantification of drought severity \nand duration. Journal of Climate, 12(9), pp.2747-2756. \nCao, Y., Chen, S., Hou, P. and Brown, D. 2015. FAST: A fog computing assisted \ndistributed analytics system to monitor fall for stroke mitigation. In 2015 \nIEEE International Conference on Networking, Architecture and Storage \n(NAS), pp.2-11. IEEE. \nCasati, B., Wilson, L.J., Stephenson, D.B., Nurmi, P., Ghelli, A., Pocernich, M., \nDamrath, U., Ebert, E.E., Brown, B.G. and Mason, S. 2008. Forecast \nverification: \ncurrent \nstatus \nand \nfuture \ndirections. \nMeteorological \napplications, 15(1), pp.3-18. \nCeglar, A. 2008. Drought indices. Drought Management Center for Southeastern \nEurope, Report. Biotechnical Faculty, University of Ljubljana, Slovenia. \nChalmers, D.J. 2002. Philosophy of mind: Classical and contemporary readings, \npp. 608-633. Oxford: Oxford University Press. \nChu, H.C. and Hwang, G.J. 2008. A Delphi-based approach to developing expert \nsystems with the cooperation of multiple experts. Expert systems with \napplications, 34(4), pp.2826-2840. \n\n206 \n \nCiocoiu, M., Nau, D.S. and Gruninger, M. 2001. Ontologies for integrating \nengineering applications. Journal of Computing and Information Science in \nEngineering, 1(1), pp.12-22. \nClemente, P. and Lozano-Tello, A., 2018. Model Driven Development Applied to \nComplex Event Processing for Near Real-Time Open Data. Sensors, 18(12), \np.4125. \nCoetzer, W., Moodley, D. and Gerber, A., 2014. A knowledge-based system for \ndiscovering \necological \ninteractions \nin \nbiodiversity \ndata-stores \nof \nheterogeneous specimen-records: A case-study of flower-visiting ecology. \nEcological informatics, 24, pp.47-59. \nCohen, L., Manion, L. and Morrison, K. 2013. Validity and reliability. In Research \nmethods in education, pp.203-240. Routledge. \nCompton, M., Barnaghi, P., Bermudez, L., GarcíA-Castro, R., Corcho, O., Cox, S., \nGraybeal, J., Hauswirth, M., Henson, C., Herzog, A. and Huang, V. 2012. \nThe SSN ontology of the W3C semantic sensor network incubator group. \nWeb semantics: science, services and agents on the World Wide Web, 17, \npp.25-32. \nCothran, T. 2011. Google Scholar acceptance and use among graduate students: A \nquantitative study. Library & Information Science Research, 33(4), pp.293-\n301. \nCresswell, J.W. and Plano Clark, V.L., 2011. Designing and conducting mixed \nmethod research. 2nd ed. Thousand Oaks, CA: Sage. \nCreswell, J.W. 2002. Educational research: Planning, conducting, and evaluating \nquantitative and qualitative research. Upper Saddle River, NJ: Prentice \nHall. \nCugola, G. and Margara, A. 2012. Processing flows of information: From data \nstream to complex event processing. ACM Computing Surveys (CSUR), \n44(3), p.15. \nCugola, G., Margara, A., Matteucci, M. and Tamburrelli, G. 2015. Introducing \nuncertainty in complex event processing: model, implementation, and \nvalidation. Computing, 97(2), pp.103-144. \n\n207 \n \nCugola, G., Margara, A., Pezzè, M. and Pradella, M. 2015. Efficient analysis of \nevent processing applications. In Proceedings of the 9th ACM International \nConference on Distributed Event-Based Systems, pp. 10-21. ACM. \nDayarathna, M. and Perera, S., 2018. Recent advancements in event processing. \nACM Computing Surveys (CSUR), 51(2), p.33. \nDea, D. and Scoones, I., 2003. Networks of knowledge: how farmers and scientists \nunderstand soils and their fertility. a case study from Ethiopia. Oxford \nDevelopment Studies, 31(4), pp.461-478. \nDemers, A.J., Gehrke, J., Panda, B., Riedewald, M., Sharma, V. and White, W.M. \n2007, January. Cayuga: A General Purpose Event Monitoring System. In \nCidr (Vol. 7, pp. 412-422). \nDenzin, N.K. and Lincoln, Y.S. eds. 2011. The Sage handbook of qualitative \nresearch. Sage. \nDenzin, N.K. and Lincoln, Y.S., 1994. Handbook of qualitative research. Sage. \nDEROSE K. 2004. What Is Epistemology? A Brief Introduction to the Topic. Web \nsite \n2004. \nURL: \nhttp://pantheon.yale.edu/%7Ekd47/What-Is-\nEpistemology.htm. \nDevaraju, A. 2009. Towards Process-Based Ontology for Representing Dynamic \nGeospatial Phenomena. In COSIT 2009 Doctoral Colloquium, Aber Wrac’h, \nFrance, 21st-25th September. \nDevaraju, A., Kuhn, W. and Renschler, C.S. 2015. A formal model to infer \ngeographic events from sensor observations. International journal of \ngeographical information science, 29(1), pp.1-27. \nDíaz, S., Demissew, S., Carabias, J., Joly, C., Lonsdale, M., Ash, N., Larigauderie, \nA., Adhikari, J.R., Arico, S., Báldi, A. and Bartuska, A. 2015. The IPBES \nConceptual Framework—connecting nature and people. Current Opinion in \nEnvironmental Sustainability, 14, pp.1-16. \nDomingue, J., Fensel, D. and Hendler, J.A. 2011. Handbook of semantic web \ntechnologies. Berlin, Heidelberg: Springer Science & Business Media. \nDrost, E.A. 2011. Validity and reliability in social science research. Education \nResearch and perspectives, 38(1), p.105. \n\n208 \n \nDutta, R., Basnayake, S. and Ahmed, A.K. 2015. Assessing Gaps in Strengthening \nEarly Warning System in Managing Disasters in Cambodia. IDRiM \nJournal, 5(2), pp.167-175. \nEA‐4/02 M. 2013. Evaluation of the uncertainty of measurement in calibration. \nSeptember \n2013 \nrev01. \nhttp://www.european‐\naccreditation.org/publication/ea‐4‐02‐m (accessed 29 September 2018). \nEdmonds, W.A. and Kennedy, T.D., 2012. An Applied Reference Guide to Research \nDesigns: Quantitative, Qualitative, and Mixed Methods.Sage. \nEdossa, D.C., Woyessa, Y.E. and Welderufael, W.A. 2016. Spatiotemporal analysis \nof droughts using self-calibrating Palmer’s Drought Severity Index in the \ncentral region of South Africa. Theoretical and applied climatology, 126(3-\n4), pp.643-657. \nEdossa, D.C., Woyessa, Y.E. and Welderufael, W.A., 2014. Analysis of droughts in \nthe central region of South Africa and their association with SST anomalies. \nInternational Journal of Atmospheric Sciences, 2014. \nEspinoza, J.C., Ronchail, J., Guyot, J.L., Junquas, C., Vauchel, P., Lavado, W., \nDrapeau, G. and Pombosa, R. 2011. Climate variability and extreme \ndrought in the upper Solimões River (western Amazon Basin): \nUnderstanding the exceptional 2010 drought. Geophysical Research Letters, \n38(13). \nF. Wang, 2016 https://www.npmjs.com/package/node-red-contrib-kafka-node.  \nFahad, M. and Qadir, M.A.  2008. “A Framework for ontology evaluation.” 16th \nIntl. Proceeding of Conceptual Structures. July 2008, France. Vol-354, pp. \n149-158. \nFahad, M., Qadir, M.A. and Shah, S.A.H. 2008. Evaluation of ontologies and DL \nreasoners. In International Conference on Intelligent Information \nProcessing, pp. 17-27. Boston, MA: Springer. \nFensel, D., Erdmann, M. and Studer, R., 1997. Ontology groups: Semantically \nenriched subnets of the WWW. In Proceedings of the International \nWorkshop Intelligent Information Integration during the 21st German \nAnnual Conference on Artificial Intelligence. \n\n209 \n \nFernández-López, M., Gómez-Pérez, A. and Juristo, N. 1997. Methontology: from \nontological art towards ontological engineering. \nFerreira, S., Collofello, J., Shunk, D. and Mackulak, G. 2009. Understanding the \neffects of requirements volatility in software engineering by using \nanalytical modeling and software process simulation. Journal of Systems \nand Software, 82(10), pp.1568-1577. \nFiwareCEP. FIWARE CEP. Proactive Technology Online. 2016. Available online: \nhttps://catalogue.fiware.org/enablers/complex-event-processing-cep-\nproactive-technology-online (accessed on 15 December 2018) \nFlouris, I., Giatrakos, N., Deligiannakis, A., Garofalakis, M., Kamp, M. and Mock, \nM., 2017. Issues in complex event processing: Status and prospects in the \nbig data era. Journal of Systems and Software, 127, pp.217-236. \nFlyvbjerg, B., 2006. Five misunderstandings about case-study research. \nQualitative inquiry, 12(2), pp.219-245. \nFogwill, T., Alberts, R. and Keet, C.M. 2012. The potential for use of semantic web \ntechnologies in IK management systems. \nFreund, E. 2012, IEEE Standard for System and Software Verification and \nValidation (IEEE Std 1012-2012), Software Quality Professional, vol. 15, no. \n1, pp. 43-45. \nFürst, F. and Trichet, F. 2006. Heavyweight ontology engineering. In OTM \nConfederated International Conferences\" On the Move to Meaningful \nInternet Systems\" (pp. 38-39). Berlin: Heidelberg. Springer. \nGama, J. 2010. Knowledge discovery from data streams. Chapman and Hall/CRC. \nGana, F.S. 2003. The usage of indigenous plant materials among small-scale \nfarmers in Niger State Agricultural Development Project-Nigeria. Indilinga \nAfrican Journal of Indigenous Knowledge Systems, 2(1), pp.53-60. \nGanzha, M., Paprzycki, M., Pawlowski, W., Szmeja, P. and Wasielewska, K. 2016. \nSemantic technologies for the iot-an inter-iot perspective. In 2016 IEEE \nFirst \nInternational \nConference \non \nInternet-of-Things \nDesign \nand \nImplementation (IoTDI), pp.271-276. IEEE. \n\n210 \n \nGehani, N.H., Jagadish, H.V. and Shmueli, O. 1992. Composite event specification \nin active databases: Model & implementation. In VLDB, Vol. 92, pp. 327-\n338. \nGenesereth, M.R. and Fikes, R.E. 1992. Knowledge interchange format-version \n3.0: reference manual. \nGerber, M.C., Gerber, A.J. and van der Merwe, A, 2015. “The conceptual \nframework for financial reporting as a domain ontology.” In Twenty-first \nAmericas Conference on Information Systems, Puerto Rico, pp.1-18. \nGiarratano, J.C. and Riley, G. 1998. Expert systems. PWS publishing co. \nGill, P., Stewart, K., Treasure, E. and Chadwick, B. 2008. Methods of data \ncollection in qualitative research: interviews and focus groups. British \ndental journal, 204(6), p.291. \nGiunchiglia, F. and Zaihrayeu, I. 2009. Lightweight ontologies. In Encyclopedia of \nDatabase Systems, pp.1613-1619. Boston, MA: Springer. \nGómez-Pérez, A. and Benjamins, R. 1999. Overview of knowledge sharing and \nreuse components: Ontologies and problem-solving methods. IJCAI and the \nScandinavian AI Societies. CEUR Workshop Proceedings. \nGouse, M., Pray, C.E., Schimmelpfennig, D. and Kirsten, J. 2006. Three seasons \nof subsistence insect-resistant maize in South Africa: have smallholders \nbenefited? \nGrasso, V.F. and Singh, A. 2011. Early warning systems: State-of-art analysis and \nfuture directions. Draft report, UNEP, 1. \nGreco, L., Ritrovato, P. and Xhafa, F. 2019. An edge-stream computing \ninfrastructure for real-time analysis of wearable sensors data. Future \nGeneration Computer Systems, 93, pp.515-528. \nGruber, T.R., 1993. A translation approach to portable ontology specifications. \nKnowledge acquisition, 5(2), pp.199-220. \nGrykałowska, A., Kowal, A. and Szmyrka‐Grzebyk, A. 2015. The basics of \ncalibration \nprocedure \nand \nestimation \nof \nuncertainty \nbudget \nfor \nmeteorological temperature sensors. Meteorological Applications, 22, \npp.867-872. \n\n211 \n \nGuarino, N. ed., 1998. Formal ontology in information systems: Proceedings of the \nfirst international conference (FOIS'98), June 6-8, Trento, Italy (Vol. 46). \nIOS press. \nGuarino, N., Oberle, D. and Staab, S., 2009. What is an ontology?. In Handbook \non ontologies pp. 1-17. Berlin, Heidelberg: Springer. \nGuba and Lincoln, Y.S. 1981. Effective evaluation: Improving the usefulness of \nevaluation results through responsive and naturalistic approaches. Jossey-\nBass. \nGuba and Lincoln, Y.S.1994. Competing paradigms in qualitative research. \nHandbook of qualitative research, 2(163-194), p.105. \nGuba, 1990. The paradigm dialog. In Alternative Paradigms Conference, Mar, \n1989, Indiana U, School of Education, San Francisco, CA, Sage. \nGuha-Sapir, D., Vos, F., Below, R. and Ponserre, S. 2012. Annual disaster \nstatistical review 2011: the numbers and trends. Centre for Research on the \nEpidemiology of Disasters (CRED). \nHansen, D.O., Erbaugh, J.M. and Napier, T.L. 1987. Factors related to adoption \nof soil conservation practices in the Dominican Republic. Journal of soil and \nwater conservation, 42(5), pp.367-369. \nHarris, L.R. and Brown, G.T. 2010. Mixing interview and questionnaire methods: \nPractical problems in aligning data. \nHill, E.F., 2003. Jess in action: Java rule-based systems. Manning Publications \nCo. \nHoughton, C., Hunter, A. and Meskell, P. 2012. Linking aims, paradigm and \nmethod in nursing research. Nurse researcher, 20(2). \nHuberman, A.M. and Miles, M.B., 1994. Data management and analysis methods. \nI. F. Akyildiz, W. Su, Y. Sankarasubramaniam, and E. Cayirci, “A survey on sensor \nnetworks,” IEEE Communications Magazine, vol. 40, no. 8, pp. 102–105, \n2002. \nIacca, G., 2013. Distributed optimization in wireless sensor networks: an island-\nmodel framework. Soft Computing, 17(12), pp.2257-2277. \n\n212 \n \nINTERNATIONAL LABORATORY ACCREDITATION COOPERATION, 2000. \nGuidelines for the requirements for the competence of reference material \nproducers. \nISDR, U. 2006, March. Hyogo framework for action 2005-2015: building the \nresilience of nations and communities to disasters. In Extract from the final \nreport of the World Conference on Disaster Reduction (A/CONF. 206/6) (Vol. \n380). Geneva: The United Nations International Strategy for Disaster \nReduction. \nJaeger, R.G. and Halliday, T.R. 1998. On confirmatory versus exploratory \nresearch. Herpetologica, pp. S64-S66 \nJanowicz, K. and Compton, M. 2010. The Stimulus-Sensor-Observation Ontology \nDesign Pattern and its Integration into the Semantic Sensor Network \nOntology. In SSN. \nJohnson, B. and Christensen, L. 2008. Educational research: Quantitative, \nqualitative, and mixed approaches. Sage. \nJones, D., Bench-Capon, T. and Visser, P. 1998. Methodologies for ontology \ndevelopment. \nJuristo, N. and Morant, J.L. 1998. Common framework for the evaluation process \nof KBS and conventional software. Knowledge-Based Systems, 11(2), \npp.145-159. \nKao, B. and Garcia-Molina, H. 1994. An overview of real-time database systems. \nIn Real Time Computing (pp. 261-282). Berlin, Heidelberg: Springer. \nKapoor, B. and Sharma, S. 2010. A comparative study ontology building tools for \nsemantic web applications. International Journal of Web & Semantic \nTechnology (IJWesT), 1(3), pp.1-13. \nKeet, C.M., 2010. Ontology engineering with rough concepts and instances. In \nInternational Conference on Knowledge Engineering and Knowledge \nManagement (pp. 503-513). Berlin, Heidelberg: Springer. \nKinuthia, Z., Warui, D. and Karqanja, F. 2009. Mapping and Characterizing \nWater Points in Mbeti South Location, Mbeere District. \n\n213 \n \nKosanke, K. 2006. ISO Standards for Interoperability: a comparison. In \nInteroperability of enterprise software and applications, pp. 55-64. Springer, \nLondon. \nKovach, M. 2010. Conversational method in Indigenous research. First Peoples \nChild & Family Review, 14(1), pp.123-136. \nKrafzig, D., Banke, K. and Slama, D., 2005. Enterprise SOA: service-oriented \narchitecture best practices. Prentice Hall Professional. \nKrebs, J.R. and Davies, N.B. 2009. Behavioural ecology: an evolutionary approach. \nJohn Wiley & Sons. \nKuhn, W. 2005. Geospatial semantics: why, of what, and how?. In Journal on data \nsemantics III (pp. 1-24). Berlin, Heidelberg: Springer. \nKuhn, W. 2009. A functional ontology of observation and measurement. In \nInternational Conference on GeoSpatial Semantics, pp. 26-43. Berlin, \nHeidelberg: Springer. \nLam, A.N. and Haugen, Ø., 2016. Complex Event Processing in ThingML. In \nInternational Conference on System Analysis and Modeling, pp. 20-35. \nSpringer, Cham. \nLaudon, K.C. and Laudon, J.P. 2018. Management information systems: \nmanaging the digital firm. Pearson. \nLaux, P., Kunstmann, H. and Bárdossy, A. 2008. Predicting the regional onset of \nthe rainy season in West Africa. International Journal of Climatology: A \nJournal of the Royal Meteorological Society, 28(3), pp.329-342. \nLeonard, G.S., Johnston, D.M., Paton, D., Christianson, A., Becker, J. and Keys, \nH. 2008. Developing effective warning systems: Ongoing research at \nRuapehu volcano, New Zealand. Journal of Volcanology and Geothermal \nResearch, 172(3-4), pp.199-215. \nLi, N., Wang, R., Zhang, J., Fu, Z. and Zhang, X. 2009. Developing a knowledge-\nbased early warning system for fish disease/health via water quality \nmanagement. Expert Systems with Applications, 36(3), pp.6500-6511. \nLichtman, M. 2006. Qualitative research in education: A user’s guide (pp. 7-8). \nThousand Oaks, CA: Sage Publications. \n\n214 \n \nLiepins, R., Cerans, K. and Sprogis, A. 2012. Visualizing and Editing Ontology \nFragments with OWLGrEd. I-SEMANTICS (Posters & Demos), 932, pp.22-\n25. \nLlaves, A. and Kuhn, W. 2014. An event abstraction layer for the integration of \ngeosensor data. International Journal of Geographical Information Science, \n28(5), pp.1085-1106. \nLogic, C. 2007. Information technology–common logic (cl): A framework for a \nfamily of logic based languages (final draft–reference number: Iso/iec fdis \n24707: 2007 (e)). Geneva: ISO Copyright Office. \nLohmann, S., Negru, S., Haag, F. and Ertl, T. 2016. Visualizing ontologies with \nVOWL. Semantic Web, 7(4), pp.399-419. \nLudwig, D. 2016. Overlapping ontologies and Indigenous knowledge. From \nintegration to ontological self-determination. Studies in History and \nPhilosophy of Science Part A, 59, pp.36-45. \nLuseno, W.K., McPeak, J.G., Barrett, C.B., Little, P.D. and Gebru, G. 2003. \nAssessing the value of climate forecast information for pastoralists: \nEvidence from Southern Ethiopia and Northern Kenya. World development, \n31(9), pp.1477-1494. \nMabanza, N. 2018. Evaluating the Usability of Flat Panel Displays: A Case Study \nof the Faculty of Engineering and Information Technology. In 2018 \nInternational Conference on Advances in Big Data, Computing and Data \nCommunication Systems (icABCD), pp. 1-5. IEEE. \nManyanhaire, I.O. 2015. Integrating indigenous knowledge systems into climate \nchange interpretation: perspectives relevant to Zimbabwe. Greener journal \nof educational research, 5, pp.27-36. \nMasinde, M. 2015. An innovative drought early warning system for sub-Saharan \nAfrica: Integrating modern and indigenous approaches. African Journal of \nScience, Technology, Innovation and Development, 7(1), pp.8-25. \nMasinde, M. and Bagula, A. 2010. A framework for predicting droughts in \ndeveloping countries using sensor networks and mobile phones. In \nProceedings of the 2010 Annual Research Conference of the South African \n\n215 \n \nInstitute of Computer Scientists and Information Technologists, pp. 390-393. \nACM. \nMasinde, M. and Bagula, A. 2011. “ITIKI: bridge between African indigenous \nknowledge and modern science of drought prediction.” Knowledge \nManagement for Development Journal, 7(3), pp.274-290. \nMasinde, M. and Bagula, A. 2015. A Calibration Report for Wireless Sensor-Based \nWeatherboards. Journal of Sensor and Actuator Networks, 4(1), pp.30-49. \nMasinde, M., 2014. An effective drought early warning system for sub-Saharan \nAfrica: Integrating modern and indigenous approaches. In Proceedings of \nthe Southern African Institute for Computer Scientist and Information \nTechnologists Annual Conference 2014 on SAICSIT 2014 Empowered by \nTechnology, p. 60. ACM. \nMasinde, M., Bagula, A. and Muthama, N. 2012. Wireless sensor networks (WSNs) \nuse in drought prediction and alerts. Application of ICTs for Climate \nChange Adaptation in the Water Sector: Developing Country Experiences \nand Emerging Research Priorities. APC, IDRC, CRDI, pp.107-108. \nMasinde, M., Bagula, A. and Muthama, N.J. 2012. The role of ICTs in downscaling \nand up-scaling integrated weather forecasts for farmers in sub-Saharan \nAfrica. In Proceedings of the Fifth International Conference on Information \nand Communication Technologies and Development, pp. 122-129. ACM. \nMasolo, C., Borgo, S., Gangemi, A., Guarino, N., Oltramari, A. and Schneider, L. \n2003. Dolce: a descriptive ontology for linguistic and cognitive engineering. \nWonderWeb project, deliverable D17 v2, 1, pp.75-105. \nMcGuinness, D.L. and Van Harmelen, F. 2004. OWL Web Ontology Language \nOverview. W3C Recommendation, February 2004. Latest version is \navailable at http://www. w3c. org/TR/owl-features. \nMcKee, T.B., Doesken, N.J. and Kleist, J. 1993. The relationship of drought \nfrequency and duration to time scales. In Proceedings of the 8th Conference \non Applied Climatology Vol. 17, No. 22, pp. 179-183. Boston, MA: American \nMeteorological Society. \n\n216 \n \nMercer, J., Kelman, I., Taranis, L. and Suchet‐Pearson, S. 2010. Framework for \nintegrating indigenous and scientific knowledge for disaster risk reduction. \nDisasters, 34(1), pp.214-239. \nMishra, A.K. and Desai, V.R. 2006. Drought forecasting using feed-forward \nrecursive neural network. ecological modelling, 198(1-2), pp.127-138. \nMishra, A.K. and Singh, V.P. 2010. A review of drought concepts. Journal of \nhydrology, 391(1-2), pp.202-216. \nMishra, S., Pecht, M. and Goodman, D.L. 2002, April. In-situ sensors for product \nreliability monitoring. In Design, Test, Integration, and Packaging of \nMEMS/MOEMS 2002 (Vol. 4755, pp. 10-20). International Society for \nOptics and Photonics. \nMitchell, O. 2015. Experimental Research Design. In The Encyclopedia of Crime \nand \nPunishment, \nW. \nG. \nJennings \n(Ed.). \ndoi:10.1002/9781118519639.wbecpx113 \nMohamed, A.B. 2011. Climate change risks in Sahelian Africa. Regional \nEnvironmental Change, 11(1), pp.109-117. \nMoreira, J., Daniele, L., Pires, L.F., van Sinderen, M., Wasielewska, K., Szmeja, \nP., Pawlowski, W., Ganzha, M. and Paprzycki, M., 2017, November. \nTowards IoT Platforms' Integration Semantic Translations between W3C \nSSN and ETSI SAREF. In SEMANTICS Workshops. \nMoreira, J.L., Pires, L.F., van Sinderen, M. and Costa, P.D., 2017. Ontology-\nDriven Conceptual Modeling for Early Warning Systems: Redesigning the \nSituation Modeling Language. In MODELSWARD, pp. 467-477. \nMorse, J.M., Barrett, M., Mayan, M., Olson, K. and Spiers, J. 2002. Verification \nstrategies for establishing reliability and validity in qualitative research. \nInternational journal of qualitative methods, 1(2), pp.13-22. \nMouton, J. 1996. Understanding social research. Van Schaik Publishers. \nMugabe, F.T., Mubaya, C.P., Nanja, D., Gondwe, P., Munodawafa, A., \nMutswangwa, E., Chagonda, I., Masere, P., Dimes, J. and Murewi, C. 2010. \nUse of Indigenous Knowledge Systems and Scientific Methods for Climate \nForecasting in Southern Zambia and North Western Zimbabwe. Zimbabwe \nJournal of Technological Sciences, 1(1), pp.19-30. \n\n217 \n \nMurphy, S.J., Washington, R., Downing, T.E., Martin, R.V., Ziervogel, G., Preston, \nA., Todd, M., Butterfield, R. and Briden, J. 2001. Seasonal forecasting for \nclimate hazards: prospects and responses. Natural Hazards, 23(2-3), \npp.171-196. \nMutua, F.K., Dewey, C.E., Arimi, S.M., Ogara, W.O., Githigia, S.M., Levy, M. and \nSchelling, E. 2011. Indigenous pig management practices in rural villages \nof Western Kenya. \nMwagha, S.M. and Masinde, M. 2015, May. Scientific verification of weather lore \nfor drought forecasting—The role of fuzzy cognitive mapping. In \nProceedings of the IST-Africa 2015 Conference, Lilongwe, Malawi, pp. 6-8. \nMwagha, S.M. and Masinde, M. 2016. Application of computer vision in detecting \nsky objects as weather lore concepts. Interim: Interdisciplinary Journal, \n15(1), pp.1-17. \nMyers M.D. Qualitative Research in Information Systems. MIS Quarterly, vol. 21 \n1997: \npp. \n241–242. \nURL: \nhttp://www.misq.org/discovery/MISQD_isworld/index.html. Last accessed \n16/9/2006. \nNdlela, S. 2015. Agricultural extension, sustainable livelihoods and self-reliance: \nthe case of Illovo's small-scale sugarcane farmer development programme \n(Noodsberg, South Africa) (Doctoral dissertation). UKZN. \nNeumeyer, L., Robbins, B., Nair, A. and Kesari, A. 2010. S4: Distributed stream \ncomputing platform. In Data Mining Workshops (ICDMW), 2010 IEEE \nInternational Conference on, pp. 170-177. IEEE. \nNielsen, J. 1994. Estimating the number of subjects needed for a thinking aloud \ntest. International journal of human-computer studies, 41(3), pp.385-397. \nNoy, N.F. and McGuinness, D.L. 2001. Ontology development 101: A guide to \ncreating your first ontology. \nNunavath, V. 2017. Model-Driven Data Integration for Emergency Response: \nDoctoral Dissertation for the Degree Philosophiae Doctor (PhD) at the \nFaculty of Engineering and Science, Specialization in Information and \nCommunication Technology. Doctoral dissertations at University of Agder. \n\n218 \n \nNyong, A., Adesina, F. and Elasha, B.O. 2007. The value of indigenous knowledge \nin climate change mitigation and adaptation strategies in the African Sahel. \nMitigation and Adaptation strategies for global Change, 12(5), pp.787-797. \nOberle, D. 2004. Semantic management of middleware. In Proceedings of the 1st \ninternational doctoral symposium on Middleware, pp. 299-303. ACM. \nOh, S.B., Kim, D.W., Choi, K.S. and Byun, H.R. 2010. Introduction of East Asian \ndrought monitoring system. SOLA, 6(SpecialEdition), pp.9-12. \nOmidvar, E. and Tahroodi, Z.N., 2019. Evaluation and prediction of meteorological \ndrought conditions using time-series and genetic programming models. \nJournal of Earth System Science, 128(3), p.73. \nOpengeospatial 2016, Geography Markup Language. [Online]. Available: \nhttp://www.opengeospatial.org/standards/gml \nPalinkas, L.A., Horwitz, S.M., Green, C.A., Wisdom, J.P., Duan, N. and Hoagwood, \nK. 2015. Purposeful sampling for qualitative data collection and analysis in \nmixed method implementation research. Administration and Policy in \nMental Health and Mental Health Services Research, 42(5), pp.533-544. \nPalmer, W.C. 1965. Meteorological drought, Research paper no. 45. US Weather \nBureau, Washington, DC, 58. \nPatni, H.K. 2011. Real time semantic analysis of streaming sensor data (Doctoral \ndissertation, Wright State University). \nPatton, M.Q. 2002. Qualitative interviewing. Qualitative research and evaluation \nmethods, 3, pp.344-347. \nPerera, C., Zaslavsky, A., Christen, P. and Georgakopoulos, D. 2014. Sensing as a \nservice model for smart cities supported by internet of things. Transactions \non Emerging Telecommunications Technologies, 25(1), pp.81-93. \nPeroni, S., Shotton, D. and Vitali, F., 2012. The Live OWL Documentation \nEnvironment: \na \ntool \nfor \nthe \nautomatic \ngeneration \nof \nontology \ndocumentation. In International Conference on Knowledge Engineering and \nKnowledge Management (pp. 398-412). Springer: Berlin, Heidelberg. \nPeuquet, D.J. and Duan, N. 1995. An event-based spatiotemporal data model \n(ESTDM) for temporal analysis of geographical data. International journal \nof geographical information systems, 9(1), pp.7-24. \n\n219 \n \nPietzuch, P.R. and Bacon, J.M. 2002. Hermes: A distributed event-based \nmiddleware architecture. In Proceedings 22nd International Conference on \nDistributed Computing Systems Workshops, pp. 611-618. IEEE. \nPlummer, N., Allsopp, T., Lopez, J.A. and Llansó, P. 2003. Guidelines on climate \nobservation networks and systems. World Meteorological Organization: \nGeneva, Switzerland. \nPohl, K. 1994. The three dimensions of requirements engineering: a framework \nand its applications. Information systems, 19(3), pp.243-258. \nPonterotto, J.G. 2005. Qualitative research in counseling psychology: A primer on \nresearch paradigms and philosophy of science. Journal of counseling \npsychology, 52(2), p.126. \nPoslad, S., Middleton, S.E., Chaves, F., Tao, R., Necmioglu, O. and Bügel, U. 2015. \nA semantic IoT early warning system for natural environment crisis \nmanagement. IEEE Transactions on Emerging Topics in Computing, 3(2), \npp.246-257. \nProbst, F. 2006. Ontological analysis of observations and measurements. In \nInternational Conference on Geographic Information Science, pp.304-320. \nSpringer, Berlin, Heidelberg. \nProbst, F., Gordon, A. and Dornelas, 2006. OGC Discussion paper: Ontology-based \nrepresentation of the OGC observations and measurements model. Institute \nfor Geoinformatics (ifgi). \nProtégé., 2011. The Protégé Ontology Editor. http://protege.stanford.edu/. \nPugh, E.M. and Winslow, G.H. 1966. The analysis of physical measurements. Pp \n6. \nRainardi, V. 2008. Functional and nonfunctional requirements. Building a Data \nWarehouse: With Examples in SQL Server, pp.61-70. \nRashid, A. 2009. Global information and early warning system on food and \nagriculture \n(GIEWS). \n2013-08-165 \nhttp://www, \neel-ss. \nnet/sample-\nehapters/el5/E1-47-14, pdf. \nRazzaque, Mohammad Abdur, Marija Milojevic-Jevric, Andrei Palade, and \nSiobhán Clarke.  2015. Middleware for internet of things: a survey. IEEE \nInternet of things journal 3, no. 1, pp.70-95. \n\n220 \n \nReid, W.V., Mooney, H.A., Cropper, A., Capistrano, D., Carpenter, S.R., Chopra, \nK., Dasgupta, P., Dietz, T., Duraiappah, A.K., Hassan, R. and Kasperson, \nR., 2005. Ecosystems and human well-being-Synthesis: A Report of the \nMillennium Ecosystem Assessment. Island Press. \nRodriguez, M.A., Cuenca, L. and Ortiz, A. 2018. FIWARE Open Source Standard \nPlatform in Smart Farming-A Review. In Working Conference on Virtual \nEnterprises, pp. 581-589. Springer, Cham. \nRogers, D. and Tsirkunov, V. 2011. Costs and benefits of early warning systems. \nGlobal Assessment Rep. \nRogers, D. and Tsirkunov, V. 2011. Implementing hazard early warning systems. \nGlobal Facility for Disaster Reduction and Recovery. \nRoncoli, C. 2006. Ethnographic and participatory approaches to research on \nfarmers’ responses to climate predictions. Climate Research, 33(1), pp.81-\n99. \nRoncoli, C., Ingram, K., & Kirshen, P. 2002. Reading the rains: local knowledge \nand rainfall forecasting in Burkina Faso. Society & Natural Resources, \n15(5), pp.409-427. \nRoncoli, C., Orlove, B.S., Kabugo, M.R. and Waiswa, M.M., 2011. Cultural styles \nof participation in farmers’ discussions of seasonal climate forecasts in \nUganda. Agriculture and Human Values, 28(1), pp.123-138. \nRoos, V., Chigeza, S. and Van Niekerk, D. 2010. Coping with drought: Indigenous \nknowledge application in rural South Africa. Indilinga African Journal of \nIndigenous Knowledge Systems, 9(1), pp.1-11. \nSang, Y.F. 2013. A review on the applications of wavelet transform in hydrology \ntime series analysis. Atmospheric research, 122, pp.8-15. \nSasikumar, M., Ramani, S., Raman, S.M., Anjaneyulu, K. and Chandrasekar, R. \n2007. A practical introduction to rule based expert systems. New Delhi: \nNarosa Publishing House. \nSaunders, M., Lewis, P. and Thornhill, A., 2007. Research methods. Business \nStudents 4th edition Pearson Education Limited, England. \nSchmerken, Ivy, 2008. Deciphering the Myths Around Complex Event Processing \nNew York: Wall Street & Technology. \n\n221 \n \nSchultz-Møller, N.P., Migliavacca, M. and Pietzuch, P. 2009. Distributed complex \nevent processing with query rewriting. In Proceedings of the Third ACM \nInternational Conference on Distributed Event-Based Systems, p.4. ACM. \nScott, A.C., Clayton, J.E. and Gibson, E.L. 1991. A practical guide to knowledge \nacquisition. Addison-Wesley Longman Publishing Co., Inc. \nSegaran, T., Evans, C. and Taylor, J. 2009. Programming the Semantic Web: Build \nFlexible Applications with Graph Data. O'Reilly Media. \nShabi, J., Reich, Y. and Diamant, R. 2017. Planning the verification, validation, \nand testing process: a case study demonstrating a decision support model. \nJournal of Engineering Design, 28(3), pp.171-204. \nSheth, A.P. and Ramakrishnan, C. 2003. Semantic (Web) technology in action: \nOntology driven information systems for search, integration, and analysis. \nIEEE Data Engineering Bulletin, 26(4), p.40. \nShortliffe, E.H., Davis, R., Axline, S.G., Buchanan, B.G., Green, C.C. and Cohen, \nS.N. 1975. Computer-based consultations in clinical therapeutics: \nexplanation and rule acquisition capabilities of the MYCIN system. \nComputers and biomedical research, 8(4), pp.303-320. \nSiler, W. and Buckley, J.J. 2005. Fuzzy expert systems and fuzzy reasoning. John \nWiley & Sons. \nSillitoe, P., 1998. The development of indigenous knowledge: a new applied \nanthropology. Current anthropology, 39(2), pp.223-252. \nSimpson, L., 2000. Indigenous knowledge and western science: Towards new \nrelationships for change. Aboriginal health, identity and resources, pp.186-\n195. \nSmith, A.B. and Katz, R.W. 2013. US billion-dollar weather and climate disasters: \ndata sources, trends, accuracy and biases. Natural hazards, 67(2), pp.387-\n410. \nSmith, B. 2003. Ontology. \nSon, S.C., Lee, B.T., Ko, S.K. and Kang, K. 2016. Hybrid Sensor Calibration \nScheme for Mobile Crowdsensing–Based City‐Scale Environmental \nMeasurements. ETRI Journal, 38(3), pp.551-559. \n\n222 \n \nSorensen, J.H., 2000. Hazard warning systems: Review of 20 years of progress. \nNatural Hazards Review, 1(2), pp.119-125. \nSpradley, J., 1979. The Ethnographic Interview. New York, NY: Holt, Rinehart \nand Winston. Inc. \nStern, P.C. and Easterling, W.E., 1999. Making climate forecasts matter. National \nResearch Council, panel on human dimensions of seasonal-to-interannual \nclimate variability. \nStojanovic, L., 2004. Methods and tools for ontology evolution. \nStokes, G., 1998. Popper: Philosophy, politics and scientific method. Cambridge: \nPolity Press. \nStraub, D., Boudreau, M.C. and Gefen, D. 2004. Validation guidelines for IS \npositivist research. Communications of the Association for Information \nsystems, 13(1), p.24. \nStuder, R., Benjamins, V.R. and Fensel, D., 1998. Knowledge engineering: \nprinciples and methods. Data and knowledge engineering, 25(1), pp.161-\n198. \nSuryadevara, N.K., Mukhopadhyay, S.C., Wang, R. and Rayudu, R.K., 2013. \nForecasting the behavior of an elderly using wireless sensors data in a \nsmart home. Engineering Applications of Artificial Intelligence, 26(10), pp. \n2641-2652. \nTeddlie, C. and Tashakkori, A. 2009. Foundations of mixed methods research: \nIntegrating quantitative and qualitative approaches in the social and \nbehavioral sciences. Sage. \nTwigg, J., & Lavell, J. 2006. Disaster Early Warning Systems: People, Politics and \nEconomics. Benfield Hazard Research Centre Disaster Studies, Working \nPaper, 16. \nTwigg, J., 2003. The human factor in early warnings: risk perception and \nappropriate communications. In Early warning systems for natural disaster \nreduction, pp. 19-26. Berlin, Heidelberg: Springer. \nUNISDR (United Nations International Strategy for Disaster Reduction) 2009. \nGlobal assessment report on disaster risk reduction. Geneva: UNO. \n\n223 \n \nUNISDR (United Nations International Strategy for Disaster Reduction) 2005. \nHyogo framework for action 2005–2015: Building the resilience of nations \nand communities to disasters. In Extract from the final report of the World \nConference on Disaster Reduction (A/CONF. 206/6) (Vol. 380). Geneva: \nUNO. \nUNISDR (United Nations International Strategy for Disaster Reduction) 2009. \nTerminology on disaster risk reduction. Geneva, Switzerland. \nValentine, D., Taylor, P. and Zaslavsky, I. 2012. WaterML, an information \nstandard for the exchange of in-situ hydrological observations. In EGU \nGeneral Assembly Conference Abstracts, Vol. 14, p. 13275. \nVAN DER MERWE A., KOTZE P. AND CRONJE J. 2004 Selecting a Qualitative \nResearch Approach for Information Systems Research. In Proceedings of \nSACLA2004  \nvan der Merwe, A., Kotzé, P. and Cronje, J. 2005. Selecting a Qualitative Research \nApproach for Information Systems Research. Hosted by, 163. \nvan der Veer, H. and Wiles, A. 2008. Achieving technical interoperability. \nEuropean telecommunications standards institute. \nvan Sinderen, M., Moreira, J., Pires, L.F., Wieringa, R., Singh, P.M. and Costa, \nP.D. 2018. Improving the semantic interoperability of IoT Early Warning \nSystems: The Port of Valencia use case. In Interoperability of Enterprise \nSystems and Applications: Smart Services and Business Impact of \nEnterprise Interoperability. \nVan Vlaenderen, H., 2000. Local knowledge: what is it, and why and how do we \ncapture it. In Selected papers from the First National Workshop held in \nMorogoro. FAO LinKS Report (Vol. 2, pp. 1-11). \nvan Wyk, B. 2012. Research design and methods Part I. Cape Town: University of \nWestern Cape. \nVanek, E. 1989. Enhancing resource management in developing nations through \nimproved attitudes towards indigenous knowledge systems: The case of the \nWorld Bank. Indigenous knowledge systems: Implications for agricultural \nand international development, studies in technology and social change, \n(11), pp.162-170. \n\n224 \n \nVeltman, K.H. 2001. Syntactic and semantic interoperability: new approaches to \nknowledge and the semantic web. New Review of Information Networking, \n7(1), pp.159-183. \nVerdin, J., Funk, C., Senay, G. and Choularton, R. 2005. Climate science and \nfamine early warning. Philosophical Transactions of the Royal Society B: \nBiological Sciences, 360(1463), pp.2155-2168. \nVigliocco, G., Meteyard, L., Andrews, M. and Kousta, S., 2009. Toward a theory of \nsemantic representation. Language and Cognition, 1(2), pp.219-247. \nWallace, D.R. and Fujii, R.U., 1989. Software verification and validation: an \noverview. IEEE Software, 6(3), pp.10-17. \nWallace, D.R., Ippolito, L.M. and Cuthill, B.B., 1996. Reference information for the \nsoftware verification and validation process (Vol. 500, No. 234). DIANE \nPublishing. \nWalls, R.L., Deck, J., Guralnick, R., Baskauf, S., Beaman, R., Blum, S., Bowers, \nS., Buttigieg, P.L., Davies, N., Endresen, D. and Gandolfo, M.A., 2014. \nSemantics in support of biodiversity knowledge discovery: an introduction \nto the biological collections ontology and related ontologies. PLoS One, 9(3), \np.e89606. \nWamalwa, B.N. 1989. Indigenous knowledge and natural resources. Gaining \nGround: Institutional Innovations in Land Use Management in Kenya. \nNairobi: African Centre for Technology Studies. Nairobi. \nWarren, D.M. and Cashman, K. 1988. Indigenous knowledge for sustainable \nagriculture and rural development. International Institute for Environment \nand Development, Sustainable Agriculture Programme. \nWarren, D.M., Brokensha, D. and Slikkerveer, L.J. 1991. Indigenous knowledge \nsystems: The cultural dimension of development. Kegan Paul International. \nWasserkrug, S., Gal, A. and Etzion, O. 2012. A model for reasoning with uncertain \nrules in event composition systems. arXiv preprint arXiv:1207.1427. \nWasserkrug, S., Gal, A., Etzion, O. and Turchin, Y. 2008. Complex event \nprocessing over uncertain data. In Proceedings of the second international \nconference on Distributed event-based systems, pp. 253-264. ACM. \nWayne, C.P.,1965. Meteorological drought. US weather bureau research paper, 58. \n\n225 \n \nWeiss, S.M. and Kulikowski, C.A. 1991. Computer systems that learn: \nclassification and prediction methods from statistics, neural nets, machine \nlearning, and expert systems. Morgan Kaufmann Publishers Inc. \nWelderufael, W.A., Woyessa, Y.E. and Edossa, D.C. 2013. Comparison between \ntwo meteorological drought indices in the central region of South Africa. \nWelman, C., Kruger, F. and Mitchell, B., 2005. Research methodology: What is \nenvironmental education. Cape Town: Oxford University Press.  \nWilhite, D.A. and Glantz, M.H., 1985. Understanding: the drought phenomenon: \nthe role of definitions. Water international, 10(3), pp.111-120. \nWilhite, D.A., Rosenberg, N.J. and Glantz, M.H. 1986. Improving federal response \nto drought. Journal of Climate and Applied Meteorology, 25(3), pp.332-342. \nWilhite, D.A., Svoboda, M.D. and Hayes, M.J. 2007. Understanding the complex \nimpacts of drought: A key to enhancing drought mitigation and \npreparedness. Water resources management, 21(5), pp.763-774. \nWilk, J., Andersson, L., Graham, L.P., Wikner, J.J., Mokwatlo, S. and Petja, B. \n2017. From forecasts to action–What is needed to make seasonal forecasts \nuseful for South African smallholder farmers? International journal of \ndisaster risk reduction, 25, pp.202-211. \nWolcott, H.F. 1994. Transforming qualitative data: Description, analysis, and \ninterpretation. Sage. \nWorld Bank 2004. Indigenous Knowledge: Local Pathways to Global Development, \nMarking Five Years of the World Bank, Indigenous Knowledge for \nDevelopment Program. Washington, DC: World Bank. \nZhou, Q., Simmhan, Y. and Prasanna, V. 2017. Knowledge-infused and consistent \ncomplex event processing over real-time and persistent streams. In Future \nGeneration Computer Systems, 76, pp.391-406. \nZiervogel, G. and Opere, A. 2010. Integrating meteorological and indigenous \nknowledge-based seasonal climate forecasts for the agricultural sector: \nlessons from participatory action research in sub-Saharan Africa. CCAA \nlearning paper, 1. \n\n226 \n \n\"Kafka Connect — Confluent Platform.\" Insert Name of Site in Italics. N.p., n.d. \nWeb. 27 Available at https://docs.confluent.io/current/connect/index.html. \n[April, 2019] \n“Customer \nInformation \nQuality.” \n[Online]. \nAvailable: \nhttps://www.oasis-\nopen.org/committees/tc_home.php?wg_abbrev=ciq \n“Emergency Data Exchange Language Hospital Availability Exchange (EDXL-\nHAVE).” \n[Online]. \nAvailable: \nhttp://docs.oasis-\nopen.org/emergency/edxlhave/v1.0/emergency_edxl_have-1.0.html \n“Emergency Data Exchange Language Situation Reporting (EDXL-SitRep).” \n[Online]. \nAvailable: \nhttp://docs.oasis-open.org/emergency/edxl-tep/v1.0/ \ncsprd02/edxl-tep-v1.0-csprd02.html#__RefHeading__1394_291491422 \n“Emergency Data Exchange Language Tracking of Emergency Patients (EDXL-\nTEP).” \n[Online]. \nAvailable: \nhttp://docs.oasis-open.org/emergency/edxl-\ntep/v1.0/csprd02/ \nedxl-tep-v1.0-\ncsprd02.html#__RefHeading__1394_291491422 \n“NIEM \nConcept \nof \nOperations.” \n[Online]. \nAvailable: \nhttps://www.niem.gov/technical/Pages/version-3.aspx \nhttp://www.libelium.com/sigfox-connectivity-waspmote-868mhz-europe-900mhz-\nus-long-range/ \nhttps://en.wikipedia.org/wiki/Mbeere_people Retrieved 17 December 2018 \nhttps://flink.apache.org/ \nhttps://web.archive.org/web/20131121153548/http://www.knbs.or.ke/censusethnic\n.php  Retrieved 17 December 2018. \n \n \n \n\n227 \n \nThe Development of Semantic-based Data Integration Middleware for \nIntegrating Local Indigenous Knowledge and Scientific Data for \nDrought Forecasting/Monitoring System \nQuestionnaire for Local Indigenous Knowledge Data Gathering \nRESEARCH INVITATION LETTER \nDear ______________________, \nI am pleased to invite you to participate in an interview to identify and document \nthe local indigenous knowledge weather indicators based on the following \ncategories (1) patterns of seasons (cold, dry, hot, raining and so on); (2) animals, \ninsects and bird’s behaviors; (3) astronomical; (4) meteorological; (5) human nature \nand behavior; and (6) behaviors of plant/trees. No more than thirty minutes would \nbe required to complete the interview. \nBe assured that any information you provide will be treated in the strictest \nconfidence and your participation will not be identifiable in the resulting report. \nYou are entirely free to discontinue your participation at any time or to decline to \nanswer particular questions. \nI will seek your consent, on the attached form, to record the interview and to use \nthe recording in preparing the report, on condition that your name or identity is not \nrevealed, and to make the recording available to other researchers on the same \nconditions.  \nDirect any enquiries concerning this study to the main Researchers contacts \nbelow. \nThank you for your assistance. \n\n228 \n \nAPPENDIX A \n \nQuestionnaire page 1 \n \nResearcher \nCentral University of Technology, Free State, South Africa \n\n229 \n \nThe Development of Semantic-based Data Integration Middleware for \nIntegrating Local Indigenous Knowledge and Scientific Data for \nDrought Forecasting/Monitoring System \nQuestionnaire for Local Indigenous Knowledge Data Gathering \nINTERVIEW/QUESTIONNAIRE GUIDE \nThe purpose of the interview is to gather the local indigenous knowledge on \ndrought forecasting and environmental monitoring using indicators.  \nThe researcher/research assistant will: - \n1. \nIntroduce the interview session by explaining the purpose of the interview, \nwelcome the respondent(s) and make clear why they were chosen.  \n2. \nExplain the presence and purpose of any recording equipment and give the \noption for respondent(s) to opt out of recording.  \n3. \nOutline ground rules and interview guidelines such as participants can end \nthe interview at any time or refuse to answer any questions,  \n4. \nInform the respondent(s) that a break will be provided if time goes beyond \n30 minutes. \n5. \nAddress the issue of privacy and confidentiality and inform the \nrespondent(s) that information gathered will be analyzed aggregately and \nrespondent’s personal details will not be used in any report. The researcher \nwill also make it clear that respondents’ answers and any information \nidentifying the respondent(s) as a participant of this research will be kept \nconfidential.  \n6. \nInform the respondent(s) that they must sign consent forms before the \ninterview begins. \n7. \nInform the respondent(s) that the interview consists of 19 questions, some \nwith sub sections.  \n\n230 \n \nQuestionnaire page 3 \n \n \n \n \n \n \n \n8. \nInform the respondent(s) how to provide answers to questions by either \nputting a mark on a check box for optional questions or by giving a short \nanswer to open ended questions.  \n9. \nInform the respondent(s) that during or after the interview additional \nquestions can be asked to clarify the respondent(s) answer. \n10. \nInform respondent(s) that they may choose not to answer a particular \nquestion; in that event, he will need to inform the researcher or research \nassistant.  \n11. \nInform the respondent(s) that oral interview will be recorded to ensure \nresponses are captured and transcribed accurately.  \n12. \nInform the respondent(s) that they are allowed ask questions before, during \nand after the interview \n13. \nGo through the process of completing a questionnaire with the respondent(s) \nthrough as an example \n14. \nInform the respondent(s) of follow-up activities and that they should provide \ntheir contact details at the end of the questionnaire if they may wish to be \ninvolved in the implementation phase of the research. \n15. \nAssist the respondent(s) to properly fill the questionnaires to competition. \n16. \nCollect all the questionnaire from the respondent(s) \n17. \nClose the interview by thanking the respondent(s), maintaining on privacy \nand confidentiality considerations;  \n\n231 \n \nThe Development of Semantic-based Data Integration Middleware for \nIntegrating Local Indigenous Knowledge and Scientific Data for \nDrought Forecasting/Monitoring System \nQuestionnaire for Local Indigenous Knowledge Data Gathering \nCONSENT FORM \nI, the undersigned, confirm that (please tick box as appropriate): \n[1]  \nI have read and understood the information about the research,  \n \n[2]  \nI have been given the opportunity to ask questions about the \nresearch and my participation. \n \n[3]  \nI voluntarily agree to participate in the research. \n \n[4]  \nI understand I can withdraw at any time without giving reasons \nand that I will not be penalized for withdrawing  \n \n[5]  \nThe procedures regarding confidentiality have been clearly \nexplained to me. \n \n[6]  \nIf applicable, separate terms of consent for forms of data collection \nhave been explained and provided to me. \n \n[7]  \nThe use of the data in research, publications, sharing and \narchiving has been explained to me. \n \n[8]  \nI understand that other researchers will have access to this data \nonly if they agree to preserve the confidentiality of the data and if \nthey agree to the terms I have specified in this form. \n \n[9]  \nSelect only ONE of the following: \n• I would like my name used and understand what I have said \nor written as part of this research will be used in reports, \npublications and other research outputs so that anything I \nhave contributed to this project can be recognised.  \n \n \n \n• I do not want my name used in this research.  \n \n[10]  I agree to sign and date this informed consent, along with the \nResearcher.  \n \n\n232 \n \n \n________________________ _______________ ________________ \nName of Respondent  \nSignature  \n \n \nDate \n \n________________________ _______________ ________________ \nName of Researcher  \nSignature  \n \n \nDate \n \nQuestionnaire page 3 \n \n \nThe Development of Semantic-based Data Integration Middleware for \nIntegrating Local Indigenous Knowledge and Scientific Data for \nDrought Forecasting/Monitoring System \nQUESTIONNAIRE FOR LOCAL INDIGENOUS KNOWLEDGE DATA \nGATHERING \n[September 2017] \nPART A: INTRODUCTION  \n\n233 \n \nThe local Indigenous knowledge has been built over the years from an understanding of local \nweather, climate, interpretations of animals, insects, birds, and plants behaviour of a particular \ngeographical area.  The major strength of IK lies in long time-series of observations in a \nparticular region. The veracity of the knowledge is based on diachronic data (long time-series) as \nopposed to synchronic data (short time-series over a large area) obtained from modern weather \nmonitoring devices. The two kind of data when semantically integrated would provide accurate \nand reliable drought forecasting input.  \nThe Department of Information Technology at the Central University of Technology, Free State \nin conjuction with the University of KwaZulu Natal is conducting a research to identify and \ndocument the unstructured weather indicators based on the following categories (1) patterns of \nseasons (cold, dry, hot, rainy and so on); (2) animal, insects and bird’s behaviour; (3) astronomical; \n(4) meteorological; (5) human nature and behaviour; and (6) behaviour of plants/trees. \nPhase I of this research seeks to collate the Indigenous Knowledge (IK) from natives, local \nfarmers, IK holders at KwaZulu-Natal province of South Africa and Ndau people, Muchenedze \nDistrict of Mozambique. The results of this research will be used to develop an ontology that \ncaptures all the entities and relationship among the entities in the weather monitoring domain. \nThis knowledge base will be useful in refining and development of an accurate IoT-based \ndrought forecasting system. \nYou are requested to participate in this research by completing this questionnaire. You are \nrequired to put a mark (√ or X) in the check box for the appropriate option or write down your \nresponse in the area provided. \n \n  \n \nQuestionnaire page 5 \n \n \n\n234 \n \n \nThe Development of Semantic-based Data Integration Middleware for \nIntegrating Local Indigenous Knowledge and Scientific Data for \nDrought Forecasting/Monitoring System \nPART B: DEMOGRAPHIC INFORMATION \n \nQ 1 \nNames: _______________________________________________________ (Optional) \n \nQ 2 \nGender?  \n Male  Female \nQ 3 \nAge bracket?  \n Under 18      18-35      36-45       46-55       56-65         above 66  \nQ 4 \nHighest Education Level:  \n None  Primary  Secondary  Post-Secondary \nQ 5 \nWhat is the name of your community? \n_____________________________________________________________________ \nQ 6 \nWhat is the main economic activity in your community? \n_____________________________________________________________________ \nQ 7 \nHow long have you stayed in this community?   \n 5- 10 years  \n 10-20 years  \n over 20 years \nQ 8 \nDo you own a phone or have access to a phone?   \n Yes  \n No  \nQ 9 \nDo you own a smart phone?  \n \n Yes  \n No  \n \n \n \n \n \n \n \n   \n\n235 \n \nQuestionnaire page 6 \n\n236 \n \n \nPART C: KNOWLEDGE ON WEATHER FORECASTING \nQ 10 \nDo you check the weather forecast? \n Yes  \n No  \nIf Yes, how often do you check it? \n Daily \n \n Weekly                       Monthly \n \n Seasonal \nQ 11 \nDo you regularly check for the weather forecast during your cropping \ndecisions? \n \n                  Yes  \n No \nQ 12 \nWhere do you get your weather forecast information? (You may tick more than \none box). \nDo you have confidence in the accuracy of information you get from these \noptions? Please, tick on a scale 1 – 5, with one (1) being the lowest level of \nconfidence and five (5) being the highest. \n \n1 \n2 \n3 \n4 \n5 \n Radio \n \n \n \n \n \n TVs \n \n \n \n \n \n Newspapers \n \n \n \n \n \n Local observations \ne.g. the clouds and \nbehavior of animals \n \n \n \n \n \nOthers please specify \n_____________________ \n \n \n \n \n \n \n\n237 \n \nQ 13 \nDo you use the information from the weather forecast to plan your work? \n Yes  \n No  \nIf Yes, what kind of decisions do you make based on the weather forecast? \n Planting date selection \n              Crop selection            \n Planting method \n              Weeding \n Harvesting                                 Marketing \nOthers, please specify: __________________________________________ \nQ 14 \nDoes the weather forecast provide you with the kind of information you need \nto make decisions for planting and managing your crops? \n Yes  \n No  \nQ 15 \nWhat other information would you want to get from the forecast that could \nhelp you to make decisions on your farm? \n___________________________________________________________________________________\n___________________________________________________________________________________\n___________________________________________________________________________________\n___________________________________________________________________________________\n___________________________________________________________________________________\n___________________________________________________________________________________\n___________________________________________________________________________________\n___________________________________________________________________________________\n___________________________________________________________________________________\n___________________________________________________________________________________\n___________________________________________________________________________________\n___________________________________________________________________________________\n___________________________________________________________________________________\n___________________________________________________________________________________\n___________________________________________________________________________________\n___________________________________________________________________________________\n___________________________________________________________________________________\n___________________________________________________________________________________\n___________________________________________________________________________________\n___________________________________________________________________________________\n___________________________________________________________________________________\n___________________________________________________________________________________\n___________________________________________________________________________________\n___________________________________________________________________________________\n___________________________________________________________________________________ \n \n \n\n238 \n \nPART D: EXAMPLES OF INDIGENOUS/LOCAL INDICATORS FOR \nWEATHER \nQ 16 \nWhich of the following cropping decisions do you use indigenous knowledge to \nreach? You can tick more than one) \n When/if to plant; for example. decide not to plant at all based on very prolonged rains \nonset \n What to plant; e.g. to decide to plant sweet potatoes instead if maize based on the \nanticipated rainfall \n How to plant; e.g. decision to practice mixed cropping        \n When to harvest; e.g. if I know there will be frost next week, I can decide to harvest all my \ncrop before \n Disposal/selling of produce; e.g. when I know that a drought is imminent, I conserve all \nmy produce stead of selling it \nQ 17 \nList some of the indigenous indicators that you commonly use in order to \nmake to make decisions in Q12 above. \n \nSummer \nAutumn \nWinter \nSpring \n Meteorological  \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n Behaviors of birds \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n Behaviors of \ninsects; e.g. ants \nmoving in a straight \nline indicate a dry spell \nis imminent \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n Behaviors of \nanimals, e.g. cattle \ncoming home jumping \nwith their tails up is a \nsign of a good season \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n Flower, leave and \nFruit Production by \nsome trees \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n Astronomical, e.g. \nVisible phases of full \nmoon signifies drier \nperiod \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n\n239 \n \n Myths and religious \nbeliefs, e.g. an extreme \ndrought is a curse for \nthe offences to the gods \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n Knowledge of \nseasons e.g. it always \nrains during summer \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n______________ \n \n \nQuestionnaire page  8\n\n240 \n \nAPPENDIX B \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n241 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n242 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n243 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n244 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n245 \n \n \n \n \n \n \n \n \n \n\n246 \n \nAPPENDIX C \nPrefix(:=<http://www.semanticweb.org/akanbi/ontologies/2018/10/ IKON.owl#>) \nPrefix(owl:=<http://www.w3.org/2002/07/owl#>) Prefix(rdf:=<http://www.w3.org/1999/02/22-\nrdf-syntax-ns#>) Prefix(xml:=<http://www.w3.org/XML/1998/namespace>) \nPrefix(xsd:=<http://www.w3.org/2001/XMLSchema#>) \nPrefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>) \nOntology(<http://www.semanticweb.org/akanbi/ontologies/2018/10/ IKON.owl> \n<http://www.semanticweb.org/akanbi/ontologies/2018/10/IKON.owl/ 2.0.0> \nImport(<http://www.semanticweb.org/aakanbi/ontologies/2016/0/IKON>) Annotation(rdfs:comment \n\"A domain ontology for knowledge representation of local indigenous knowledge on drought. \nCopyright A Akanbi, Central University of Technology, Free State,  South Africa.\") \n \nDeclaration(Class(:Blooming)) Declaration(Class(:Withering)) \nDeclaration(ObjectProperty(:IsFeatureOf)) \nDeclaration(ObjectProperty(:IsFloweringOf)) \nDeclaration(ObjectProperty(:IsWitheringOf)) \nDeclaration(ObjectProperty(:hasFeature)) \n############################ \n# \nObject Properties \n############################ \n# Object Property: <http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#BloomingOf> \n(<http://www.semanticweb.org/aakanbi/ ontologies/2016/0/IKON#BloomingOf>) \nSubObjectPropertyOf(<http://www.semanticweb.org/aakanbi/ontologies/ \n2016/0/IKON#BloomingOf> :IsFeatureOf) \n# Object Property: <http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#FlockingOf> \n(<http://www.semanticweb.org/aakanbi/ ontologies/2016/0/IKON#FlockingOf>) \nSubObjectPropertyOf(<http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#FlockingOf> \n:IsFeatureOf) \n# Object Property: <http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#FlyingOf> \n(<http://www.semanticweb.org/aakanbi/ ontologies/2016/0/IKON#FlyingOf>) \nSubObjectPropertyOf(<http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#FlyingOf> \n:IsFeatureOf) \n# Object Property: <http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#SightingOf> \n(<http://www.semanticweb.org/aakanbi/ ontologies/2016/0/IKON#SightingOf>) \nSubObjectPropertyOf(<http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#SightingOf> \n:IsFeatureOf) \n# Object Property: <http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#SignsOf> \n(<http://www.semanticweb.org/aakanbi/ ontologies/2016/0/IKON#SignsOf>) \n \nSubObjectPropertyOf(<http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#SignsOf> \n:IsFeatureOf) \n# Object Property: <http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#hasColdTemp> \n(<http://www.semanticweb.org/aakanbi/ ontologies/2016/0/IKON#hasColdTemp>) \nSubObjectPropertyOf(<http://www.semanticweb.org/aakanbi/ontologies/ \n2016/0/IKON#hasColdTemp> :hasFeature) \n\n247 \n \n# Object Property: <http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#hasFat> \n(<http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#hasFat>) \nSubObjectPropertyOf(<http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#hasFat> \n:hasFeature) \n# Object Property: <http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#hasFlower> \n(<http://www.semanticweb.org/aakanbi/ ontologies/2016/0/IKON#hasFlower>) \nSubObjectPropertyOf(<http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#hasFlower> \n:hasFeature) ObjectPropertyDomain(<http://www.semanticweb.org/aakanbi/ontologies/ \n2016/0/IKON#hasFlower> <http://www.semanticweb.org/aakanbi/ \nontologies/2016/0/IKON#FloralPlants>) \nObjectPropertyRange(<http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#hasFlower> \n:Blooming) \n# Object Property: <http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#hasGrowth> \n(<http://www.semanticweb.org/aakanbi/ ontologies/2016/0/IKON#hasGrowth>) \nSubObjectPropertyOf(<http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#hasGrowth> \n:hasFeature) \n# Object Property: <http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#hasHotTemp> \n(<http://www.semanticweb.org/aakanbi/ ontologies/2016/0/IKON#hasHotTemp>) \nSubObjectPropertyOf(<http://www.semanticweb.org/aakanbi/ontologies/ \n2016/0/IKON#hasHotTemp> :hasFeature) \n# Object Property: <http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#hasPhase> \n(<http://www.semanticweb.org/aakanbi/ ontologies/2016/0/IKON#hasPhase>) \nSubObjectPropertyOf(<http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#hasPhase> \n:hasFeature) \n# Object Property: <http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#hasStars> \n(<http://www.semanticweb.org/aakanbi/ ontologies/2016/0/IKON#hasStars>) \nSubObjectPropertyOf(<http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#hasStars> \n:hasFeature) \n# Object Property: <http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#hasState> \n(<http://www.semanticweb.org/aakanbi/ ontologies/2016/0/IKON#hasState>) \nSubObjectPropertyOf(<http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#hasState> \n:hasFeature) \n# Object Property: <http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#hasStorm> \n(<http://www.semanticweb.org/aakanbi/ ontologies/2016/0/IKON#hasStorm>) \nSubObjectPropertyOf(<http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#hasStorm> \n:hasFeature) \n# Object Property: <http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#hasWithered> \n(<http://www.semanticweb.org/aakanbi/ ontologies/2016/0/IKON#hasWithered>) \nSubObjectPropertyOf(<http://www.semanticweb.org/aakanbi/ontologies/ \n2016/0/IKON#hasWithered> :hasFeature) \nObjectPropertyDomain(<http://www.semanticweb.org/aakanbi/ontologies/ \n2016/0/IKON#hasWithered> owl:Plants) \nObjectPropertyRange(<http://www.semanticweb.org/aakanbi/ontologies/ \n2016/0/IKON#hasWithered> :Withering) \n# Object Property: :IsFeatureOf (:IsFeatureOf) InverseObjectProperties(:IsFeatureOf  \n:hasFeature) \n\n248 \n \n# Object Property: :IsFloweringOf  (:IsFloweringOf) \nSubObjectPropertyOf(:IsFloweringOf :IsFeatureOf) ObjectPropertyDomain(:IsFloweringOf \n<http://www.semanticweb.org/ aakanbi/ontologies/2016/0/IKON#FloweringPlant>) \nObjectPropertyRange(:IsFloweringOf  :Blooming) \n# Object Property: :IsWitheringOf  (:IsWitheringOf) \nSubObjectPropertyOf(:IsWitheringOf :IsFeatureOf) ObjectPropertyDomain(:IsWitheringOf \nowl:Plants) ObjectPropertyRange(:IsWitheringOf  :Withering) \n# Object Property: :hasFeature  (:hasFeature) \nTransitiveObjectProperty(:hasFeature) \n############################ \n# \nData Properties \n############################ \n# Data Property: <http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#AnimalSize> \n(<http://www.semanticweb.org/aakanbi/ ontologies/2016/0/IKON#AnimalSize>) \nDataPropertyRange(<http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#AnimalSize> \nowl:real) \n# Data Property: <http://www.semanticweb.org/aakanbi/ontologies/ \n2016/0/IKON#FlowerBloomingConditon> (<http://www.semanticweb.org/ \naakanbi/ontologies/2016/0/IKON#FlowerBloomingConditon>) \nDataPropertyRange(<http://www.semanticweb.org/aakanbi/ontologies/ \n2016/0/IKON#FlowerBloomingConditon>  xsd:string) \n# Data Property: <http://www.semanticweb.org/aakanbi/ontologies/ \n2016/0/IKON#MigratoryBirdSighting> (<http://www.semanticweb.org/ \naakanbi/ontologies/2016/0/IKON#MigratoryBirdSighting>) \nDataPropertyRange(<http://www.semanticweb.org/aakanbi/ontologies/ \n2016/0/IKON#MigratoryBirdSighting>  xsd:boolean) \n# Data Property: <http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#MigratoryBirds> \n(<http://www.semanticweb.org/aakanbi/ ontologies/2016/0/IKON#MigratoryBirds>) \nDataPropertyRange(<http://www.semanticweb.org/aakanbi/ontologies/ \n2016/0/IKON#MigratoryBirds> xsd:string) \n# Data Property: <http://www.semanticweb.org/aakanbi/ontologies/ \n2016/0/IKON#WeatherTempCondition> (<http://www.semanticweb.org/ \naakanbi/ontologies/2016/0/IKON#WeatherTempCondition>) \nDataPropertyRange(<http://www.semanticweb.org/aakanbi/ontologies/ \n2016/0/IKON#WeatherTempCondition>  xsd:float) \n# Data Property: <http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#Withering> \n(<http://www.semanticweb.org/aakanbi/ ontologies/2016/0/IKON#Withering>) \nDataPropertyRange(<http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#Withering> \nxsd:boolean) \n############################ \n# \nClasses \n############################ \n# Class: :Blooming (:Blooming) \nSubClassOf(:Blooming <http://www.semanticweb.org/aakanbi/ontologies/ \n2016/0/IKON#PlantsBehaviour>) \n# Class: :Withering (:Withering) \nSubClassOf(:Withering <http://www.semanticweb.org/aakanbi/ \nontologies/2016/0/IKON#PlantsBehaviour>) \n\n249 \n \n############################ \n# \nNamed Individuals \n############################ \n# Individual: <http://www.semanticweb.org/aakanbi/ontologies/2016/0/ IKON#Wiki-Jolo> \n(<http://www.semanticweb.org/aakanbi/ontologies/ 2016/0/IKON#Wiki-Jolo>) \nDataPropertyAssertion(<http://www.semanticweb.org/aakanbi/ \nontologies/2016/0/IKON#FlowerBloomingConditon> <http:// \nwww.semanticweb.org/aakanbi/ontologies/2016/0/IKON#Wiki-Jolo> \"true\"^^xsd:boolean) \n# \nIndividual: \n<http://www.semanticweb.org/aakanbi/ontologies/2016/0/ \nIKON#cattle> \n(<http://www.semanticweb.org/aakanbi/ontologies/2016/0/ IKON#cattle>) \nDataPropertyAssertion(<http://www.semanticweb.org/aakanbi/ \nontologies/2016/0/IKON#AnimalSize> <http://www.semanticweb.org/ \naakanbi/ontologies/2016/0/IKON#cattle>  \"150\"^^xsd:integer) \nAnnotationAssertion(rdfs:comment <http://www.semanticweb.org/ \naakanbi/ontologies/2016/0/IKON#LivingThingsBehaviour> \"The class of behaviour of the local \nindigenous knowledge living things indicators in this domain\") \n) \n\n250 \n \nAPPENDIX D \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n251 \n \n \n \n \n \n \n\n252 \n \nAPPENDIX E \n \n \n1 \n-- phpMyAdmin SQL \nDump 2 -- version 3.2.4 \n3 -- http://www.phpmyadmin.net 4 -- \n5 -- Host: localhost \n6 -- Waktu pembuatan: 02. November 2018 jan 17:17 \n7 -- Version Server: 5.1.41 8 -- \nVersi PHP: 5.3.1 \n9 \n10 SET \nSQL_MODE=\"NO_AUTO_VALUE_ON_ZERO\" ; 11 \n13 /*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */ ; \n14 /*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */ ; \n15 /*!40101 SET \n@OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */ ; 16 /*!40101 \nSET NAMES utf8 */ ; \n19 -- Database: `db_expert_drought`  \n28 CREATE TABLE IF NOT EXISTS `tbl_admin` ( \n29 \n`id_admin` int(5) NOT NULL AUTO_INCREMENT, \n30 \n`username` varchar(30) NOT NULL, \n31 \n`password` varchar(32) NOT NULL, \n32 \n`para` varchar(50) NOT NULL, \n33 \nPRIMARY KEY (`id_admin`) \n34 ) ENGINE=MyISAM DEFAULT CHARSET=latin1 \nAUTO_INCREMENT=5 ;  \n37 -- Dumping data label `tbl_admin` 38  \n40 INSERT INTO `tbl_admin` (`id_admin`, `username`, `password`, \n`para`) VALUES \n41 (3, 'admin', '21232f297a57a5a743894a0e4a801fc3' , 'admin'); \n46 -- Struktur dari tabel `tbl_drought`  \n49 CREATE TABLE IF NOT EXISTS ` tbl_drought` ( \n50 \n`id_diagnosis` int(5) NOT NULL AUTO_INCREMENT, \n51 \n`id_member` int(5) NOT NULL, \n52 \n`kd_penyakit` char(3) NOT NULL, \n \n53 \n`tanggal_diagnosa` varchar(30) NOT NULL, \n54 \nPRIMARY KEY (`id_diagnosa`) \n55 ) ENGINE=MyISAM DEFAULT CHARSET=latin1 \nAUTO_INCREMENT=7 ;  \n58 -- Dumping data from table ` tbl_drought `  \n61 INSERT INTO ` tbl_drought` (`id_diagnosis`, `id_member`, `kd_penyakit`, \n`tanggal_diagnosa`) VALUES 62 \n(6, 4, 'D01', '02-11-2018'), \n63 (5, 4, 'D01', '02-11-2018'); \n68 -- Struture of table  ‘tbl_indicator`  \n71 CREATE TABLE IF NOT EXISTS `tbl_indicator` ( \n72 \n`val1` char(3) NOT NULL, \n\n253 \n \n73 \n`val2` text NOT NULL, \n74 \nPRIMARY KEY (`kd_Val1`) \n75 ) ENGINE=MyISAM DEFAULT \nCHARSET=latin1;  \n78 -- Dumping data from tabel `tbl_indicator`  \n81 INSERT INTO `tbl_1` (`kd_gejala`, `gejala`) VALUES 82 ('I03', 'Indicator \n3'), \n83 ('I02', 'Indicator 2'), \n84 ('I01', 'Indicator 1'); \n89 -- Struktur dari tabel `tbl_member`  \n92 CREATE TABLE IF NOT EXISTS `tbl_member` ( \n93 \n`id_member` int(5) NOT NULL AUTO_INCREMENT, \n94 \n`username` varchar(30) NOT NULL, \n95 \n`password` varchar(32) NOT NULL, \n96 \n`email` varchar(50) NOT NULL, \n97 \n`nama_lengkap` varchar(40) NOT NULL, \n98 \n`jenis_kelamin` enum ('L','P') NOT NULL, \n99 \n`alamat` text NOT NULL, \n100 \nPRIMARY KEY (`id_member`) \n101 ) ENGINE=InnoDB DEFAULT CHARSET=latin1 \nAUTO_INCREMENT=5 ;  \n104 -- Dumping data untuk tabel `tbl_member` \n \n \n107 INSERT INTO `tbl_member` (`id_member`, `username`, `password`, `email`, \n`nama_lengkap`, `jenis_kelamin`, `alamat`) VALUES \n108 (4, 'member1', 'c7764cfed23c5ca3bb393308a0da2306' , 'member1@gmail.com', 'member1', 'L', '-'); \n113 -- Struktur dari tabel `tbl_penyakit` - \n116 CREATE TABLE IF NOT EXISTS `tbl_penyakit` ( \n117 \n`kd_penyakit` char(3) NOT NULL, \n118 \n`nama_penyakit` varchar(250) NOT NULL, \n119 \n`keterangan` text NOT NULL, \n120 \n`gambar` varchar(255) NOT NULL, \n121 \nPRIMARY KEY (`kd_penyakit`) \n122 ) ENGINE=MyISAM DEFAULT \nCHARSET=latin1;  \n125 -- Dumping data untuk tabel `tbl_penyakit`  \n128 INSERT INTO `tbl_penyakit` (`kd_penyakit`, `nama_penyakit`, `keterangan`, \n`gambar`) VALUES \n129 ('D01', 'Example Drought 1', '-', '1.jpg'), \n130 ('D02', 'Example Drought 2', '-', '2.jpg'), \n131 ('D03', 'Example Drought 3', '-', '3.jpg');  \n136 -- Struktur dari tabel `tbl_responsed`  \n138 \n139 CREATE TABLE IF NOT EXISTS `tbl_responsed` ( \n140 \n`kd_rule_fc` char(3) NOT NULL \n141 ) ENGINE=MyISAM DEFAULT \nCHARSET=latin1;  \n144 -- Dumping data untuk tabel `tbl_responsed`  \n147 INSERT INTO `tbl_responsed` (`kd_rule_fc`) VALUES 148 ('R01'), \n\n254 \n \n149 ('R02'); \n154 -- Struktur dari tabel `tbl_rule_cf` \n \n \n157 CREATE TABLE IF NOT EXISTS `tbl_rule_cf` ( \n158 \n`id_rule_cf` int(5) NOT NULL AUTO_INCREMENT, \n159 \n`id_admin` int(5) NOT NULL, \n160 \n`kd_penyakit` char(3) NOT NULL, \n161 \n`kd_gejala` char(3) NOT NULL, \n162 \n`nilai_cf` varchar(20) NOT NULL, \n163 \nPRIMARY KEY (`id_rule_cf`) \n164 ) ENGINE=MyISAM DEFAULT CHARSET=latin1 \nAUTO_INCREMENT=27 ;  \n167 -- Dumping data untuk tabel `tbl_rule_cf` - \n170 INSERT INTO `tbl_rule_cf` (`id_rule_cf`, `id_admin`, `kd_penyakit`, \n`kd_gejala`, `nilai_cf`) VALUES 171 \n(26, 0, 'D03', 'I03', '0.3'), \n172 (25, 0, 'D02', 'I01', '0.1'), \n173 (24, 0, 'D01', 'I02', '0.3'), \n174 (23, 0, 'D01', 'I01', '0.2'); \n175 \n179 -- Struktur dari tabel `tbl_rule_fc`   \n182 CREATE TABLE IF NOT EXISTS `tbl_rule_fc` ( \n183 \n`kd_rule_fc` char(3) NOT NULL, \n184 \n`kd_gejala` char(3) NOT NULL, \n185 \n`jika_ya` char(3) NOT NULL, \n186 \n`jika_tidak` char(3) NOT NULL, \n187 \n`id_admin` int(5) NOT NULL, \n188 \nPRIMARY KEY (`kd_rule_fc`) \n189 ) ENGINE=MyISAM DEFAULT \nCHARSET=latin1;  \n192 -- Dumping data untuk tabel `tbl_rule_fc`   \n195 INSERT INTO `tbl_rule_fc` (`kd_rule_fc`, `kd_gejala`, `jika_ya`, \n`jika_tidak`, `id_admin`) VALUES 196 \n('R03', 'I03', 'D03', '0', 0), \n197 ('R02', 'I02', 'D01', 'D02', 0), \n198 ('R01', 'I01', 'R02', 'R03', 0); \n203 -- Struktur dari tabel `tbl_skala`  \n \n206 CREATE TABLE IF NOT EXISTS `tbl_skala` ( \n207 \n`id_skala` int(5) NOT NULL AUTO_INCREMENT, \n208 \n`skala` varchar(30) NOT NULL, \n209 \n`bobot` varchar(10) NOT NULL, \n210 \nPRIMARY KEY (`id_skala`) \n211 ) ENGINE=InnoDB DEFAULT CHARSET=latin1 \nAUTO_INCREMENT=6 ;  \n214 -- Dumping data untuk tabel `tbl_skala`  \n217 INSERT INTO `tbl_skala` (`id_skala`, `skala`, `bobot`) VALUES 218 (2, 'Often', \n'0.4'), \n219 (3, 'Sometimes', '0.3'), \n220 (4, 'Rarely', '0.2'), \n\n255 \n \n221 (5, ' Very rare', '0.1'); \n226 -- Struktur dari tabel `tbl_tmp`  \n229 CREATE TABLE IF NOT EXISTS `tbl_tmp` ( \n230 \n`logic` char(3) NOT NULL \n231 ) ENGINE=MyISAM DEFAULT \nCHARSET=latin1;  \n234 -- Dumping data untuk tabel `tbl_tmp`   \n237 INSERT INTO `tbl_tmp` (`logic`) VALUES 238 \n('D01'); \n243 -- Struktur dari tabel `tbl_tmp_cf`  \n246 CREATE TABLE IF NOT EXISTS `tbl_tmp_cf` ( \n247 \n`id_tmp_cf` int(5) NOT NULL AUTO_INCREMENT, \n248 \n`kd_gejala` char(3) NOT NULL, \n249 \n`id_skala` int(5) NOT NULL, \n250 \nPRIMARY KEY (`id_tmp_cf`) \n251 ) ENGINE=InnoDB DEFAULT CHARSET=latin1 \nAUTO_INCREMENT=1 ;  \n254 -- Dumping data untuk tabel `tbl_tmp_cf`  \n258 /*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */ ; \n \n \n259 /*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */ ; \n260 /*!40101 SET \nCOLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */ ; 261 \n\n256 \n \nAPPENDIX F \n \n \n\n257 \n \nAPPENDIX G \n1. FOR historical precipitation dataset \na. IF dataset is Filesystem WHERE file format is .xslv \nb. READ file (.xlsx) \nc. CREATE Table “HistoricalPrecipitation” \nd. SAVE file (.xlsx) to Table “HistoricalPrecipitation” \n2. FOR Sum_Precipitation = SUM (PrecipitationSensors) \na. CREATE Table “Sum_Precipitation” \nb. SAVE “Sum_Precipitation” to Table “Sum_Precipitation” \n3. FOR EP=  (Sum_Precipitation)⁄(Time Frame) \na. CREATE Table “EP” \nb. SAVE “EP” values to Table “EP” \n4. FOR MEP = Mean (HistoricalPrecipitation) \na. CREATE Table “MEP” \nb. SAVE “MEP” values to Table “MEP” \n5. FOR DEP = EP - MEP \na. CREATE Table “DEP” \nb. SAVE “DEP” values to Table “DEP” \n6. FOR SD(DEP) = Standard deviation (DEP) \na. CREATE Table “SD(DEP)” \nb. SAVE “SD(DEP)” values to Table “SD(DEP)” \n7. FOR EDI=  DEP⁄(SD(DEP)) \na. CREATE Table “EDI” \nb. SAVE “EDI” values to Table “EDI”",
    "pdf_filename": "Development of Semantics-Based Distributed Middleware for Heterogeneous Data Integration and its Application for Drought.pdf"
}