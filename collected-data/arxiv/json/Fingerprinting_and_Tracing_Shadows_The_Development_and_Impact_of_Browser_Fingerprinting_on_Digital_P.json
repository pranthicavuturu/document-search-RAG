{
    "title": "Fingerprinting and Tracing Shadows: The Development and Impact of Browser",
    "abstract": "identifyingandtrackingusersonlinewithouttraditionalmethods browserfingerprintingandits privacyimplications.In Section like cookies. This paper gives an overview by examining the II, the theoretical background explains how fingerprinting various fingerprinting techniques and analyzes the entropy and worksand its legalchallenges. Section III outlinestechniques uniqueness of the collected data. The analysis highlights that browser fingerprinting poses a complex challenge from both like HTTPHeaders, Canvas,and WebGL Fingerprinting.Sec- technicalandprivacyperspectives,asusersoftenhavenocontrol tion IV examines the impact of fingerprinting on privacy and over the collection and use of their data. In addition, it raises theregulatorylandscape.SectionVconcludeswithasummary significant privacy concerns as users are often tracked without of the findings, emphasizing the need for stronger privacy their knowledge or consent. measures and further research on countermeasures.",
    "body": "Fingerprinting and Tracing Shadows: The Development and Impact of Browser\nFingerprinting on Digital Privacy\nAlexander Lawall\nIU International University of Applied Science\nErfurt, Thu¨ringen, Germany\nalexander.lawall@iu.org\nAbstract—Browser fingerprinting is a growing technique for The paper is structured as follows: Section I introduces\nidentifyingandtrackingusersonlinewithouttraditionalmethods browserfingerprintingandits privacyimplications.In Section\nlike cookies. This paper gives an overview by examining the\nII, the theoretical background explains how fingerprinting\nvarious fingerprinting techniques and analyzes the entropy and\nworksand its legalchallenges. Section III outlinestechniques\nuniqueness of the collected data. The analysis highlights that\nbrowser fingerprinting poses a complex challenge from both like HTTPHeaders, Canvas,and WebGL Fingerprinting.Sec-\ntechnicalandprivacyperspectives,asusersoftenhavenocontrol tion IV examines the impact of fingerprinting on privacy and\nover the collection and use of their data. In addition, it raises theregulatorylandscape.SectionVconcludeswithasummary\nsignificant privacy concerns as users are often tracked without\nof the findings, emphasizing the need for stronger privacy\ntheir knowledge or consent.\nmeasures and further research on countermeasures.\nKeywords-browser fingerprinting; device fingerprinting; track-\ning; privacy.\nII. THEORETICALBACKGROUND\nI. INTRODUCTION A. Fingerprinting\nIn the increasingly digitized world, the issues of online Browser fingerprinting refers to collecting characteristic\nprivacyanddata securityare becomingmorecomplex.Partic- information that the browser directly or indirectly reveals\nularlyintracking—monitoringusersandtheirdevicesacross about itself. Often used to track users, this technology has\ndifferent web servers — browser fingerprinting has emerged alsofoundapplicationsinITsecurity,suchasfrauddetection.\nas an effective technique for creating detailed user profiles. Unlike tracking methods like cookies, browser fingerprinting\nUnlike the storage of informationvia cookies, which requires doesnotrequirestoringdata on the user’s computer,allowing\nexplicit user consent as mandated by the European General the process to occur secretly and without consent [1, p. 1].\nDataProtectionRegulations(GDPR)guidelines,fingerprinting Consequently, creating a new identity, similar to deleting\ndoes not require such consent. A browser fingerprint can be cookies, is not easily achievable, and GDPR privacy laws\ngeneratedin the backgroundwithoutany obvioussigns to the oftenprovidelittleprotection.Unlikecookietracking,browser\nenduser,leavingthemunawareofwhetherandtowhatextent fingerprinting is not explicitly mentioned in the GDPR. It\nthey are being tracked. should fall under the collection of identifiable information\nIt is possible to manipulate a device locally to alter its fin- but website operators frequently claim “legitimate interest”,\ngerprint.Thisisoftennotfeasibleforallusers,unlikedeleting enabling such data collection without the user’s consent [2].\ncookies. This invisible threat is not apparent to the general Active transmission of data is not required for browser\npublic and raises significant privacy concerns, as individuals fingerprinting, as loading a webpage can transmit various\ncan be tracked unnoticed. These profiles can contain private pieces of information, such as the user’s preferred language,\ninformation,dependingon the server operators,including age within the HTTP headers. This passive data collection pro-\ngroup,ethnicorigin,socialcircles,andinterestsoftheaffected vides only a limited amount of information, so it is often\nperson. supplemented with active data collection methods. An active\nBrowser fingerprinting poses a threat to the privacy of the approach typically employs JavaScript to interface with the\ngeneralpublic. Contraryto being a threat,it is an opportunity browser and gather information, such as screen resolution,\nto provide valuable information to enhance the authentication installed add-ons, and graphics card data, merging them into\nmechanisms. Both perspectives are explored throughout this a unique fingerprint [3, pp. 1, 3].\npaper. The focus will be on the various techniques of finger- Similar to human fingerprints, browser fingerprinting relies\nprinting to understandhow accurate and detailed user profiles on the uniqueness of browser characteristics, which typically\ncan be created. The main research questions that this paper do not change significantly with regular use. This allows for\nseeks to answer are: accurate user identification over extended periods [3, p. 2].\nRQ1 “What methods are used in browser fingerprinting and However, not all collected data points are equally unique or\nwhat user data are collected in the process?” stable,necessitatingcarefulselectionofinformationtoachieve\nRQ2 “How has the development of browser fingerprinting as accurate results. The fingerprinting algorithm combines both\na user identification method influenced user privacy and passively and actively collected data into a unique string.\ndata protection in the digital space?” Depending on the operator’s goals, adjustments can be made;\n4202\nvoN\n81\n]RC.sc[\n1v54021.1142:viXra\nforinstance,usingcookies,thefingerprintmightbelessstable weigh their effectiveness and potential risks. Given the ever-\nbutmoreunique,whiletrackinguserswithoutcookiesrequires increasing number of techniques, only the most commonly\nhigh stability [4, pp. 1-5]. Eckersley’s study showed that used, established, or novel methods will be presented here.\nparticipantbrowsersalreadyhadhighentropy,indicatingmany\nA. HTTP Header Attributes\nunique characteristics sufficient for accurate fingerprinting,\nthough not stable enough for long-term accuracy. In recent 1) Definition and Basics: The HTTP request header is a\nyears, potential entropy has increased with new techniques part of every HTTP request exchangedbetween a client (web\nlike HTML Canvas, WebGL-based hardware fingerprints, au- browser) and a server, transmitting various functional and\ndio API fingerprints, plug-in-based fingerprints, and methods compatibility-related information [10]. Although individual\nutilizing mouse movements or differences in HTML parsing attributes are notunique,they can be combinedto distinguish\nbetween browsers, making cross-browser user identification a client. This explanationis based on HTTP version 1.1, with\npossible [3, pp. 4-5]. HTTP/2 maintaining most attributes within a modified header\nframe [11].\nB. Concerns for Digital Privacy\n2) Analysis: HTTP request headers include attributes that\nHistorically,thegreatestthreattoonlinetrackingwasposed differ by browser and version. Effective fingerprinting re-\nby cookies, along with other technologies like Flash cookies, quires selecting attributes that remain consistent over time.\nwhich have lost significance in recent years. Changes by ReliablefieldsincludeUser-Agent,Accept,Content-Encoding,\nbrowsermanufacturers,suchasMozilla,whichrenderedmany and Content-Language, which provide valuable identification\nexploited technologies, so-called “super-cookies”, ineffective information [4, p. 5] [12, p. 880]. The User-Agent, despite\n[5], and additional browsers planning to block or eliminate lacking standardization, offers high uniqueness due to its\nthird-party cookies in the coming years [6], have shifted the detailed browser and OS information [13].\nlandscape.FollowingtheGDPR,theuseofnon-essentialcook- 3) Advantages: The main advantage of using HTTP head-\nies has been further restricted and standardized for the first ers is their passive information collection, which occurs\ntime, defining how users share their data through cookies [7]. automatically with each request. This method is efficient,\nIn contrast, browser fingerprinting occurs in the background unobtrusive,andcompatiblewithmostwebservers,processing\nandleavesnostoredinformationontheuser’scomputer.Thus, data on the server side without a noticeable impact on the\nthe use of fingerprints not only circumvents previous issues client.\nrelated to local storage, such as privacy laws and technical 4) Disadvantages: HTTP header information is limited,\nlimitationsbutalso persistsevenwhenlocaldatais deletedor as most attributes provide minimal details. The User-Agent,\nwhen incognito mode is used. whileinformative,canbeeasilyalteredbybrowserextensions,\nA2021studyoftheAlexaTop100,000websitesfoundthat reducingits reliability(i.e.User-AgentSwitcher forChrome).\nnearly 10% of the sites used scripts to generate fingerprints Furthermore, using such technologies without consent can\n[8, pp. 11-12]. Comparing this to a similar 2014 study, violate GDPR regulations, necessitating legal review before\nwhich recorded 5.5% of the top 100,000 sites using canvas implementation [14].\nfingerprintingscripts,revealsanalmostdoublingofusageover\nB. Enumeration of Browser Plugins\nseven years [9]. This suggests a shift towards online tracking\nusing this technology, which is much harder to detect and 1) Definition and Basics: Browser plugins, whether pre-\nprevent compared to cookies. The creation of a fingerprint is installed or user-added, have been a method for recognizing\nimperceptible to the user, with no simple way to effectively systems, along with font detection. Most browser features are\nchangeor delete their fingerprint.Cookie bannersgive a false indirectly modified, except for extensions. The demand for\nsense of security while tracking continues in the background accurateenumerationoftheseextensionsishigh[12,pp.878-\nwithout consent. 880].\nThus, browser fingerprinting poses an active threat to pri- 2) Analysis: Many information-rich plugins, like Flash,\nvacy, as users often have no control over the collection and have disappeared over the years. Since 2016, most browsers,\nuse of their data. This stands in opposition to many current including Firefox, no longer support the Netscape Plugin\ndata protection principles, such as the GDPR. Application ProgrammingInterface (NPAPI) plugin interface,\nleading to the navigator.plugins object in modern browsers\nIII. METHODSOF BROWSER FINGERPRINTING\nshowing only standard plugins like PDF viewers [15]. This\nIn the context of browser fingerprinting techniques, the limitation reduces the impact of plugins on fingerprinting but\nmethods of data collection are varied and comprehensive. stillallowsdifferentiationbetweensystemsandbrowsers.The\nTherefore, specific properties and criteria are used to select direct detection of user-installed add-ons is not possible, lim-\ntechniques. The following sections will encompass the ex- iting the data’s significance [12, pp. 886-887]. However, new\nplanation of the techniques in terms of their functionality methods to enumerate extensions have emerged. Chromium-\nand their applications will be discussed to provide a detailed basedbrowserscanaccessextensionsettingsviaalocalURL.\nunderstandingoftheir use. An evaluationbasedon theadvan- A GitHub project exploits this to check for over 1,000 exten-\ntages and disadvantages of each technique is also included to sions by requesting internal resourcesand checkingthe status\ncodes [16]. Additionally, ad blockers’ behavior in removing be monitored and manipulated by extensions. Add-ons like\nunwanted content can be detected by creating elements they CanvasBlockerallow users to preventdata retrievalor manip-\ntypically block and checking for changes, revealing active ulate Canvas data, continuously generating new fingerprints\nblocklists [17]. Another method involves reading the status to prevent identification [19]. Finally, while implementing\nof handler protocols to identify installed programslike Skype Canvas fingerprinting is “relatively simple”, analyzing and\nand Zoom. interpretingthedatacanbecomplexandmayrequireexpertise\n3) Advantages: User-installedextensionsofferhighunique- in the field [1, pp. 6-8].\nness and stability due to the number of extensions.\nD. WebGL Fingerprinting\n4) Disadvantages: Insights into users’ privacy, including\nsensitiveinformationlikehealthconditions,religion,andpolit- 1) Definition and Basics: WebGL fingerprinting is a tech-\nical views, can be inferred[18, pp. 11-12].The fingerprinting niqueutilizing the WebGL JavaScriptAPI, based on OpenGL\nprocess relies on limited methods, making it prone to errors, ES 2.0, allowing web applications to render both 2D and\nand requires continuous updates to maintain reliability. 3D graphics with high performance by directly accessing the\nGPU[20].UnlikeCanvasfingerprinting,whichfocuseson2D\nC. Canvas Fingerprinting\ngraphics and identifies software differences mainly through\n1) Definition and Basics: Canvas fingerprinting involves fonts and graphic libraries, WebGL fingerprinting provides\ngeneratingadigitalfingerprintusingtheCanvaselementintro- deeper and more precise detection capabilities. It captures\nducedin HTML5.ItutilizestheCanvasAPI to drawa hidden unique hardware information, particularly details about the\n2D graphic in the background. Variations in how different graphics processor, distinguishing it significantly from Can-\nbrowsers and devices handle this image due to differences vas fingerprinting and broadening its application for tracking\nin hardware acceleration,installed fonts, and graphic libraries purposes [1, p. 4].\nresult in a highly stable and unique fingerprint [1, pp. 1-3]. 2) Analysis: WebGL fingerprinting uses a Canvas ele-\n2) Analysis: A script embedded in a webpage adds an ment to access the API. Similar to Canvas fingerprinting,\ninvisible Canvas element that draws a predetermined 2D it creates an invisible element performing 3D operations\ngraphic in the background. Text can also be drawn using the in the background to collect data without user interac-\nCanvas context, employingvarious fonts and sizes. WebFonts tion. A straightforward application involves accessing spe-\nenable dynamic loading of fonts from the internet, allowing cific variables, such as UNMASKED VENDOR WEBGL and\nspecific fonts to be chosen to test for uniqueness in font UNMASKED RENDERER WEBGL, using the getParameter\nrendering. The resulting image data can be extracted using function in the WebGL context. These variables provide in-\nfunctions like getImageData and toDataURL, which can then formationaboutthe graphicshardwaremanufacturer(Vendor)\nbe hashed to form a fingerprint, typically using a hashing and model (Renderer). For example, a Vendor entry like\nalgorithm. This hash is sent via a web request to a server “Intel” indicates an integrated graphics unit, while “Nvidia”\nfor processing and storage. Besides storing the fingerprint combined with “GeForce GTX 970” as Renderer indicates a\nfor later identification, another application method involves dedicatedgraphicscard. These details can revealinsights into\ncomparingthefingerprintwithanextensivedatabaseofknown the system being used [21, p. 17]. Privacy concerns have led\nfingerprintsandcorrespondingsystemconfigurations,enabling browsers like Apple’s WebKit to provide generic information\nreliable system profiling [1, pp. 2-4]. instead of specific data to protect user privacy. Since 2020,\n3) Advantages: Mowery and Shacham demonstrated that WebKit has masked Vendor and Renderer information, as\nimplementing Canvas fingerprinting is straightforward, re- wellasshadinglanguagedetails[22].Firefoxsimilarlygroups\nquiring minimal lines of client-side code. It leverages basic graphicsprocessormodelsintocategoriesinsteadofdisplaying\nJavaScript functions and can be deployed across all major specific models. In practice, this means that a Nvidia card\nweb applications. The fingerprinting process is discrete for from the 900 series onward, for example, is reported as\nusers and challengingto block because Canvas operationsare “GeForceGTX980”.Insummary,researchinvestigatinghard-\ncommoninwebapplications,makingitdifficulttodistinguish warefingerprintingusingHTML5demonstratedthecapability\nnormal operations from fingerprinting scripts. The simplicity to identify devices based on GPU performance.It utilizes the\nof fingerprint creation enables high speed, stability, unique- graphicsprocessor’sclockfrequencyandclockskewtorender\nness,andentropy,makingitparticularlyvaluableforreal-time complex 3D graphics, measuring GPU performance based on\ntracking applications [1, pp. 1-5]. the number of frames rendered within a period, providing\n4) Disadvantages: Changesin browserenvironments,such insights into the GPU’s frequency and core count [23, pp.\nas updates or graphic settings, can affect the stability of the 3-4].\nfingerprint.Variabilityinhardwareandsoftwareconfigurations 3) Advantages: AsdemonstratedbyCaoetal.,WebGLcan\ncan lead to inconsistencies. As an active technique, executing offer high uniqueness and stability [24]. Its direct interface\ncode on the client side is necessary, posing risks of detection with the system ensures consistency across browsers, making\nand potential blockage by blocklists targeting known finger- it challenging for users to evade identification through simple\nprinting scripts [1, pp. 3-7]. While imperceptible to users, browser changes or reinstalls. Despite changes to enhance\nthe limited interfaces to retrieve generated Canvas data can WebGL’s resistance to fingerprinting, it reliably identifies\nusers. The successor to WebGL, WebGPU, is currently in QueirozandFeitosashowedthatmobiledevicesusingFirefox\ndevelopment, promising even more privacy risks due to its could be consistently recognized and grouped by their stable\ncloser hardware access, allowing for classifications with up fingerprints [27, p. 1119]. Techniques like DC are simple\nto 98% accuracy in 150 milliseconds, a reduction from the 8 to implement and offer high stability. Other promising tech-\nseconds WebGL took [25]. niques,especiallywhenusedtogether,couldenhancepotential\n4) Disadvantages: The complexity of WebGL fingerprint- but are more challenging to implement [28, pp. 1-3].\ning is significantly higher compared to previous techniques, 4) Disadvantages: While audio fingerprinting offers high\nnecessitating careful consideration whether a simpler Canvas stability, it lacks uniqueness and accuracy on its own and\napproach combined with other methods might be accurate should be used with other fingerprinting techniques [27, p.\nenough for specific use cases. Intensive tasks in a 3D envi- 1119]. Additionally, the Web Audio API can be disabled on\nronment can also strain the target system, leading to longer devices or manipulated by add-ons like “Canvas Blocker”,\nfingerprint creation times [1, p. 4]. Implementing WebGL which also blocks and manipulates Canvas and WebGL.\nrequires caution, as shown by the cases of Laperdrix et al.\nF. Font Fingerprinting\nand Cao et al., and opting for a ready-made solution might\nbeadvisable.Moreover,WebGL sharesCanvas’svulnerability 1) Definition and Basics: Font fingerprinting is a browser\nto blocked or misread data if detection methods rely on fingerprintingtechnique that identifies devices by recognizing\ndifferences in rendered graphics. Even novel methods like installedfonts.Thismethodcreatesuniquedigitalfingerprints\nDrawnApart can be mitigated through countermeasures, such by combiningfontswith other data points, whichcan be used\nas limiting to a single EU [26, p. 12]. WebGL may also for tracking and identification purposes [29, p. 314].\nnot be available or disabled on some devices, necessitating 2) Analysis: After the end of Adobe Flash, a new method\nconsideration of alternatives, such as using the 2D Canvas. for font recognition was needed. JavaScript uses a fallback\nmechanism to recognize fonts by comparing the dimensions\nE. Audio Fingerprinting\nof texts in specific fonts with expected values. Invisible div\n1) Definition and Basics: The Web Audio API is a elementsand the canvaselementare used to identify installed\nJavaScriptinterfaceforprocessingandsynthesizingaudiosig- fonts [29, p. 311] [30, p. 12]. The experimental Local Font\nnals in the web browsers, partof the HTML5 standard. It can AccessAPI requiresuserconsentandisthereforenotsuitable\nidentify systems through manufacturing differences in audio for fingerprinting [31].\nhardware. Methods analyze signal processing characteristics, 3) Advantages: Font recognition offers high entropy and\nhardware differences, and system responses to specific audio stability since fonts are rarely changed. This allows the\nsignals for fingerprinting [27, pp. 1107-1109]. identification of the operating system and installed software\n2) Analysis: Audiofingerprintinginvolvesvariousacoustic packages like Office or Photoshop [3, p. 7].\nmeasurementstocreateauniquedevicefingerprint.Itrequires 4) Disadvantages: Without Flash, font recognition is done\nanAudioContextlinkinganAudioBuffer,Oscillator,andCom- through“brute-force”methods,reducingaccuracyifunknown\npressor. The AudioBuffer represents a small audio segment, fonts are installed. Similar fonts can lead to false positives.\nwhile the Oscillator generates a waveform at a defined fre- Extensionsandadjustments,suchasthoseinApple’sWebKit,\nquency. The Compressor manipulates the audio signal. The can manipulateor restrictrecognition[24, p. 10] [29, p. 311].\nunique waveform generated and manipulated reflects system\nG. Screen Fingerprinting\ncharacteristics, allowing a unique fingerprint to be created\nusing a hash function on the final waveform. This method, 1) Definition and Basics: Screen fingerprinting identifies\nknown as “Dynamic Compressor (DC)”, is highly stable, a device by analyzing various screen-related characteristics,\nproducing the same fingerprintfor the user each time using a including screen resolution, pixel depth, color depth, and\nreliable hash function [27, pp. 1109-1111]. browser window size. This method leverages the uniqueness\nAnothermethodisthe“FastFourierTransform”(FFT),con- ofscreenconfigurationsandbrowsermodifications,whichcan\nverting audio signals from the time domain to the frequency create rare resolution combinations [32, p. 20].\ndomain. It measures hardware implementation differences to 2) Analysis: JavaScript provides attributes for screen and\nidentify characteristics. FFT is less stable than DC, often browserwindowcharacteristicsthroughthewindow.screenob-\nrequiringmultipleattemptsforconsistentresults.DCandFFT ject, offeringdetailslike colordepth(colorDepth),screen ori-\nare often used together for more reliable outcomes [27, pp. entation (screenOrientation), and screen dimensions (screen-\n1111-1114]. Researchers compared the techniques, including Height, screenWidth). Values, such as window.innerWidth and\ncustom-designedones,alongsideDCandFFT.Theseincluded window.innerHeight, determine the browser window’s inner\ncreating “Custom Signals”, “Merged Signals”, and analyzing area, which can be altered by toolbars or bookmark bars [24,\ngenerated AM and FM waves. All techniques showed good p. 3].\nstability,averagingtwo tofourattemptsforfingerprintmatch- 3) Advantages: Screen and window resolution information\ning [28, pp. 3-5]. typically have high entropy, making them useful for stabiliz-\n3) Advantages: The generated fingerprints are highly sta- ing fingerprints when combined with other techniques. This\nble and can differentiate systems based on their properties. method is particularly effective for distinguishing between\ndesktop, tablet, and mobile devices, as these have distinct used to enhance the presentation of HTML elements. Over\nresolutionsandaspectratioscomparedtostandardizeddesktop time, the CSS specification has expanded to include selectors\nscreens [27, p. 277]. and filters, enabling limited dynamic selections, which this\n4) Disadvantages: Since values are derived from browser technique leverages [36, p. 10].\nattributes rather than hardware tests, they can be limited or 2) Analysis: Until2010,the:visited selectorcouldidentify\naltered by extensions or privacy settings. Browsers like TOR if a website had been visited by changing the link color,\nset the window to a fixed size of 1000x1000pixels, reducing detectable via JavaScript. After this was patched, researchers\nuniqueness, and browsers like Firefox always report a color explored time-based methods to read user history, but these\ndepth of 24. Additionally, users with multiple monitors or required JavaScript and were impractical [37, p. 4]. In 2015,\nthose using zoom functions can affect the accuracy of screen Takei et al. introduced a JavaScript-free method using CSS\nfingerprinting, as there is no reliable way to determine the properties and multiple @media queries to fetch URLs based\nzoom factor directly, which reduces entropy [24, p. 10]. ondefinedrules.Theservercouldthenidentifysystemproper-\nties like screen dimensions, resolution, touchscreen presence,\nH. WebRTC Fingerprinting\ninstalledfonts,browser,andOSfromtherequestingIPaddress\n1) Definition and Basics: WebRTC is a standard and ac- and URL parameters [38, p. 3-5]. A current GitHub project\ncessible JavaScript interface available in most browsers. It demonstrates this method’s practical capabilities [39].\nfacilitates real-time communication over stateless HTTP by 3) Advantages: CSS fingerprinting’s independence from\nestablishing direct connectionsbetween participants, allowing JavaScriptallows it to identify even cautioususers who block\nthe extraction of local network adapter information. This can JavaScriptoruseextensionslikeNoScript.Thistechniquecan\nreveal private and public IP addresses, which can be used for even detect if JavaScript is disabled via noscript tags [38, p.\nfingerprintingoridentifyingusersbehindproxiesorVPNs[30, 2].Duetoitslimiteduseandlesser-knownstatus,noeffective\np. 12]. It also provides information about connected devices, user solutions currently exist to prevent it.\nsuch as microphones, webcams, and speakers.\n4) Disadvantages: Takei et al.’s method provides limited\n2) Analysis: Unlikeotherbrowsermechanismslikecamera\ndata, which,withoutJavaScript, can only be supplementedby\nor microphone access, establishing a WebRTC connection\ntechniques like header analysis. Oliver Brotchie notes in his\nrequiresnopermissionsorusernotifications.Afterconnecting\nprojectrepositorythat the methodis notcurrentlyscalable, as\nto the target computer via a Session Traversal Utilities for\neachrequestrequiresover1MBofCSSfilestobedownloaded.\nNAT (STUN) server, IP addresses can be read from the\nHowever, he warns that upcoming CSS Values 4 implemen-\nRTCPeerConnectionobjectasiceCandidates[33,p.667].This\ntation could reduce download sizes significantly, making the\ndata can be used for fingerprinting, and WebRTC can further\nmethodmorepractical.Additionally,fontrecognitionrelieson\nenumerate the local network to build a unique profile of\nbrute-forcing, which can be noticeable in network traffic.\nthe target’s environment. It can also read all local adapter\naddresses, including those for VPNs and virtual machines\nJ. Additional JavaScript Attributes\n[33, p. 667-668]. The DetectRTC project [34] demonstrates\nWebRTC’s capabilities, highlightinginformationaboutmicro- 1) Definition and Basics: Most of the previously dis-\nphones, webcams, and speakers. While exact device names cussed techniques actively use JavaScript to extract infor-\nrequire permissions, WebRTC can read Media Device IDs, mation from various interfaces. Additional possibilities are\nwhich can contribute to unique fingerprints. briefly mentioned here to provide a more comprehensive\n3) Advantages: Extracting private and public IPs provides picture.Sincethesetechniquessharemanycharacteristicswith\ndeep insights, especially for identifying targets behind VPNs other JavaScript-based methods, listing their pros and cons is\nor proxies. No other technique can silently reveal addresses omitted.\nbehind Network Address Translation (NAT) [35, p. 273]. The 2) Analysis: The navigator object in browsers provides\ncollecteddataishighlyunique;a studywith 80devicesfound information, such as DoNotTrack status, user agent details,\nover 97% uniqueness using only WebRTC [33, p. 668]. platform,languages,cookiesusage,grantedandavailableper-\n4) Disadvantages: WebRTCmightbedisabledinthetarget missions, and time zone [29, p. 9]. JavaScript implementation\nbrowser, or extensions might block its usage without user varies between browsers and versions, and Mowery et al.\nconsent. Accessing Media Device IDs requires permission, demonstrated that these differences are measurable and can\nalerting users to potential background activities, making it indicate the software and hardware used [1].\nunsuitableforstealthoperations.Additionally,WebRTCrelies Additionally, there are differences in the availability and\non STUN servers, either self-hosted or third-party, adding execution of functions, which offers an alternative way to\ndependency considerations for its use. detect user agents if manipulated by extensions. Another\ntechnique that caused concern among Tor users is the use of\nI. CSS Fingerprinting\nthe getClientRects function to obtain precise DOM element\n1) Definition and Basics: Different to the active finger- data,evenwithCanvasdisabled.Thesefactorscanvarybased\nprinting techniques using JavaScript, CSS fingerprinting is onimplementation,fontsizes,andscreenresolutions,enabling\na passive method. CSS is a stylesheet language primarily identification in the otherwise anonymous browser [40]. This\nvulnerability has been fixed in Tor but remains exploitable in insightsintotheperson’sbehaviorbehindthescreen.However,\nother browsers [41]. thetechniqueisstillinitsinitialstageandremainsatheoretical\n3) Advantages: JavaScript-based fingerprinting techniques approach not yet tested in the real world. It is unlikely to be\nare highly versatile and widely applicable since JavaScript reliably used by actors in the near future [42, p. 6].\nis essential for web functionality. These methods can collect\na broad range of information, such as user agent details,\nIV. DISCUSSION\ntime zones, and system settings, often without requiring user Browser fingerprinting can be used positively for security,\nconsent or visibility. The stealthy nature of JavaScript fin- as shown by technologies like BrFast and private, passive\ngerprinting allows it to operate in the background, making user recognition methods. However, there’s a risk of misuse,\nit difficult for users to detect. Moreover, JavaScript-based especiallyinadvertising.Personalizedadssignificantlyimpact\nattributesworkconsistentlyacrossdifferentbrowsers,enabling GenerationZ, who discoverproductsprimarilythroughsocial\neffective cross-browser tracking. media. The advertising industry, driven by creating accurate\n4) Disadvantages: However, JavaScript fingerprinting is user profiles, heavily invests in digital advertising, with data-\nlimited bybrowser-specificimplementations,whichcan result driven ads accounting for 60-70% of digital ad revenue in\nin inconsistent data collection. Privacy-focused browsers like Germany. Traditionally, data collection relied on cookies, but\nToror extensions,suchas NoScript,activelyblockorobscure users developed ways to avoid tracking, such as deleting\nJavaScript-basedtracking,reducingitseffectiveness.Addition- cookies or using incognito mode. Unlike cookies, browser\nally, users are becoming more aware of privacy risks and in- fingerprintsare collectedin the backgroundandare noteasily\ncreasinglyusetoolstodisableormodifyJavaScriptfunctions. altered. GDPR regulations mandate user consent for data\nFinally, updates to browsers may close vulnerabilities or alter collection, but enforcement is inconsistent, and compliance\nfeatures that JavaScript fingerprintingrelies on, decreasing its with fingerprintingguidelinesremainsunclear,even with new\nlong-term viability. laws like Germany’s TTDSG [45].\nOnline tracking is ubiquitous, affecting nearly all user\nK. Advanced Techniques Using Machine Learning\ngroups. A 2016 study of the top 1 million websites revealed\n1) DefinitionandBasics: Mostactivetechniquesdiscussed extensive tracking, with services like Google and Facebook\nso far use JavaScript to gather hardware and software in- present on over 10% of sites. Post-GDPR, fingerprinting\nformation. They rely on unique data combinations based scriptsincreasedto68.8%ofthetop10,000sites.Astudywith\non implementation quirks or directly available information. 234 participants found that demographics like age, gender,\nNewermethodsoftenemploy“side-channels”,capturingaddi- education, IT background, and privacy awareness influenced\ntionaldata byobservingbehavioraldifferencesduringvarious trackability, with men and those with higher education being\noperations within the execution environment. Methods like lesstrackable.Despiteunderstandingfingerprinting,manypar-\nplugin enumeration(cf. Section III-B), fontfingerprinting(cf. ticipants believed they could protect themselves from it. The\nSection III-F), and CSS fingerprinting (cf. Section III-I) use AmIUnique study, with over 100,000 fingerprints, indicated\nthis approachin simple formsby testing known combinations a bias towards more privacy-aware internet users. Current\nto gain indirect information. These side-channel methods can researchfromFriedrich-Alexander-Universityshowsthatmost\nbe implemented with minimal effort but can also be used studyparticipantsare maleand well-educated,suggestingthat\nin more sophisticated ways with machine learning to gather while almost everyone is affected by browser fingerprinting,\notherwise unobtainable information [42, p. 1]. only a small, informed group actively researches and under-\n2) Analysis: Wangetal.exploredusingcacheusage,mem- stands it [46].\nory consumption, and CPU activity to identify visited web- Browser fingerprinting, as explored through various meth-\nsites. Previously, CSS selectors were used to reveal browsing ods in this paper (cf. Table I), represents a comprehensive\nhistory,posing significantprivacyrisks and leading to prompt and evolving threat to digital privacy. Each fingerprinting\nfixes. Side-channel techniques employ various tricks to ana- technique,fromHTTPHeaderAttributestomoresophisticated\nlyze system behavior more accurately. Complex calculations approaches like Canvas and WebGL Fingerprinting, offers\nstress the hardware in the background, and machine learning unique data points, but their power lies in their combinatorial\nmodelscategorizetheresultswithexpectedvaluesfromknown use. While individual methods may not be highly unique or\nsites. Tests showed 80-90% accuracy in identifying websites stable, their integration enables more persistent and accurate\n[42, p. 3-5]. Further research is needed, but implementations user identification across devices and browsers. Techniques\nusing WebAssembly [43] and the Performance API [44] are like WebRTC and FontFingerprintingcomplementtraditional\nconceivable. methodsby exposingadditionallayersof system and network\n3) Advantages: This method is invisible to the user and data. Furthermore, the advancement of machine learning-\nprovides insightful information not available through conven- based fingerprinting is pushing the boundaries of tracking,\ntional means. Currently,there are no methodsto protect users allowing for the analysis of side-channel behaviors, such as\nfrom such techniques [42, pp. 1-3]. CPU or memory usage. This convergence of methods creates\n4) Disadvantages: While previous techniques aimed to apowerful,multi-dimensionalprofilingsystemthatisincreas-\nidentify a user over time, this method could offer dangerous ingly resistant to countermeasures, challenging both privacy\nTABLEI\nOVERVIEWOFFINGERPRINTINGMETHODS\nFingerprinting Method Uniqueness Stability Entropy Impact on User Privacy Defense Techniques\nModerateimpact:limiteddetailbut\nHTTP Header Altering or masking headers (e.g.,\nLow Moderate Low useful when combined with other\nAttributes randomizing User-Agent).\nmethods.\nEnumerationofBrowser Highimpact:revealssensitivedata, Disabling plugin enumeration,\nModerate High High\nPlugins suchasinstalled plugins. avoidingunnecessary add-ons.\nHighimpact:generates uniquefin- CanvasBlocker extension to block\nCanvas Fingerprinting High Moderate High\ngerprints basedonrendering. ormanipulate rendering.\nHigh impact: collects detailed Block or manipulate WebGL out-\nWebGLFingerprinting High High High\nhardware datafortracking. puts.\nHighimpact:capturesuniqueaudio Disable Web Audio API, use pri-\nAudioFingerprinting Moderate High Moderate\nprocessing details. vacyextensions.\nHigh impact: identifies installed Limit font access with privacy-\nFontFingerprinting High High Moderate\nfonts,makingitpersistent. focusedbrowsers(e.g.,Tor).\nModerate impact: uses screen res-\nFixwindowsizeorlimitresolution\nScreen Fingerprinting Moderate High Low olution and window size but less\nreporting withprivacy browsers.\neffective onmobiledevices.\nVery high impact: exposes real IP Disable WebRTC, use extensions\nWebRTCFingerprinting VeryHigh High VeryHigh\naddresses, evenbehindVPNs. thatblockdatacollection.\nLow impact: provides limited sys- LimitordisableCSSfingerprinting\nCSSFingerprinting Low Moderate Low\ntemandstyleinformation. throughextensions orscripts.\nModerate impact: uses various Disable unnecessary JavaScript\nJavaScript Attributes Moderate High Moderate\nbrowserfeatures fortracking. functionsoruseprivacyextensions.\nVery high impact: uses side- Limit access to Performance API\nAdvanced Machine\nVeryHigh VeryHigh VeryHigh channel data(e.g.,CPU/cache) for and WebAssembly, emerging de-\nLearning Fingerprinting\ntracking. fensesneeded.\nframeworks and user efforts to remain anonymous online. fornewssites, whichoftenmisusecollecteddatawithoutuser\nTherefore, the future of browser fingerprinting lies in this consent.\nsynergistic exploitation of both passive and active methods, Blending in with the Masses: Reducing APIs and data\nmaking it a critical issue in the broader context of digital sourcesforfingerprintingcanironicallymakeusersmoreiden-\nsurveillance and privacy regulation. tifiable [47]. Thus, widely adopted browsers and protection\nmechanisms should be used to stay less conspicuous.\nV. CONCLUSION BrowserChoice:Choosebrowserswithrobustprivacypro-\nA. Summary of the Research Outcome tections. On iOS, Safari is recommended due to its advanced\ntracking protection and large user base [48]. For Android,\nThis contribution has examined browser fingerprinting, a\nthe Mull browser is highly rated for fingerprintingprotection,\ngrowingtechniqueinonlinetracking.Ithasdemonstratedthat\nwhile Brave is a good, widely-used alternative. On desktops,\nbrowserfingerprintingisasophisticatedmethodforidentifying\nBrave,Librewolf,andMullvadbrowsersarerecommendedfor\nand tracking users online without traditional methods like\ntheir privacy features and user bases [49].\ncookies.\nBrowser Extensions: Limit the use of browser extensions,\nThe analysis highlighted that browser fingerprinting poses\nastheycanbecomesourcesofuniqueinformation.Whilesome\na complex challenge from both technical and privacy per-\nextensionsblockknowntrackersormodifyAPIoutputs,these\nspectives. While it provides companies and advertisers with\nprotectionsareoftenalreadybuiltintorecommendedbrowsers\ndetailed insights into user behavior for targeted advertising, it\nlike Brave and Librewolf [18] [47].\nraises significant privacy concerns as users are often tracked\nwithout their knowledge or consent. Despite stricter privacy C. Future Research\nlawsliketheGDPRintheEU,browserfingerprintingremains Future research in browser fingerprinting should focus on\na grey area. Anti-fingerprinting techniques are limited and several key areas. First, countermeasures and defense mech-\ncontinually evolving to keep up with new tracking methods. anisms need to be explored further, especially in mitigating\nIn conclusion, browser fingerprinting plays and will con- the newer techniques that leverage machine learning and\ntinue to play a significant role in the digital landscape. side-channel attacks. These advanced methods can bypass\nBoth users and regulatory bodies must increase awareness of traditional privacy safeguards, such as disabling JavaScript or\nbrowser fingerprinting practices and their implications. using incognito modes, making the development of more ro-\nbust anti-fingerprinting technologies imperative. Additionally,\nB. Implications for Practice\nresearch should explore the ethics and regulatory frameworks\nConsent and Cookies: Always accept only the necessary surrounding fingerprinting, examining how existing privacy\ncookiesincookiebannersandregularlydeletecookiestohin- and data protection laws like GDPR can be adapted to better\nder tracking and fingerprinting. This is particularly important address fingerprinting practices. Another promising direction\nis improving cross-device tracking prevention by understand- [20] “WebGL: 2D and 3D graphics for the web,” accessed: 2024-09-27.\ning how fingerprinting works across different platforms and [Online]. Available: https://developer.mozilla.org/en-US/docs/Web/API/\nWebGL API\nhardware.Lastly,investigatinguserawarenessandeducational\n[21] T.Stephenson, “AComparative StudyonAnalyses ofBrowserFinger-\ntoolsonfingerprintprivacyriskswillhelpempowerthegeneral printing,” Ph.D.dissertation, WesleyanUniversity, 2023.\npublicto protecttheirdigitalidentitiesmoreeffectively.Thus, [22] “WebKit,” accessed: 2024-09-27. [Online].\nAvailable: https://github.com/WebKit/WebKit/commit/\nfuture research should focus on developing more effective\nae710d34c23858295b385e3f95ad7f6edd29f9d7\nprivacy techniques to balance commercial interests and user [23] G. Nakibly, G. Shelef, and S. Yudilevich, “Hardware Fingerprinting\nprivacy rights. UsingHTML5,”arXivpreprintarXiv:1503.01408, 032015.\n[24] Y. Cao, S. Li, and E. Wijmans, “(Cross-)Browser Fingerprinting via\nREFERENCES OSand Hardware Level Features,” inNetwork andDistributed System\nSecurity Symposium,2017.\n[1] K. Mowery and H. Shacham, “Pixel perfect: Fingerprinting canvas in [25] M. Mantel. (2022) Browser-Fingerprinting: PCs, Smartphones & Co.\nHTML5,”Proceedings ofW2SP,vol.2012,2012. lassen sich u¨ber die GPU tracken. Accessed: 2024-09-27. [Online].\n[2] K. Szymielewicz and B. Budington. (2018) The GDPR Available: https://www.heise.de/news/Browser-Fingerprinting-PCs-\nand Browser Fingerprinting: How It Changes the Game for Smartphones-Co-lassen-sich-ueber-die-GPU-tracken-6345233.html\nthe Sneakiest Web Trackers. Accessed: 2024-09-27. [Online]. [26] Laor et al., “DRAWNAPART: A Device Identification Technique\nAvailable: https://www.eff.org/de/deeplinks/2018/06/gdpr-and-browser- based on Remote GPU Fingerprinting,” ArXiv, vol. abs/2201.09956,\nfingerprinting-how-it-changes-game-sneakiest-web-trackers 2022. [Online]. Available: https://api.semanticscholar.org/CorpusID:\n[3] D. Zhang, J. Zhang, Y. Bu, B. Chen, C. Sun, and T. Wang, “A 246276013\nSurvey of Browser Fingerprint Research and Application,” Wireless [27] J. S. Queiroz and E. L. Feitosa, “A Web Browser Fingerprinting\nCommunications andMobile Computing, vol.2022,no.1,p.3363335, Method Based on the Web Audio API,” Comput. J., vol. 62, pp.\n2022. [Online]. Available: https://onlinelibrary.wiley.com/doi/abs/10. 1106–1120, 2019. [Online]. Available: https://api.semanticscholar.org/\n1155/2022/3363335 CorpusID:86644316\n[4] P.Eckersley,“Howuniqueisyourwebbrowser?”inPrivacyEnhancing [28] S.ChaliseandP.Vadrevu,“AStudyofFeasibilityandDiversityofWeb\nTechnologies,M.J.AtallahandN.J.Hopper,Eds. Berlin,Heidelberg: AudioFingerprints,” arXivpreprintarXiv:2107.14201, 2021.\nSpringerBerlinHeidelberg, 2010,pp.1–18. [29] A. Go´mez-Boix, P. Laperdrix, and B. Baudry, “Hiding in the Crowd:\n[5] S. Englehardt and A. Edelstein. (2021) Firefox 85 Cracks Down on an Analysis of the Effectiveness of Browser Fingerprinting at Large\nSupercookies. Accessed: 2024-09-27. [Online]. Available: https://blog. Scale,” in Proceedings of the 2018 World Wide Web Conference, ser.\nmozilla.org/security/2021/01/26/supercookie-protections/ WWW ’18. Republic and Canton of Geneva, CHE: International\n[6] E. Woollacott. (2021) Browser fingerprinting more prevalent on the WorldWide WebConferences Steering Committee, 2018, p. 309–318.\nweb now than ever before. Accessed: 2024-09-27. [Online]. Avail- [Online]. Available: https://doi.org/10.1145/3178876.3186097\nable: https://portswigger.net/daily-swig/browser-fingerprinting-more- [30] S. Englehardt and A. Narayanan, “Online Tracking: A 1-million-site\nprevalent-on-the-web-now-than-ever-before-research MeasurementandAnalysis,”inProceedings ofthe2016ACMSIGSAC\n[7] R. Koch. (2019) Cookies, the GDPR, and the ePrivacy Directive. Conference onComputer and Communications Security, ser. CCS ’16.\nAccessed: 2024-09-27.[Online]. Available: https://gdpr.eu/cookies/ New York, NY, USA: Association for Computing Machinery, 2016,\n[8] U.Iqbal,S.Englehardt, andZ.Shafiq,“Fingerprinting theFingerprint- p. 1388–1401. [Online]. Available: https://doi.org/10.1145/2976749.\ners: Learning to Detect Browser Fingerprinting Behaviors,” in 2021 2978313\nIEEE Symposium on Security and Privacy (SP). IEEE,05 2021, pp. [31] “Local Font Access API,” accessed: 2024-09-27. [Online]. Avail-\n1143–1161. able: https://developer.mozilla.org/en-US/docs/Web/API/Local Font\n[9] G. Acar. (2014) Browser Fingerprinting and the Online- Access API\nTracking Arms Race. Accessed: 2024-09-27. [Online]. Avail- [32] P. Laperdrix, N. Bielova, B. Baudry, and G. Avoine, “Browser\nable: https://www.esat.kuleuven.be/cosic/news/the-web-never-forgets- Fingerprinting: A Survey,” ACMTrans. Web, vol. 14, no. 2, apr 2020.\npersistent-tracking-mechanisms-in-the-wild/ [Online]. Available: https://doi.org/10.1145/3386040\n[10] “Request header,” accessed: 2024-09-27. [Online]. Available: https:// [33] A. Reiter and A. Marsalek, “WebRTC: your privacy is at risk,” in\ndeveloper.mozilla.org/en-US/docs/Glossary/Request header Proceedings of the Symposium on Applied Computing, ser. SAC ’17.\n[11] “HTTP/2 fingerprinting: A relatively-unknown method for web New York, NY, USA:Association forComputing Machinery, 2017, p.\nfingerprinting,” accessed: 2024-09-27. [Online]. Available: https:// 664–669.[Online]. Available: https://doi.org/10.1145/3019612.3019844\nlwthiker.com/networks/2022/06/17/http2-fingerprinting.html [34] “DetectRTC,” accessed: 2024-09-27.[Online].Available: https://github.\n[12] P. Laperdrix, W. Rudametkin, and B. Baudry, “Beauty and the Beast: com/muaz-khan/DetectRTC\nDivertingModernWebBrowserstoBuildUniqueBrowserFingerprints,” [35] V.BernardoandD.Domingos,“Web-basedFingerprintingTechniques,”\nin2016IEEESymposiumonSecurityandPrivacy(SP),2016,pp.878– in Proceedings of the 13th International Joint Conference on\n894. E-Business and Telecommunications, ser. ICETE 2016. Setubal,\n[13] “User-Agent,” accessed: 2024-09-27. [Online]. Available: https:// PRT: SCITEPRESS - Science and Technology Publications, Lda,\ndeveloper.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent 2016, p. 271–282. [Online]. Available: https://doi.org/10.5220/\n[14] B. Wolford. (2024) What are the GDPR consent requirements? 0005965602710282\nAccessed: 2024-09-27. [Online]. Available: https://gdpr.eu/gdpr- [36] T. Bujlow, V. Carela-Espan˜ol, J. Sole´-Pareta, and P. Barlet-Ros, “A\nconsent-requirements/ Survey on Web Tracking: Mechanisms, Implications, and Defenses,”\n[15] “Navigator: plugins property,” accessed: 2024-09-27. [On- Proceedings oftheIEEE,vol.105,no.8,pp.1476–1510,2017.\nline]. Available: https://developer.mozilla.org/en-US/docs/Web/API/ [37] L. Olejnik, C. Castelluccia, and A. Janc, “Why Johnny Can’t Browse\nNavigator/plugins inPeace: OntheUniqueness ofWebBrowsingHistory Patterns,” 12th\n[16] “ExtensionDetector,”accessed:2024-09-27.[Online].Available:https:// Privacy Enhancing Technologies Symposium (PETS 2012), 07 2012.\ngithub.com/z0ccc/extension-detector [Online]. Available: https://petsymposium.org/2012/papers/hotpets12-4-\n[17] “How ad blockers can be used for browser fingerprinting,” johnny.pdf\naccessed: 2024-09-27. [Online]. Available: https://fingerprint.com/ [38] N. Takei, T. Saito, K. Takasu, and T. Yamada, “Web Browser Finger-\nblog/ad-blocker-fingerprinting/ printingUsingOnlyCascadingStyleSheets,”in201510thInternational\n[18] S.Karami, P.Ilia, K.Solomos, and J.Polakis, “Carnus: Exploring the ConferenceonBroadbandandWirelessComputing,Communicationand\nPrivacy Threats of Browser Extension Fingerprinting,” in 27th Annual Applications (BWCCA),2015,pp.57–63.\nNetworkandDistributed SystemSecurity Symposium,NDSS2020,San [39] “CSS-Fingerprint,” accessed: 2024-09-27. [Online]. Available: https://\nDiego, California, USA,February 23-26, 2020. TheInternet Society, github.com/OliverBrotchie/CSS-Fingerprint\n2020. [40] “Advanced Tor Browser Fingerprinting,” accessed: 2024-09-\n[19] “CanvasBlocker,” accessed: 2024-09-27. [Online]. Available: https:// 27. [Online]. Available: http://jcarlosnorte.com/security/2016/03/06/\ngithub.com/kkapsner/CanvasBlocker advanced-tor-browser-fingerprinting.html\n[41] “Investigate impact of fingerprinting via getClientRects(),” accessed:\n2024-09-27. [Online]. Available: https://gitlab.torproject.org/tpo/\napplications/tor-browser/-/issues/18500\n[42] H. Wang, H. Sayadi, A. Sasan, P. D. Sai Manoj, S. Rafatirad, and\nH.Homayoun,“MachineLearning-AssistedWebsiteFingerprinting At-\ntacks with Side-Channel Information: A Comprehensive Analysis and\nCharacterization,” in 2021 22nd International Symposium on Quality\nElectronic Design(ISQED),2021,pp.79–84.\n[43] “WebAssembly,” accessed: 2024-09-27. [Online]. Available: https://\ndeveloper.mozilla.org/en-US/docs/WebAssembly\n[44] “High precision timing,” accessed: 2024-09-27. [Online]. Avail-\nable: https://developer.mozilla.org/en-US/docs/Web/API/Performance\nAPI/High precision timing\n[45] “BrowserFingerprintingunddasTDDDG:Erlaubtodernicht?[Browser\nFingerprinting andtheTDDDG:Allowedornot?],”accessed:2024-09-\n27.[Online]. Available: https://dr-dsgvo.de/browser-fingerprinting-und-\ndas-ttdsg/\n[46] G. Pugliese, C. Riess, F. Gassmann, and Z. Benenson, “Long-Term\nObservation on Browser Fingerprinting: Users’ Trackability and Per-\nspective,” Proceedings on Privacy Enhancing Technologies, vol. 2020,\npp.558–577, 052020.\n[47] N. Al-Fannah and C. Mitchell, “Too little too late: can we control\nbrowser fingerprinting?” Journal of Intellectual Capital, vol. ahead-of-\nprint, 012020.\n[48] K. Kollnig, A. Shuba, M. Van Kleek, R. Binns, and N. Shadbolt,\n“Goodbye Tracking? Impact of iOS App Tracking Transparency and\nPrivacy Labels,” in Proceedings of the 2022 ACM Conference on\nFairness, Accountability, and Transparency, ser. FAccT ’22. New\nYork, NY, USA: Association for Computing Machinery, 2022, p.\n508–520. [Online].Available: https://doi.org/10.1145/3531146.3533116\n[49] X. Lin, F. Araujo, T. Taylor, J. Jang, and J. Polakis, “Fashion Faux\nPas: Implicit Stylistic Fingerprints for Bypassing Browsers’ Anti-\nFingerprinting Defenses,” in 2023 IEEE Symposium on Security and\nPrivacy(SP),2023,pp.987–1004.",
    "pdf_filename": "Fingerprinting_and_Tracing_Shadows_The_Development_and_Impact_of_Browser_Fingerprinting_on_Digital_P.pdf"
}