{
    "title": "TSPRank Bridging Pairwise and Listwise Methods with a Bilinear Travelling Salesman Model",
    "abstract": "Traditional Learning-To-Rank (LETOR) approaches, including pair- wise methods like RankNet and LambdaMART, often fall short by solely focusing on pairwise comparisons, leading to sub-optimal global rankings. Conversely, deep learning based listwise methods, while aiming to optimise entire lists, require complex tuning and yield only marginal improvements over robust pairwise models. To overcome these limitations, we introduce Travelling Salesman Prob- lem Rank (TSPRank), a hybrid pairwise-listwise ranking method. TSPRank reframes the ranking problem as a Travelling Salesman Problem (TSP), a well-known combinatorial optimisation challenge that has been extensively studied for its numerous solution algo- rithms and applications. This approach enables the modelling of pairwise relationships and leverages combinatorial optimisation to determine the listwise ranking. This approach can be directly integrated as an additional component into embeddings gener- ated by existing backbone models to enhance ranking performance. Our extensive experiments across three backbone models on di- verse tasks, including stock ranking, information retrieval, and historical events ordering, demonstrate that TSPRank significantly outperforms both pure pairwise and listwise methods. Our qualita- tive analysis reveals that TSPRank’s main advantage over existing methods is its ability to harness global information better while ranking. TSPRank’s robustness and superior performance across different domains highlight its potential as a versatile and effective LETOR solution. The code and preprocessed data are available at https://github.com/waylonli/TSPRank-KDD2025. CCS CONCEPTS • Information systems →Learning to rank. Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than the republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org. KDD ’25, August 3–7, 2025, Toronto, Canada © 2025 Copyright held by the owner/author(s). Publication rights licensed to ACM. ACM ISBN 978-1-4503-XXXX-X/18/06 https://doi.org/XXXXXXX.XXXXXXX",
    "body": "TSPRank: Bridging Pairwise and Listwise Methods with a Bilinear\nTravelling Salesman Model\nWeixian Waylon Li\nUniversity of Edinburgh\nUnited Kingdom\nwaylon.li@ed.ac.uk\nYftah Ziser\nNvidia Research\nIsrael\nyziser@nvidia.com\nYifei Xie\nUniversity of Edinburgh\nUnited Kingdom\nyifei.xie@ed.ac.uk\nShay B. Cohen\nUniversity of Edinburgh\nUnited Kingdom\nscohen@inf.ed.ac.uk\nTiejun Ma\nUniversity of Edinburgh\nUnited Kingdom\ntiejun.ma@ed.ac.uk\nABSTRACT\nTraditional Learning-To-Rank (LETOR) approaches, including pair-\nwise methods like RankNet and LambdaMART, often fall short by\nsolely focusing on pairwise comparisons, leading to sub-optimal\nglobal rankings. Conversely, deep learning based listwise methods,\nwhile aiming to optimise entire lists, require complex tuning and\nyield only marginal improvements over robust pairwise models. To\novercome these limitations, we introduce Travelling Salesman Prob-\nlem Rank (TSPRank), a hybrid pairwise-listwise ranking method.\nTSPRank reframes the ranking problem as a Travelling Salesman\nProblem (TSP), a well-known combinatorial optimisation challenge\nthat has been extensively studied for its numerous solution algo-\nrithms and applications. This approach enables the modelling of\npairwise relationships and leverages combinatorial optimisation\nto determine the listwise ranking. This approach can be directly\nintegrated as an additional component into embeddings gener-\nated by existing backbone models to enhance ranking performance.\nOur extensive experiments across three backbone models on di-\nverse tasks, including stock ranking, information retrieval, and\nhistorical events ordering, demonstrate that TSPRank significantly\noutperforms both pure pairwise and listwise methods. Our qualita-\ntive analysis reveals that TSPRank’s main advantage over existing\nmethods is its ability to harness global information better while\nranking. TSPRank’s robustness and superior performance across\ndifferent domains highlight its potential as a versatile and effective\nLETOR solution. The code and preprocessed data are available at\nhttps://github.com/waylonli/TSPRank-KDD2025.\nCCS CONCEPTS\n• Information systems →Learning to rank.\nPermission to make digital or hard copies of all or part of this work for personal or\nclassroom use is granted without fee provided that copies are not made or distributed\nfor profit or commercial advantage and that copies bear this notice and the full citation\non the first page. Copyrights for components of this work owned by others than the\nauthor(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or\nrepublish, to post on servers or to redistribute to lists, requires prior specific permission\nand/or a fee. Request permissions from permissions@acm.org.\nKDD ’25, August 3–7, 2025, Toronto, Canada\n© 2025 Copyright held by the owner/author(s). Publication rights licensed to ACM.\nACM ISBN 978-1-4503-XXXX-X/18/06\nhttps://doi.org/XXXXXXX.XXXXXXX\nKEYWORDS\nlearning-to-rank, pairwise-listwise ranking, travelling salesman\nproblem\nACM Reference Format:\nWeixian Waylon Li, Yftah Ziser, Yifei Xie, Shay B. Cohen, and Tiejun\nMa. 2025. TSPRank: Bridging Pairwise and Listwise Methods with a Bi-\nlinear Travelling Salesman Model. In Proceedings of the 31th ACM SIGKDD\nConference on Knowledge Discovery and Data Mining (KDD ’25), August\n3–7, 2025, Toronto, Canada. ACM, New York, NY, USA, 23 pages. https:\n//doi.org/XXXXXXX.XXXXXXX\n1\nINTRODUCTION\nLearning to Rank (LETOR) algorithms have become essential in\napplications such as recommendation systems [16, 30, 36], question\nanswering [10, 15, 27], and information retrieval [2, 9, 34]. These\nalgorithms aim to order a list of ranking entities based on their\nfeatures, optimising for the most relevant or preferred entities to\nappear at the top. Recently, LETOR methods have also expanded\ninto other domains, such as stock and portfolio selection [45, 50]\nand textual ordering [46, 49]. Despite these broader applications of\nLETOR, latest fundamental work on LETOR still primarily focused\non incorporating click data into ranking models and addressing\nbiases introduced by user feedback [20, 21, 33, 54], concentrating on\nretrieval and recommendation tasks. Limited research has explored\ngeneral ranking methods across diverse tasks and domains.\nOver the past decade, research on LETOR models mainly focuses\non pairwise and listwise approaches, while pointwise methods often\nfail to capture the intricate inter-entity relationships that are essen-\ntial for accurate ranking. Pairwise methods, such as LambdaMART\nand RankNet [6], primarily optimise for pairwise comparisons with-\nout a holistic view of the entire ranking list, potentially leading to\nsub-optimal global rankings. Listwise methods optimise the ranking\nof entire lists directly rather than individuals or pairs. This category\nincludes advanced neural network architectures, particularly adap-\ntations of the Transformer architecture [47], such as Rankformer\n[9] and SetRank [34]. However, existing work shows that deep\nlearning-based listwise models require complex tuning to achieve\nmarginal gains over robust pairwise models like LambdaMART\non information retrieval benchmarks [39]. Therefore, pairwise and\nlistwise methods each have inherent drawbacks and more effective\nsolutions for LETOR have not been exhaustively explored.\narXiv:2411.12064v1  [cs.AI]  18 Nov 2024\n\nKDD ’25, August 3–7, 2025, Toronto, Canada\nWeixian Waylon Li, Yftah Ziser, Yifei Xie, Shay B. Cohen, and Tiejun Ma\nRecently, GNNRank successfully used directed graph neural net-\nworks to learn listwise rankings from pairwise comparisons [23].\nAlthough their method is not applicable to general LETOR prob-\nlems, as it requires pre-known pairwise relationships like the out-\ncomes of sports matches, it still suggests a potential approach for\nLETOR by representing pairwise comparisons as a graph. Inspired\nby Abend et al., who used combinatorial optimisation techniques to\nrecover the lexical order of recipe pieces [1], we propose Travelling\nSalesman Problem Rank (TSPRank). This hybrid pairwise-listwise\nmethod reframes the ranking problem as a Travelling Salesman\nProblem (TSP), an NP-hard combinatorial optimisation challenge\nthat seeks the optimal sequence of node visits to minimise total\ntravel cost. In a ranking context, TSPRank aims to find the optimal\npermutation of ranking entities to maximise the ranking score.\nOur main contribution, TSPRank, bridges the gap between pair-\nwise and listwise ranking models through combinatorial optimisa-\ntion, demonstrating strong robustness across diverse ranking prob-\nlems. TSPRank simplifies the complex listwise ranking problem\ninto easier pairwise comparisons, thus overcoming the challenges\nof directly learning listwise rankings in complex data and tasks.\nIt also enhances pairwise methods by incorporating listwise opti-\nmisation through a TSP solver. To improve ranking performance,\nTSPRank can be applied directly as an additional component on em-\nbeddings generated from domain-specific backbone models. To our\nknowledge, it is the first LETOR model to frame the ranking prob-\nlem as a combinatorial optimisation plus graph representation task.\nWe demonstrate its superior performance across three backbone\nmodels on diverse ranking tasks: stock ranking, information re-\ntrieval, and historical events ordering, covering both numerical and\ntextual data across multiple domains. We introduce two learning\nmethods for TSPRank: a local method using a pre-defined ground\ntruth adjacency matrix without the TSP solver during training and\na global end-to-end method that includes the solver in the training\nloop for better model-inference alignment. Our empirical analysis\nvisualises the predictions and graph connections to provide insights\ninto TSPRank’s effectiveness. We demonstrate that the TSP solver\nenhances the model’s ability to harness global information during\nranking and increases tolerance to errors in pairwise comparisons.\nAdditionally, we assess inference latency caused by the combinato-\nrial optimisation solver and suggest potential solutions to mitigate\nthis overhead.\n2\nBACKGROUND\nLETOR algorithms aim to rank entities based on their features. In\nLETOR, we denote a list of 𝑁ranking entities as e, containing\n{e1, e2, . . . , e𝑁}, with each e𝑖∈R𝑑where 𝑑represents the dimen-\nsionality of the feature space. A scoring function 𝑠: R𝑑→R is\napplied on the entities, which are then ranked in descending or-\nder of the 𝑠(e𝑖) scores. LETOR algorithms are broadly categorised\ninto pointwise, pairwise, and listwise approaches based on their\noptimisation strategies. Pointwise methods treat ranking as a re-\ngression problem, comparing scores 𝑠(e𝑖) to labels 𝑦𝑖. Models such\nas OPRF [19], TreeBoost [18], and RankSVM [44], including newer\nimplementations like RankCNN [43], are known for their compu-\ntational efficiency but may not capture inter-entity relationships\nadequately.\nPairwise methods focus on the relative comparisons of entity\npairs, assessing scores (𝑠(e𝑖),𝑠(e𝑗)) against binary labels𝑦𝑖𝑗, which\ndenote if entity e𝑖should be ranked higher than e𝑗. Methods in\nthis category include RankNet [8], LambdaRank [7], and Lamb-\ndaMART [6]. Listwise methods directly compute scores based on\nthe features of all entities in a list. These methods aim to optimise\na listwise objective, comparing the entire set of computed scores\n𝑠(e) ∈R𝑁against a complete set of labels y ∈R𝑁. To advance this\napproach, Ai et al. introduced the Deep Listwise Context Model\n(DLCM) [2]. This model was further refined into general multi-\nvariate scoring functions in [3]. Considering that a list of entities\ncan be viewed as a sequence, methodologies from Natural Lan-\nguage Processing (NLP) are applicable to ranking tasks. Notably,\nthe Transformer architecture [47], has been adapted to address\nlistwise ranking challenges, referred to as listwise Transformers in\nrecent work [9, 31, 34–36, 55].\nAlthough listwise ranking methods, primarily neural rankers,\nhave demonstrated their advantages in web search reranking tasks\n[2, 34], Qin et al. conducted a comprehensive evaluation compar-\ning listwise neural rankers to the gradient-boosted-decision-tree\n(GBDT)-based pairwise LambdaMART [6, 39]. The results indicated\nthat LambdaMART consistently outperforms listwise rankers across\nthree widely used information retrieval datasets. Furthermore, it\nwas observed that listwise rankers require substantial efforts to\nachieve only marginal improvements over LambdaMART. Conse-\nquently, it is evident that listwise ranking models are not universally\napplicable solutions and generally lack the robustness needed for\nbroader deployment. This conclusion has also been further vali-\ndated by Buyl et al. [9].\n3\nTSPRANK\nDirectly predicting the listwise order is challenging, as correctly\nranking 𝑁entities from 1 to 𝑁is complex. However, breaking\nit down into 𝑁× 𝑁pairwise comparisons simplifies the task, as\neach pairwise comparison is more straightforward than the entire\nlistwise ranking. However, a fundamental drawback of pairwise\nranking, as highlighted by Cao et al. [11], is that the learning ob-\njectives do not focus on minimising the listwise ranking errors.\nTo address this gap and rethink the approach of pairwise ranking,\nwe introduce TSPRank, a novel methodology for position-based\nranking problems. This approach integrates listwise optimisation\ninto pairwise comparisons by modelling ranking tasks as TSP. No-\ntably, TSPRank can be applied as an additional component with\nembeddings generated from domain-specific backbone models to\nachieve improved ranking performance.\n3.1\nRanking As Travelling Salesman Problem\nWe model the ranking problem as an open-loop Travelling Sales-\nman Problem (TSP). Given a set of entities e1, e2, . . . , e𝑁and all the\npairwise score values 𝑠(e𝑖, e𝑗) indicating the gain of ranking entity\ne𝑗immediately after e𝑖, we define a complete graph 𝐺= (𝑉,𝑊),\nwhere 𝑉represents the entities and 𝑊represents the pairwise\nscores between every two entities. Each entity e𝑖in the ranking\nproblem corresponds to a city in the TSP. By mapping entities to\ncities and pairwise scores to weights, we can formulate the ranking\n\nTSPRank: Bridging Pairwise and Listwise Methods with a Bilinear Travelling Salesman Model\nKDD ’25, August 3–7, 2025, Toronto, Canada\nproblem as a TSP to find the optimal permutation 𝜋. Thus, the ob-\njective is to find an optimal open-loop tour 𝜋∗of the entities defined\nin Equation 1 such that the total pairwise score is maximised.\n𝜋∗= argmax\n𝜋\n𝑁−1\n∑︁\n𝑖=1\n𝑠(e𝜋(𝑖), e𝜋(𝑖+1)).\n(1)\nThe next step is developing a scoring function that accurately\nmodels the pairwise relationships between the ranking entities,\nthereby effectively determining the scores.\n3.2\nScoring Model\nThe scoring model takes a set of ranking entities or their corre-\nsponding embeddings {e1, e2, . . . , e𝑁}, where each e𝑖∈R𝑑and 𝑑is\nthe dimension of the features or embeddings. It outputs an 𝑁× 𝑁\nweighted adjacency matrix 𝐴that represents the pairwise scores of\nevery two entities. The scoring model comprises an optional node\nencoder and a trainable bilinear model on top.\nEncoder. The default encoder used is the Transformer encoder\nblock [47], but it can be replaced with any other encoder suited\nto the specific task and dataset. Additionally, using an encoder is\noptional if sufficiently robust backbone models are available.\nTrainable Bilinear Model. Given a pair of encoded representations\nof entities (e𝑖, e𝑗), the bilinear model computes the pairwise score\nusing the following bilinear form:\n𝑠(e𝑖, e𝑗) = e⊺\n𝑖We𝑗+ 𝑏,\n(2)\nwhere W and 𝑏are learnable parameters that can be optimised\nalong with the encoder parameters.\nThe adjacency matrix 𝐴is constructed as follows:\n𝐴𝑖𝑗= 𝑠(e𝑖, e𝑗), for all 𝑖, 𝑗∈{1, . . . , 𝑁},\n(3)\nwhere each entry𝐴𝑖𝑗directly corresponds to the computed pairwise\ncomparison score from entity e𝑖to entity e𝑗.\n3.3\nInference\nInference of TSPRank, described in Equation 1, requires solving the\nopen-loop TSP, which is widely recognised as an NP-hard combi-\nnatorial optimisation problem. The solution algorithms of the TSP\nconsist of exact algorithms (brunch and bound [37]) and approxi-\nmation algorithms (ant colony optimisation [52]). Given the scale\nof the ranking problem and the desired ranking accuracy, we prefer\nto obtain an exact solution for the TSP rather than an approximate\none. Therefore, we formulate the TSP as a Mixed Integer Linear\nProgramming (MILP) problem [40], where the integer variables\nrepresent binary decisions on whether a path between two nodes\nis included in the optimal tour. We then use an MILP optimization\nsolver, such as CPLEX [14] or Gurobi [22], to find the exact optimal\nsolution.\nThe decision variables are defined as follows:\n𝑥𝑖𝑗=\n(\n1,\nif entity e𝑗is ranked immediately after e𝑖.\n0,\notherwise.\n(4)\nWe then apply the TSP optimisation problem defined in Appen-\ndix A to ensure the result is a single, complete ranking that includes\nall entities. This inference process effectively performs listwise op-\ntimisation, as it determines the optimal permutation of entities that\nmaximises the overall pairwise ranking score.\n4\nLEARNING\nWe introduce two distinct learning methodologies for the TSPRank\nmodel outlined in Section 3. The first method is a local approach,\nfocusing exclusively on individual pairwise comparisons during\nthe training phase. The second method is a global, end-to-end ap-\nproach, incorporating the Gurobi solver directly into the training\nprocess, thereby allowing the black-box MILP solver to influence\nthe learning dynamically. Figure 1 illustrates the complete pipeline\nof the two learning methods as well as the model architecture.\n4.1\nLocal Learning\nIn the local learning approach, the objective is to understand pair-\nwise consecutive relationships between nodes. The objective is to\ndetermine whether entity e𝑗should rank one position after e𝑖in a\ngiven pair of nodes. Therefore, the score 𝑠(e𝑖, e𝑗) is set high if e𝑗is\nsupposed to rank consecutively after e𝑖, and low otherwise.\nTo tailor the TSPRank model to ranking scenarios where penal-\nties vary based on the actual positions, we apply a weighted loss. We\ndenote the predicted adjacency matrix 𝐴𝑝from the bilinear model,\nwhere 𝑎𝑝\n𝑖𝑗∈𝐴𝑝represents the predicted pairwise scores. The target\nadjacency matrix 𝐴𝑡= {𝑎𝑡\n𝑖𝑗} is defined such that 𝑎𝑡\n𝑖𝑗∈𝐴𝑡equals\n1 if e𝑗ranks immediately after e𝑖, and 0 otherwise. We apply the\nweighted cross-entropy loss (defined in Equation 5) on each row\nto identify the next entity e𝜋(𝑖+1) to be ranked given e𝜋(𝑖). The\nmodel is trained as a multi-class classification problem, aiming to\nmaximise the probability of 𝑃(e𝜋(𝑖+1) | e𝜋(𝑖)). We weight the loss\nby the true ranking label 𝑦, allowing the penalty to vary according\nto different ranking positions. Additionally, 𝑦can be adjusted to\n𝑁+ 1 −𝑦depending on whether 𝑦represents ascending or descend-\ning order.\nL𝑙𝑜𝑐𝑎𝑙(𝐴𝑝,𝐴𝑡) = −\n𝑁\n∑︁\n𝑖=1\n𝑦𝑘log\n𝑒𝐴𝑝\n𝑖𝑘\nÍ𝑁\n𝑗=1 𝑒𝐴𝑝\n𝑖𝑗\n, 𝑘= arg max\n𝑗\n𝐴𝑡\n𝑖𝑗.\n(5)\n4.2\nGlobal Learning\nWe expect that a globally trained TSPRank model will further en-\nhance the performance as the local learning method focuses solely\non pairwise comparisons in isolation during training. Incorporating\nthe TSP solver in the training procedure will better align the model\nwith the inference process. Therefore, we introduce an end-to-end\napproach. After obtaining the predicted adjacency matrix 𝐴𝑝, de-\nfined in Section 4.1, we define the gold decision variable x𝑡= {𝑥𝑡\n𝑖𝑗},\nwhere 𝑥𝑡\n𝑖𝑗is defined as in Equation 4. We aim to train a model\nto satisfy the margin constraints (Equation 6) for all the possible\ndecision variables x by minimising the max-margin loss defined in\nEquation 7. When x = x𝑡, the predicted ranking perfectly aligns\nwith the gold ranking, resulting in a loss of zero.\n\nKDD ’25, August 3–7, 2025, Toronto, Canada\nWeixian Waylon Li, Yftah Ziser, Yifei Xie, Shay B. Cohen, and Tiejun Ma\nBilinear\nModel\nTransformer\nEncoder\n(Optional)\nAdjacency\nMatrix\nGlobal Learning\nGurobi\nTSP Solver\nGround Truth Decision Variable \nLocal Learning\nPredicted Matrix\nGround Truth Matrix\nBackbone Model\nAdd & Norm\nFeed Forward\nAdd & Norm\nMulti-Head\nAttention\nFigure 1: Illustration of TSPRank and the complete pipeline of local and global learning. The pipeline starts with a Transformer\nEncoder or any embeddings generated from another existing Backbone Model, followed by a Bilinear Model generating pairwise\nscores to form an Adjacency Matrix. Local learning compares the predicted matrix with the ground truth to calculate the local\nloss L𝑙𝑜𝑐𝑎𝑙. Global learning uses the max-margin loss L𝑔𝑙𝑜𝑏to incorporate the Gurobi TSP solver during training.\nx𝑡· 𝐴𝑝≥x · 𝐴𝑝+ Δ(x𝑡, x), for all x,\n(6)\nL𝑔𝑙𝑜𝑏(𝐴𝑝, x𝑡) = max(0, max\nx≠x𝑡[Δ(x, x𝑡) + x · 𝐴𝑝] −x𝑡· 𝐴𝑝)\n(7)\nThe structured score Δ(x, x𝑡), defined in Equation 8, aims to\nenforce a margin for each incorrectly identified edge.\nΔ(x, x𝑡) =\n𝑁\n∑︁\n𝑖=1\n𝑁\n∑︁\n𝑗=1\nmax(0,𝑥𝑖𝑗−𝑥𝑡\n𝑖𝑗).\n(8)\nThis approach eliminates the need to manually define the target\nadjacency matrix. Instead, it employs the output from the black-box\noptimiser to directly guide the updates of the model parameters.\nThis methodology not only simplifies the process but also ensures\na closer alignment with the solver’s procedural dynamics. To accel-\nerate convergence, we integrate a hybrid of local and global loss.\nRelying solely on the global loss requires significantly more epochs\nto converge. Therefore, during training, we alternate batches be-\ntween the global loss and the local loss, ensuring faster and more\nefficient model convergence.\n5\nEXPERIMENTAL SETUP\nWe evaluate TSPRank’s effectiveness as a prediction layer inte-\ngrated into various backbone models. Our goal is to demonstrate\nthat TSPRank enhances performance compared to the original back-\nbone and other general ranking algorithms across different domains.\nWhile achieving state-of-the-art (SOTA) performance still depends\non the backbone design, TSPRank serves as a component to im-\nprove ranking performance. We focus on scenarios where (i) the\ndata contain ordinal ranking labels rather than binary or relevance\nlevel labels, and (ii) the complete ranking or at least the top-k en-\ntities are important, extending the task’s interest beyond merely\nidentifying the top-1 entity. We test our method with three datasets\nand backbone models from diverse domains: stock ranking, infor-\nmation retrieval, and historical events ordering. These datasets\ncover various data modalities, including tabular and textual data.\nAll three tasks can be formulated as presented in Section 3.1. We\naim to answer the following research questions (RQs):\n• RQ1: Does the pairwise-listwise TSPRank outperform the cur-\nrent SOTA general pairwise and listwise ranking methods across\ndifferent backbone models and datasets?\n• RQ2: Does global learning lead to better performance?\n• RQ3: Does the pure pairwise method really consistently out-\nperform the deep learning based listwise method across different\ndomains?\n• RQ4: What are the advantages of hybrid pairwise-listwise TSPRank\nover other methods?\nThis section details the experimental setup for each task. All\nexperiments were conducted on a single Nvidia A100 80G GPU.\n5.1\nBenchmark Models\nWe benchmark our pairwise-listwise TSPRank model against the\noriginal backbone models (if they originally contain a prediction\nlayer), LambdaMART [6], and Rankformer [9], as LambdaMART\nis still considered the SOTA pairwise ranking method and Rank-\nformer is the SOTA deep learning-based listwise ranking method.\nThe benchmark models chosen include the best pure pairwise and\npure listwise methods, which is sufficient to demonstrate the effec-\ntiveness of our approach.\nIn practice, we replace the original prediction layer, which pre-\ndicts the ranking scores for each entity, with different benchmark\nmodels to evaluate the performance achieved by this modification.\n\nTSPRank: Bridging Pairwise and Listwise Methods with a Bilinear Travelling Salesman Model\nKDD ’25, August 3–7, 2025, Toronto, Canada\n5.2\nDatasets\nStock Ranking. The task of stock ranking focuses on accurately\npredicting and ranking stocks according to their anticipated future\nreturns ratio, which aids investors in selecting stocks for invest-\nment purposes [17, 41, 53]. We use the dataset1 introduced by Feng\net al. [17], which includes historical trading data from 2013 to 2017\nfor two significant markets, NASDAQ and NYSE, containing 1026\nand 1737 stocks, respectively. We maintain a consistent setting for\nsplitting the data into training, validation, and testing sets over a\n3-year, 1-year, and 1-year period.\nInformation Retrieval. Information retrieval is another critical\narea where ranking models are extensively applied. The task of\ninformation retrieval focuses on accurately ranking documents\nbased on their relevance to a given query, which is crucial for\nsearch engines. LambdaMART and Rankformer are both originally\nproposed for information retrieval task [6, 9]. We use the MQ2008-\nlist2 dataset from Microsoft LETOR4.0 [38], a popular benchmark\ndataset for LETOR algorithms. We acknowledge the existence of\nmore recent information retrieval datasets, but they only provide\nrelevance-level labels without ordinal ranking labels, making them\nunsuitable for our model evaluation.\nHistorical Events Ordering. In the final task, we include a textual\ndataset called “On This Day 2” (OTD2)3 for chronologically ordering\nhistorical events. Originally, Honovich et al. constructed this dataset\nfor a regression task to predict the year of occurrence [26]. However,\nit can also be approached as a ranking task to predict the chrono-\nlogical order of events within a given group of events. The OTD2\ndataset, sourced from the “On This Day” website, includes 71,484\nevents enriched with additional contextual information. Scraped in\nApril 2020, it incorporates recent events and corrections by the site.\nPreprocessing excluded events before 1 CE and future projections\nsuch as “31st predicted perihelion passage of Halley’s Comet” in\n2061 CE. We follow the 80%/10%/10% train/validation/test split as\nprovided.\n5.3\nBackbones\nStock Ranking. We use the method by Feng et al. [17] as the back-\nbone model, replacing the prediction layer with different benchmark\nranking models. Although other potential methods such as STHAN-\nSR [42], ALSP-TF [48], and CI-STHPAN [51] have been proposed\nfor stock selection, we do not include them due to the lack of last-\nstate embeddings needed to integrate TSPRank, unavailability of\nsource code, or reproducibility issues. Since our primary goal is\nto demonstrate TSPRank as a versatile ranking approach rather\nthan achieving SOTA results on a single dataset, this selection of\nbackbone is sufficient to validate our model’s performance.\nInformation Retrieval. Given that the features in the MQ2008-list\nare encoded using a combination of BM25 and TF-IDF methods,\nwe treat BM25 and TF-IDF as the backbone models and use these\nencoded features as embeddings.\n1https://github.com/fulifeng/Temporal_Relational_Stock_Ranking/\n2https://www.microsoft.com/en-us/research/project/letor-learning-rank-\ninformation-retrieval/letor-4-0/\n3https://github.com/ltorroba/machine-reading-historical-events\nHistorical Events Ordering. Concatenating event titles and in-\nformation can result in contexts spanning thousands of tokens.\nTherefore, we use the text-embedding-3-small4 embeddings from\nOpenAI as the backbone model, which supports up to 8191 tokens.\nOur goal is not to achieve SOTA performance but to ensure a fair\ncomparison. The small version (text-embedding-3-small) with 1536\ndimensions, compared to the large version’s 3072 dimensions (text-\nembedding-3-large), is more computationally efficient and sufficient\nfor our purposes.\n5.4\nTechnical Setup\nStock Ranking. Considering that TSPRank specialises in small-\nscale ranking problems, we implement rankings within individual\nsectors, categorising stocks into groups based on their sectors. We\nexclude all sector groups containing three or fewer stocks and re-\nmove stocks with unidentified sector information. Detailed descrip-\ntions of the sector-specific grouping are provided in Appendix E. For\nthe benchmarking process, we use outputs from the relational em-\nbedding layer introduced by Feng et al. [17], replacing the original\nprediction layer with the other benchmark models. This modifica-\ntion enables us to assess the extent to which transitioning from a\npoint-wise (original model) to pairwise, listwise, and our hybrid\napproaches can enhance performance. All benchmark models and\nTSPRank with local learning are trained for 100 epochs for each\nsector, as 100 epochs are sufficient for the benchmark models to\nconverge. We find that TSPRank with global learning generally\nrequires more epochs to converge; therefore, TSPRank-global is\ntrained for an additional 50 epochs to ensure convergence. Other\nhyperparameters are specified in Appendix B. For LambdaMART,\nwe use 10,000 trees since previous experiments indicated that Rank-\nformer failed to outperform LambdaMART with this configuration\n[9]. We choose the widely-used XGBoost5 [12] implementation of\nLambdaMART, especially due to the performance enhancements in\nits version 2.0.\nInformation Retrieval. In the MQ2008-list dataset, a query might\ncontain over 1,000 documents, resulting in a graph that is too large\nfor the TSP solver to handle efficiently. Therefore, we focus on a\nreranking or post-reranking stage. Specifically, we extract the top\n10 and top 30 documents for each query to conduct two separate\nexperiments. This approach allows us to manage the computational\ncomplexity while still evaluating the effectiveness of TSPRank in\na realistic ranking scenario. We use similar hyperparameters as\nin the stock ranking task but increase the number of transformer\nlayers in both Rankformer and TSPRank to four, as we do not use\nany pretrained embeddings here. To ensure fairness, we also follow\nthe 5-fold cross-validation setup as provided by Microsoft.\nHistorical Events Ordering. We randomly allocate the events into\nranking groups and train the ranking models to predict the ground\ntruth order of occurrences within these groups. We test with group\nsizes of 10, 30 and 50 for fair comparisons. For each group size, we\ngenerate the group allocations using five different random seeds and\nreport the average performance to mitigate the effects of random\ngroup allocation. Regarding the models, we observed overfitting\n4https://platform.openai.com/docs/guides/embeddings\n5https://xgboost.readthedocs.io/en/latest/tutorials/learning_to_rank.html\n\nKDD ’25, August 3–7, 2025, Toronto, Canada\nWeixian Waylon Li, Yftah Ziser, Yifei Xie, Shay B. Cohen, and Tiejun Ma\nwith Rankformer and TSPRank when including the transformer\nblock, even with a 0.5 dropout rate. This is likely due to the strong\nrepresentational power of the contextual embedding and the rel-\natively small size of the OTD2 dataset compared to other NLP\ncorpora. Consequently, we retained only the scoring network in\nRankformer and the trainable bilinear model in TSPRank, inte-\ngrating them directly with the text-embedding-3-small embeddings.\nThis setting not only prevents overfitting but also ensures similar\nmodel sizes. Other hyperparameters are specified in Appendix B.\nWe remove the weights in the weighted loss function for TSPRank-\nLocal here since all events should be weighted equally without any\nadditional requirements in this task.\n5.5\nEvaluation\nStock Ranking. Given that our task encompasses both ranking\nand stock selection functionalities, we employ both traditional rank-\ning metrics and financial performance metrics in our evaluation.\nFor ranking effectiveness, we use the Mean Average Precision at 𝐾\n(MAP@K), which evaluates the precision of the top 𝐾ranked stocks\nby averaging the precision scores at each relevant stock position.\nWe also use Kendall’s Tau, defined as: 𝜏=\n(𝐶−𝐷)\n1\n2𝑛(𝑛−1) , where 𝐶is\nthe number of concordant pairs (pairs of entities that are in the\nsame order in both predicted and ground truth rankings), 𝐷is the\nnumber of discordant pairs (pairs of entities that are in different\norders in the rankings), and 𝑛is the total number of entities being\nranked. Kendall’s Tau is a correlation coefficient that measures the\nordinal association between two ranked lists. This is suitable in our\ncase, where we need to assess the similarity between the predicted\nrankings and the ground-truth rankings. Furthermore, to assess\nthe financial impact of the rankings, we simulate trading activities\nby predicting the rankings of all individual stocks in every sector\nfor the next trading day 𝑡+ 1 on trading day 𝑡. This simulation is\nconsistent with the one presented by Feng et al. [17]. We then rank\nthese stocks, hold the top 𝑘stocks 𝑆𝑘, and sell them on trading day\n𝑡+ 1. The price of stock 𝑖on day 𝑡is denoted as 𝑝(𝑡)\n𝑖\nper share. The\ncumulative Investment Return Ratio (IRR) and Sharpe Ratio (SR)\nare defined in Equation 9, where 𝑅𝑝is the return of the portfolio,\n𝑅𝑓is the risk-free rate, and 𝜎is the standard deviation:\nIRR𝑘=\n∑︁\n𝑖∈𝑆𝑘\n𝑝(𝑡)\n𝑖\n−𝑝(𝑡−1)\n𝑖\n𝑝(𝑡−1)\n𝑖\n, SR =\n𝐸(𝑅𝑝−𝑅𝑓)\n𝜎(𝑅𝑝)\n.\n(9)\nInformation Retrieval. We evaluate the performance of our mod-\nels using several well-established ranking metrics: Normalized Dis-\ncounted Cumulative Gain (NDCG) at various cutoff levels (3, 5,\n10), Mean Reciprocal Rank (MRR), and Kendall’s tau. NDCG mea-\nsures a document’s usefulness based on its position in the result\nlist, with higher positions receiving more weight. On the other\nhand, MRR assesses the rank position of the first relevant docu-\nment, calculated as the average of the reciprocal ranks of the first\nrelevant document for each query. The formula for MRR is defined\nby MRR =\n1\n|𝑄|\nÍ|𝑄|\n𝑖=1\n1\nrank𝑖, where |𝑄| is the total number of queries\nand rank𝑖is the rank position of the first relevant document for the\n𝑖-th query.\nHistorical Events Ordering. We report the Kendall’s Tau, MRR,\nExact Match (EM) of ordering, and the Root Mean Square Error\n(RMSE) of the predicted and ground truth rankings. EM is defined\nas the ratio of the number of events whose predicted order exactly\nmatches the ground truth order to the total number of events,\nformulated as: EM = # correctly ordered events\n# events\n.\n6\nRESULTS\nThe aggregated results for all benchmark models on the stock rank-\ning dataset are presented in Table 1. These results represent the\naverage performance across 50 sectors in the NASDAQ market and\n70 sectors in the NYSE market, excluding sectors with three or\nfewer stocks as outlined in the experimental setup. Detailed results\nfor each individual sector are provided in Appendix E. The results\non the MQ2008-list retrieval dataset are shown in Table 2. A 5-fold\ncross-validation was performed, with detailed results for each fold\nprovided in Appendix F. Lastly, the results on OTD2 for historical\nevents ordering are presented in Table 3, with complete results for\ndifferent random group allocations provided in Appendix G.\nThe results highlight the comparisons among three types of\nmodels: pairwise (LambdaMART), listwise (Rankformer), and our\npairwise-listwise method (TSPRank).\nBetter Performance of Pairwise-Listwise Method Across Di-\nverse Tasks (RQ1). Our pairwise-listwise method, TSPRank-Global,\ndemonstrates outstanding robustness and superior performance\nacross diverse datasets and domains. For instance, on the NAS-\nDAQ stock ranking dataset (Table 1), TSPRank-Global achieves a\nKendall’s Tau of 0.0447, significantly surpassing both LambdaMART\n(0.0071) and Rankformer (0.0110). Similarly, on the NYSE dataset\n(Table 1), TSPRank-Global attains a Kendall’s Tau of 0.0422, out-\nperforming LambdaMART (0.0054) and Rankformer (0.0181). Both\nTSPRank-Local and TSPRank-Global also consistently achieve higher\nIRR and SR, yielding improved financial performance. The model’s\nrobustness is further evidenced by its consistent top performance\nacross other datasets. For example, in the MQ2008-list (Table 2),\nTSPRank-Global leads with NDCG@10 scores of 0.8884 for the top\n10 documents and 0.7631 for the top 30 documents, indicating su-\nperior ranking accuracy, despite a minor difference in Kendall’s\nTau compared to Rankformer (around 0.01 to 0.02). Additionally,\nTSPRank-Global achieves top performance in the historical events\nordering task (Table 3), regardless of the group size (10, 30, and 50).\nTSPRank Can Be Extra Component Upon Embeddings For\nBoosting The Performance. In the stock ranking and ordering\ntasks for historical events, we directly deployed TSPRank on the\nstock embeddings and text embeddings. As demonstrated, TSPRank\neffectively serves as an additional component on embeddings, sig-\nnificantly enhancing ranking performance. This capability allows\nTSPRank to have broader applications across various domains.\nStronger Robustness Towards Number of entities. TSPRank-\nGlobal also shows greater robustness concerning the number of\nentities compared to the pure pairwise LambdaMART and listwise\nRankformer. As evidenced by the MQ2008 (Table 2) results, the gap\nbetween LambdaMART and Rankformer narrows as the number of\ndocuments increases from 10 to 30, with the NDCG@3 score differ-\nence between these two methods reducing from -0.0387 to -0.0146.\n\nTSPRank: Bridging Pairwise and Listwise Methods with a Bilinear Travelling Salesman Model\nKDD ’25, August 3–7, 2025, Toronto, Canada\nMarket\nModel\n𝜏\nIRR@1\nSR@1\nMAP@1\nIRR@3\nSR@3\nMAP@3\nIRR@5\nSR@5\nMAP@5\nNASDAQ\nFeng et al. + MLP (Original)\n0.0093\n0.1947\n0.5341\n0.1690\n0.2366\n0.9881\n0.3253\n0.1892\n0.9682\n0.5871\nFeng et al. + LambdaMART\n0.0071\n0.0310\n-0.0873\n0.1539\n0.0340\n0.0445\n0.3144\n0.0505\n0.2678\n0.5858\nFeng et al. + Rankformer\n0.0110\n0.2257\n0.5464\n0.1620\n0.2857\n1.1245\n0.3216\n0.2309\n1.0943\n0.5860\nFeng et al. + TSPRank-Local\n0.0291\n0.5353\n1.2858\n0.1658\n0.4416\n1.7401\n0.3297\n0.2537\n1.2623\n0.5932\nFeng et al. + TSPRank-Global\n0.0447\n0.7849\n1.7471\n0.1633\n0.5224\n2.0359\n0.3364\n0.2937\n1.4331\n0.5999\nNYSE\nFeng et al. + MLP (Original)\n0.0162\n0.4170\n1.0755\n0.1791\n0.2574\n1.2367\n0.2841\n0.2257\n1.3186\n0.4649\nFeng et al. + LambdaMART\n0.0054\n0.1005\n0.1367\n0.1307\n0.0732\n0.4192\n0.2592\n0.1063\n0.6882\n0.4574\nFeng et al. + Rankformer\n0.0181\n0.2924\n0.9113\n0.1535\n0.2701\n1.2890\n0.2758\n0.2515\n1.4200\n0.4651\nFeng et al. + TSPRank-Local\n0.0313\n0.5012\n1.5710\n0.1424\n0.3974\n1.9735\n0.2756\n0.2788\n1.6662\n0.4680\nFeng et al. + TSPRank-Global\n0.0422\n0.4787\n1.4552\n0.1392\n0.3889\n1.9976\n0.2756\n0.2816\n1.7350\n0.4732\nTable 1: Performance comparison of Feng et al., LambdaMART, Rankformer, and TSPRank on the NASDAQ and NYSE stock\nranking dataset, averaged across all filtered sectors.\nTop 10\nTop 30\nModel\nType\nNDCG@3\nNDCG@5\nNDCG@10\nMRR\n𝜏\nNDCG@3\nNDCG@5\nNDCG@10\nMRR\n𝜏\nLambdaMART\nPairwise\n0.6833\n0.7222\n0.8707\n0.4259\n0.1474\n0.7340\n0.7298\n0.7403\n0.3617\n0.2372\nRankformer\nListwise\n0.7220\n0.7565\n0.8865\n0.4661\n0.2317\n0.7486\n0.7470\n0.7596\n0.3732\n0.2834\nTSPRank-Local\nPairwise-Listwise\n0.6858\n0.7213\n0.8719\n0.4266\n0.1544\n0.7189\n0.7240\n0.7362\n0.3206\n0.2054\nTSPRank-Global\nPairwise-Listwise\n0.7281\n0.7585\n0.8884\n0.4861\n0.2212\n0.7582\n0.7558\n0.7631\n0.3895\n0.2647\nTable 2: Evaluation of LambdaMART, Rankformer, and TSPRank on MQ2008-list information retrieval dataset for top 10 and\ntop 30 documents.\nGroup Size\n10\n30\n50\nModel\nType\n𝜏↑\nEM ↑\nMRR ↑\nRMSE ↓\n𝜏↑\nEM ↑\nMRR ↑\nRMSE ↓\n𝜏↑\nEM ↑\nMRR ↑\nRMSE ↓\nte-3-small + LambdaMART\nPairwise\n0.6297\n0.3008\n0.7554\n1.993\n0.5929\n0.1064\n0.6122\n5.969\n0.6000\n0.0639\n0.5596\n9.618\nte-3-small + Rankformer\nListwise\n0.6190\n0.2899\n0.7361\n1.998\n0.5859\n0.0921\n0.4911\n5.973\n0.5724\n0.0527\n0.3526\n10.069\nte-3-small + TSPRank-Local\nPairwise-Listwise\n0.5658\n0.2856\n0.7679\n2.296\n0.5095\n0.0873\n0.5739\n6.930\n0.4713\n0.0460\n0.3949\n12.084\nte-3-small + TSPRank-Global\nPairwise-Listwise\n0.6301\n0.3350\n0.7936\n2.057\n0.6302\n0.1384\n0.7300\n5.770\n0.6207\n0.0871\n0.6618\n9.602\nTable 3: Evaluation of LambdaMART, Rankformer, and TSPRank on OTD2 dataset for historical events ordering for group sizes\nof 10, 30, and 50. “te-3-small” stands for “text-embedding-3-small”.\nSimilarly, in historical events ordering (Table 3), LambdaMART\nand Rankformer’s performance fluctuates more significantly with\ngroup size changes. This is evident from the varying differences in\ntheir Kendall’s Tau and MRR compared to those of TSPRank-Global.\nConversely, TSPRank-Global consistently performs well regardless\nof group size, maintaining top performance across most metrics.\nGlobal Learning Outperforms Local Learning (RQ2). As evi-\ndenced by the performance of TSPRank-Global compared to TSPRank-\nLocal on MQ2008 and OTD2. For example, on the OTD2 dataset\n(Table 3), TSPRank-Global achieves a Kendall’s Tau of 0.6301, 0.6302,\n0.6207 for the three different group sizes, compared to TSPRank-\nLocal’s 0.5658, 0.5095, and 0.4713. These results suggest that the\nend-to-end global optimisation approach of TSPRank-Global aligns\nmore effectively with overall optimisation goals, whereas the non-\nend-to-end method may not perfectly align with global optimisation\nby the TSP solver.\nLambdaMART Does Not Always Outperform Deep Learning\nBased Ranking Algorithm (RQ3). Although Qin et al. suggests\nthat GBDT models, such as LambdaMART, generally outperform\ndeep learning models on standard information retrieval datasets\n[39], our results indicate that this is not always the case in other\ncontexts. As demonstrated in Table 1, within the domain-specific\nscenario of stock ranking, LambdaMART shows markedly poorer\nperformance. Specifically, LambdaMART achieves a Kendall’s Tau\nof 0.0071 on NASDAQ and 0.0054 on NYSE, trailing behind Rank-\nformer (0.0110 and 0.0181) and TSPRank-Global (0.0447 and 0.0422).\nTable 2 further validates this observation. In both the top 10 and\ntop 30 document settings, LambdaMART consistently underper-\nforms Rankformer and TSPRank-Global when adapting to ordinal\nranking labels across all metrics. These results underscore that\nwhile LambdaMART performs well with binary relevance labels\nor relevance levels labels, it is not always the optimal choice for\nrecovering complete rankings.\nOverall, TSPRank’s success suggests that combining pairwise\nand listwise approaches helps the model capture the relative or-\ndering of entities and the overall ranking structure. This dual fo-\ncus likely contributes to its superior performance across various\ndatasets and metrics, making it versatile and powerful.\n7\nVISUALISATION ANALYSIS\nAs mentioned before, our pairwise-listwise TSPRank addresses\nboth the lack of listwise optimisation in pairwise LambdaMART\nand the robustness issues in listwise Rankformer, which arise from\nattempting to predict the complete rankings directly.\n\nKDD ’25, August 3–7, 2025, Toronto, Canada\nWeixian Waylon Li, Yftah Ziser, Yifei Xie, Shay B. Cohen, and Tiejun Ma\nTo empirically validate this and answer RQ4 (the advantages\nof hybrid pairwise-listwise TSPRank over other methods), we con-\nducted another experiment on the OTD2 dataset, chosen because of\nthe better interpretability provided by text. We arbitrarily sample\nthree events each from the US, UK, and China, ensuring that the\nevents within each country occurred at least 50 years apart (detailed\nin Table 4). We then use the pretrained LambdaMART, Rankformer,\nand TSPRank-Global from the experiments described in Section 5\nto predict the rankings for this constructed group. We visualise the\npredictions given by the three rankers in Figure 2. Both the pairwise\nLambdaMART and pairwise-listwise TSPRank-Global successfully\nrecover the intra-country event order, correctly identifying the rel-\native order within the same colour group. However, the listwise\nRankformer incorrectly predicts that “US-2” occurs earlier than\n“US-1”.\nAlthough LambdaMART successfully recovers the intra-country\nevent order, it makes mistakes in the overall ranking, particularly\nfailing to recover the correct order of [“US-1”, “UK-1”, “CN-1”] and\n[“US-3”, “UK-3”, “CN-3”], validating its weaker ability for listwise\nranking optimisation. In contrast, TSPRank accurately recovers\nmost orders, with only a minor error between “US-2” and “UK-2”,\nwhich only have a 30-year gap (1934 and 1904).\nWe also visualise the intra-country connections using the adja-\ncency matrix predicted by TSPRank’s bilinear model in Figure 3,\nomitting cross-country connections for clarity. As highlighted in\nred, the direct comparison between “US-1” and “US-3” is incorrect\nsince 𝑠(US-1, US-3) should be higher than 𝑠(US-3, US-1), but the\nmodel fails in this case. However, as shown in Figure 2, TSPRank\nstill correctly places “US-1” at position 3 and “US-3” at position 8.\nThis indicates that the model benefits from the cross-country con-\nnections and the listwise optimisation provided by the TSP solver.\nThis makes the model more tolerant to errors or uncertainties in\npairwise comparisons, as the listwise optimisation ensures that\nthe highest-scoring permutation is selected. We provide additional\nexamples in Appendix C to further validate this observation.\nUS-1\n(3)\nUS-2\n(5)\nUS-3\n(8)\nUK-1\n(2)\nUK-2\n(4)\nUK-3\n(7)\nCN-1\n(1)\nCN-2\n(6)\nCN-3\n(9)\nLambdaMART\nRankformer\nTSPRank-Global\nUS-1\n(3)\nUS-2\n(5)\nUS-3\n(8)\nUK-1\n(2)\nUK-2\n(4)\nUK-3\n(7)\nCN-1\n(1)\nCN-2\n(6)\nCN-3\n(9)\nUS-1\n(3)\nUS-2\n(5)\nUS-3\n(8)\nUK-1\n(2)\nUK-2\n(4)\nUK-3\n(7)\nCN-1\n(1)\nCN-2\n(6)\nCN-3\n(9)\nFigure 2: Visualisation of predictions by LambdaMART,\nRankformer, and TSPRank-Global on the constructed group.\nNumbers in parentheses indicate the true ranking.\n8\nINFERENCE LATENCY\nIncorporating a combinatorial optimisation solver is known to cause\nadditional computational overhead, which can impact the inference\nlatency. Therefore, we compare the average inference time per\nranking group for TSPRank and Rankformer on the OTD2 historical\nevents ordering dataset. The experimental setup and detailed results\nare provided in Appendix D.\nWe observe that the inference time for TSPRank increases ex-\nponentially with the number of ranking entities, primarily due\nEvent Title\nYear\nRank\nLabel\n1st US store to install electric lights, Philadelphia\n1878\n3\nUS-1\n1st sitting US President to visit South America, FDR\nin Colombia\n1934\n5\nUS-2\n75th US Masters Tournament, Augusta National GC:\nCharl Schwartzel of South Africa birdies the final 4\nholes to win his first major title, 2 strokes ahead of\nAustralian pair Adam Scott and Jason Day\n2011\n8\nUS-3\nCharles Watson-Wentworth, 2nd Marquess of Rock-\ningham, becomes Prime Minister of Great Britain\n1782\n2\nUK-1\n1st main line electric train in UK (Liverpool to South-\nport)\n1904\n4\nUK-2\nUK Terrorism Act 2006 becomes law\n2006\n7\nUK-3\nA Mongolian victory at the naval Battle of Yamen ends\nthe Song Dynasty in China\n1279\n1\nCN-1\nUS Senate rejects China People’s Republic member-\nship to UN\n1953\n6\nCN-2\nChina’s Hubei province, the original center of the\ncoronavirus COVID-19 outbreak eases restrictions on\ntravel after a nearly two-month lockdown\n2020\n9\nCN-3\nTable 4: Event titles in the constructed group. Labels indicate\nthe order of occurrence within each country, e.g., “US-1” de-\nnotes the earliest event in the US within the group.\nCN-1\n(3)\nCN-2\n(6)\nCN-3\n(9)\n-1.334\n0.448\n0.005\n-0.490\nUK-1\n(1)\nUK-2\n(4)\nUK-3\n(7)\n2.241\n-1.781\n-0.442\n-1.371\n-2.371\n-3.324\nUS-1\n(2)\nUS-2\n(5)\nUS-3\n(8)\n-1.177\n0.490\n0.130\n0.732\n-2.095\n-2.133\n-0.684 -1.228\nFigure 3: Illustration of the intra-country pairwise compar-\nison graph. Edges between pairs of events from different\ncountries are omitted for clarity. Scores highlighted in red in-\ndicate errors in the pairwise prediction for TSPRank-Global.\nto the discrete TSP solver. When the group size reaches 100, the\nsolver consumes approximately 99.8% of the inference time, while\nthe encoding time remains similar to that of Rankformer. There-\nfore, TSPRank is more suitable for small-scale ranking problems\nwith fewer than 30 entities, where its inference time is compa-\nrable to Rankformer. It is also advantageous in scenarios where\nTSPRank’s performance improvements outweigh the increased la-\ntency. Solvers like Gurobi are efficient for small TSP graphs. How-\never, exact solutions for larger graphs require specialised tech-\nniques, such as the Concorde TSP Solver6, which uses cutting-\nplane algorithms and a branch-and-bound approach to solve graphs\nwith up to 85,900 nodes [4]. Beyond exact solvers, heuristic algo-\nrithms like the Christofides–Serdyukov algorithm [13] and the\nLin–Kernighan–Helsgaun heuristic [24, 25, 32] are also used.\nMoreover, recent advances in neural networks have enabled\nthe use of deep learning to approximate the TSP reward function,\nemploying reinforcement learning to solve the problem [5, 28, 29].\nWhile we do not delve deeply into the various TSP solutions in this\npaper, we demonstrate that inference latency stems from the TSP\nsolver and discuss potential enhancements for reducing inference\nlatency and tackling large-scale ranking problems.\n6https://www.math.uwaterloo.ca/tsp/concorde/index.html\n\nTSPRank: Bridging Pairwise and Listwise Methods with a Bilinear Travelling Salesman Model\nKDD ’25, August 3–7, 2025, Toronto, Canada\n9\nCONCLUSION\nThis study introduces TSPRank, a novel pairwise-listwise approach\nfor position-based ranking tasks, by modelling them as the Trav-\nelling Salesman Problem (TSP). We present two learning methods\nfor TSPRank, integrating listwise optimization into pairwise com-\nparisons to address the limitations of traditional pure pairwise and\nlistwise ranking models. TSPRank’s application to diverse back-\nbone models and datasets, including stock ranking, information\nretrieval, and historical events ordering, demonstrates its supe-\nrior performance and robustness. Key findings include TSPRank’s\nability to outperform existing models such as LambdaMART and\nRankformer across multiple datasets and various metrics. Further-\nmore, TSPRank’s capability to function as an additional component\non embeddings suggests its versatility and potential for broader\napplications across different domains.\nOur empirical analysis reveals that TSPRank’s superior perfor-\nmance is due to the discrete TSP solver’s ability to more effectively\nutilise listwise information. It also enhances TSPRank’s tolerance\nto uncertainties in pairwise comparisons by ensuring the selection\nof the highest-scoring permutation. Future work could explore the\nuse of alternative TSP solvers and further enhancements to the\nGurobi solver to reduce inference latency and improve scalability.\nREFERENCES\n[1] Omri Abend, Shay B. Cohen, and Mark Steedman. 2015. Lexical Event Or-\ndering with an Edge-Factored Model. In Proceedings of the 2015 Conference of\nthe North American Chapter of the Association for Computational Linguistics:\nHuman Language Technologies, Rada Mihalcea, Joyce Chai, and Anoop Sarkar\n(Eds.). Association for Computational Linguistics, Denver, Colorado, 1161–1171.\nhttps://doi.org/10.3115/v1/N15-1122\n[2] Qingyao Ai, Keping Bi, Jiafeng Guo, and W. Bruce Croft. 2018. Learning a Deep\nListwise Context Model for Ranking Refinement. In The 41st International ACM\nSIGIR Conference on Research & Development in Information Retrieval (Ann Arbor,\nMI, USA) (SIGIR ’18). Association for Computing Machinery, New York, NY, USA,\n135–144. https://doi.org/10.1145/3209978.3209985\n[3] Qingyao Ai, Xuanhui Wang, Sebastian Bruch, Nadav Golbandi, Michael Bender-\nsky, and Marc Najork. 2019. Learning Groupwise Multivariate Scoring Functions\nUsing Deep Neural Networks. In Proceedings of the 2019 ACM SIGIR Interna-\ntional Conference on Theory of Information Retrieval (Santa Clara, CA, USA)\n(ICTIR ’19). Association for Computing Machinery, New York, NY, USA, 85–92.\nhttps://doi.org/10.1145/3341981.3344218\n[4] David L Applegate. 2006. The traveling salesman problem: a computational study.\nVol. 17. Princeton university press.\n[5] Irwan Bello, Hieu Pham, Quoc V. Le, Mohammad Norouzi, and Samy Ben-\ngio. 2017.\nNeural Combinatorial Optimization with Reinforcement Learn-\ning. In 5th International Conference on Learning Representations, ICLR 2017,\nToulon, France, April 24-26, 2017, Workshop Track Proceedings. OpenReview.net.\nhttps://openreview.net/forum?id=Bk9mxlSFx\n[6] Christopher Burges. 2010. From ranknet to lambdarank to lambdamart: An\noverview. Learning 11 (01 2010).\n[7] Christopher Burges, Robert Ragno, and Quoc Le. 2006. Learning to rank with\nnonsmooth cost functions. Advances in neural information processing systems 19\n(2006).\n[8] Chris Burges, Tal Shaked, Erin Renshaw, Ari Lazier, Matt Deeds, Nicole Hamilton,\nand Greg Hullender. 2005. Learning to rank using gradient descent. In Proceedings\nof the 22nd international conference on Machine learning. 89–96.\n[9] Maarten Buyl, Paul Missault, and Pierre-Antoine Sondag. 2023. RankFormer:\nListwise Learning-to-Rank Using Listwide Labels. In Proceedings of the 29th\nACM SIGKDD Conference on Knowledge Discovery and Data Mining (KDD ’23).\nAssociation for Computing Machinery, New York, NY, USA, 3762–3773. https:\n//doi.org/10.1145/3580305.3599892\n[10] Stefano Campese, Ivano Lauriola, and Alessandro Moschitti. 2024. Pre-Training\nMethods for Question Reranking. In Proceedings of the 18th Conference of the\nEuropean Chapter of the Association for Computational Linguistics (Volume 2: Short\nPapers), Yvette Graham and Matthew Purver (Eds.). Association for Computa-\ntional Linguistics, St. Julian’s, Malta, 469–476. https://aclanthology.org/2024.eacl-\nshort.41\n[11] Zhe Cao, Tao Qin, Tie-Yan Liu, Ming-Feng Tsai, and Hang Li. 2007. Learning\nto rank: from pairwise approach to listwise approach. In Proceedings of the 24th\nInternational Conference on Machine Learning (Corvalis, Oregon, USA) (ICML\n’07). Association for Computing Machinery, New York, NY, USA, 129–136. https:\n//doi.org/10.1145/1273496.1273513\n[12] Tianqi Chen and Carlos Guestrin. 2016. XGBoost: A Scalable Tree Boosting\nSystem. In Proceedings of the 22nd ACM SIGKDD International Conference on\nKnowledge Discovery and Data Mining (KDD ’16). ACM. https://doi.org/10.1145/\n2939672.2939785\n[13] Nicos Christofides. 2022. Worst-case analysis of a new heuristic for the travelling\nsalesman problem. In Operations Research Forum, Vol. 3. Springer, 20. \"https:\n//doi.org/10.1007/s43069-021-00101-z\"\n[14] IBM ILOG Cplex. 2009. V12. 1: User’s Manual for CPLEX. International Business\nMachines Corporation 46, 53 (2009), 157.\n[15] Yang Deng, Wenxuan Zhang, and Wai Lam. 2021. Learning to Rank Question\nAnswer Pairs with Bilateral Contrastive Data Augmentation. In Proceedings of the\nSeventh Workshop on Noisy User-generated Text, W-NUT 2021, Online, November 11,\n2021, Wei Xu, Alan Ritter, Tim Baldwin, and Afshin Rahimi (Eds.). Association for\nComputational Linguistics, 175–181. https://doi.org/10.18653/V1/2021.WNUT-\n1.20\n[16] Xinyan Fan, Jianxun Lian, Wayne Xin Zhao, Zheng Liu, Chaozhuo Li, and Xing\nXie. 2022. Ada-Ranker: A Data Distribution Adaptive Ranking Paradigm for\nSequential Recommendation. In Proceedings of the 45th International ACM SIGIR\nConference on Research and Development in Information Retrieval (SIGIR ’22).\nAssociation for Computing Machinery, New York, NY, USA, 1599–1610. https:\n//doi.org/10.1145/3477495.3531931\n[17] Fuli Feng, Xiangnan He, Xiang Wang, Cheng Luo, Yiqun Liu, and Tat-Seng Chua.\n2019. Temporal Relational Ranking for Stock Prediction. ACM Trans. Inf. Syst.\n37, 2, Article 27 (mar 2019), 30 pages. https://doi.org/10.1145/3309547\n[18] Jerome H Friedman. 2001. Greedy function approximation: a gradient boosting\nmachine. Annals of statistics (2001), 1189–1232.\n[19] Norbert Fuhr. 1989. Optimum polynomial retrieval functions based on the proba-\nbility ranking principle. ACM Transactions on Information Systems (TOIS) 7, 3\n(1989), 183–204.\n[20] Ruocheng Guo, Xiaoting Zhao, Adam Henderson, Liangjie Hong, and Huan\nLiu. 2020. Debiasing Grid-based Product Search in E-commerce. In Proceedings\nof the 26th ACM SIGKDD International Conference on Knowledge Discovery &\nData Mining (Virtual Event, CA, USA) (KDD ’20). Association for Computing\nMachinery, New York, NY, USA, 2852–2860.\nhttps://doi.org/10.1145/3394486.\n3403336\n[21] Shashank Gupta, Philipp Hager, Jin Huang, Ali Vardasbi, and Harrie Oosterhuis.\n2024. Unbiased Learning to Rank: On Recent Advances and Practical Applications.\nIn Proceedings of the 17th ACM International Conference on Web Search and Data\nMining (Merida, Mexico) (WSDM ’24). Association for Computing Machinery,\nNew York, NY, USA, 1118–1121. https://doi.org/10.1145/3616855.3636451\n[22] Gurobi Optimization, LLC. 2023. Gurobi Optimizer Reference Manual. https:\n//www.gurobi.com\n[23] Yixuan He, Quan Gan, David Wipf, Gesine D Reinert, Junchi Yan, and Mihai Cu-\ncuringu. 2022. GNNRank: Learning Global Rankings from Pairwise Comparisons\nvia Directed Graph Neural Networks. In International Conference on Machine\nLearning. PMLR, 8581–8612.\n[24] Keld Helsgaun. 2000. An effective implementation of the Lin–Kernighan traveling\nsalesman heuristic. European journal of operational research 126, 1 (2000), 106–130.\n\"https://doi.org/10.1016/S0377-2217(99)00284-2\"\n[25] Keld Helsgaun. 2017. An extension of the Lin-Kernighan-Helsgaun TSP solver for\nconstrained traveling salesman and vehicle routing problems. Roskilde: Roskilde\nUniversity 12 (2017), 966–980.\n[26] Or Honovich, Lucas Torroba Hennigen, Omri Abend, and Shay B. Cohen. 2020.\nMachine Reading of Historical Events. In Proceedings of the 58th Annual Meeting\nof the Association for Computational Linguistics, Dan Jurafsky, Joyce Chai, Natalie\nSchluter, and Joel Tetreault (Eds.). Association for Computational Linguistics,\nOnline, 7486–7497. https://doi.org/10.18653/v1/2020.acl-main.668\n[27] Zongcheng Ji and Bin Wang. 2013. Learning to rank for question routing in\ncommunity question answering. In Proceedings of the 22nd ACM International\nConference on Information & Knowledge Management (San Francisco, California,\nUSA) (CIKM ’13). Association for Computing Machinery, New York, NY, USA,\n2363–2368. https://doi.org/10.1145/2505515.2505670\n[28] Elias Khalil, Hanjun Dai, Yuyu Zhang, Bistra Dilkina, and Le Song. 2017. Learn-\ning combinatorial optimization algorithms over graphs. Advances in neural\ninformation processing systems 30 (2017).\n[29] Wouter Kool, Herke Van Hoof, and Max Welling. 2019. Attention, learn to solve\nrouting problems! International Conference on Learning Representations (2019).\n[30] Roger Zhe Li, Julián Urbano, and Alan Hanjalic. 2021. New Insights into Metric\nOptimization for Ranking-based Recommendation. In Proceedings of the 44th\nInternational ACM SIGIR Conference on Research and Development in Information\nRetrieval (SIGIR ’21). Association for Computing Machinery, New York, NY, USA,\n932–941. https://doi.org/10.1145/3404835.3462973\n\nKDD ’25, August 3–7, 2025, Toronto, Canada\nWeixian Waylon Li, Yftah Ziser, Yifei Xie, Shay B. Cohen, and Tiejun Ma\n[31] Yi Li, Jieming Zhu, Weiwen Liu, Liangcai Su, Guohao Cai, Qi Zhang, Ruiming\nTang, Xi Xiao, and Xiuqiang He. 2022. PEAR: Personalized Re-ranking with\nContextualized Transformer for Recommendation. In Companion Proceedings of\nthe Web Conference 2022 (Virtual Event, Lyon, France) (WWW ’22). Association\nfor Computing Machinery, New York, NY, USA, 62–66. https://doi.org/10.1145/\n3487553.3524208\n[32] Shen Lin and Brian W Kernighan. 1973. An effective heuristic algorithm for the\ntraveling-salesman problem. Operations research 21, 2 (1973), 498–516. \"https:\n//doi.org/10.1287/opre.21.2.498\"\n[33] Harrie Oosterhuis. 2023. Doubly Robust Estimation for Correcting Position Bias\nin Click Feedback for Unbiased Learning to Rank. ACM Trans. Inf. Syst. 41, 3,\nArticle 61 (feb 2023), 33 pages. https://doi.org/10.1145/3569453\n[34] Liang Pang, Jun Xu, Qingyao Ai, Yanyan Lan, Xueqi Cheng, and Jirong Wen.\n2020. Setrank: Learning a permutation-invariant ranking model for informa-\ntion retrieval. In Proceedings of the 43rd International ACM SIGIR Conference on\nResearch and Development in Information Retrieval. 499–508.\n[35] Rama Kumar Pasumarthi, Honglei Zhuang, Xuanhui Wang, Michael Bendersky,\nand Marc Najork. 2020. Permutation Equivariant Document Interaction Network\nfor Neural Learning to Rank. In Proceedings of the 2020 ACM SIGIR on International\nConference on Theory of Information Retrieval (Virtual Event, Norway) (ICTIR\n’20). Association for Computing Machinery, New York, NY, USA, 145–148. https:\n//doi.org/10.1145/3409256.3409819\n[36] Changhua Pei, Yi Zhang, Yongfeng Zhang, Fei Sun, Xiao Lin, Hanxiao Sun,\nJian Wu, Peng Jiang, Junfeng Ge, Wenwu Ou, and Dan Pei. 2019. Personalized\nre-ranking for recommendation. In Proceedings of the 13th ACM Conference on\nRecommender Systems (Copenhagen, Denmark) (RecSys ’19). Association for\nComputing Machinery, New York, NY, USA, 3–11.\nhttps://doi.org/10.1145/\n3298689.3347000\n[37] Stefan Poikonen, Bruce Golden, and Edward A Wasil. 2019. A branch-and-bound\napproach to the traveling salesman problem with a drone. INFORMS Journal on\nComputing 31, 2 (2019), 335–346. https://doi.org/10.1287/ijoc.2018.0826\n[38] Tao Qin and Tie-Yan Liu. 2013.\nIntroducing LETOR 4.0 Datasets.\nArXiv\nabs/1306.2597 (2013). https://api.semanticscholar.org/CorpusID:12130755\n[39] Zhen Qin, Le Yan, Honglei Zhuang, Yi Tay, Rama Kumar Pasumarthi, Xuanhui\nWang, Mike Bendersky, and Marc Najork. 2021. Are Neural Rankers still Out-\nperformed by Gradient Boosted Decision Trees?. In International Conference on\nLearning Representations (ICLR).\n[40] Julia Rieck and Jürgen Zimmermann. 2010. A new mixed integer linear model\nfor a rich vehicle routing problem with docking constraints. Annals of Operations\nResearch 181 (2010), 337–358. https://doi.org/10.1007/s12046-018-1048-y\n[41] Suman Saha, Junbin Gao, and Richard Gerlach. 2021. Stock ranking prediction\nusing list-wise approach and node embedding technique. IEEE Access 9 (2021),\n88981–88996.\n[42] Ramit Sawhney, Shivam Agarwal, Arnav Wadhwa, Tyler Derr, and Rajiv Ratn\nShah. 2021. Stock Selection via Spatiotemporal Hypergraph Attention Network:\nA Learning to Rank Approach. In Proceedings of the AAAI Conference on Artificial\nIntelligence, Vol. 35. 497–504.\n[43] Aliaksei Severyn and Alessandro Moschitti. 2015. Learning to rank short text pairs\nwith convolutional deep neural networks. In Proceedings of the 38th international\nACM SIGIR conference on research and development in information retrieval. 373–\n382.\n[44] Amnon Shashua and Anat Levin. 2002. Taxonomy of large margin principle\nalgorithms for ordinal regression problems. Advances in neural information\nprocessing systems 15 (2002), 937–944.\n[45] Qiang Song, Anqi Liu, and Steve Y. Yang. 2017. Stock portfolio selection using\nlearning-to-rank algorithms with news sentiment. Neurocomputing 264 (2017),\n20–28. https://doi.org/10.1016/j.neucom.2017.02.097 Machine learning in finance.\n[46] Jiwei Tan, Xiaojun Wan, and Jianguo Xiao. 2013. Learning to Order Natural\nLanguage Texts. In Proceedings of the 51st Annual Meeting of the Association for\nComputational Linguistics (Volume 2: Short Papers), Hinrich Schuetze, Pascale\nFung, and Massimo Poesio (Eds.). Association for Computational Linguistics,\nSofia, Bulgaria, 87–91. https://aclanthology.org/P13-2016\n[47] Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones,\nAidan N. Gomez, Łukasz Kaiser, and Illia Polosukhin. 2017. Attention is all you\nneed. In Proceedings of the 31st International Conference on Neural Information\nProcessing Systems (Long Beach, California, USA) (NIPS’17). Curran Associates\nInc., Red Hook, NY, USA, 6000–6010.\n[48] Heyuan Wang, Tengjiao Wang, Shun Li, Jiayi Zheng, Shijie Guan, and Wei Chen.\n2022. Adaptive Long-Short Pattern Transformer for Stock Investment Selection.\nIn Proceedings of the Thirty-First International Joint Conference on Artificial Intelli-\ngence, IJCAI-22, Lud De Raedt (Ed.). International Joint Conferences on Artificial\nIntelligence Organization, 3970–3977. https://doi.org/10.24963/ijcai.2022/551\nMain Track.\n[49] Rui Wang, Peipei Li, Huaibo Huang, Chunshui Cao, Ran He, and Zhaofeng He.\n2023.\nLearning-to-Rank Meets Language: Boosting Language-Driven\nOrdering Alignment for Ordinal Classification. In Advances in Neu-\nral Information Processing Systems, A. Oh, T. Naumann, A. Globerson,\nK. Saenko, M. Hardt, and S. Levine (Eds.), Vol. 36. Curran Associates, Inc.,\n76908–76922.\nhttps://proceedings.neurips.cc/paper_files/paper/2023/file/\nf2a11632520f4b7473d7838f074a7d25-Paper-Conference.pdf\n[50] Mei-Chen Wu, Szu-Hao Huang, and An-Pin Chen. 2024. Momentum portfolio\nselection based on learning-to-rank algorithms with heterogeneous knowledge\ngraphs. Applied Intelligence 54 (03 2024), 1–21. https://doi.org/10.1007/s10489-\n024-05377-2\n[51] Hongjie Xia, Huijie Ao, Long Li, Yu Liu, Sen Liu, Guangnan Ye, and Hongfeng\nChai. 2024. CI-STHPAN: Pre-trained Attention Network for Stock Selection with\nChannel-Independent Spatio-Temporal Hypergraph. Proceedings of the AAAI\nConference on Artificial Intelligence 38 (03 2024), 9187–9195. https://doi.org/10.\n1609/aaai.v38i8.28770\n[52] Jinhui Yang, Xiaohu Shi, Maurizio Marchese, and Yanchun Liang. 2008. An ant\ncolony optimization method for generalized TSP problem. Progress in natural\nscience 18, 11 (2008), 1417–1422. https://doi.org/10.1016/j.pnsc.2008.03.028\n[53] Xin Zhang, Lan Wu, and Zhixue Chen. 2022. Constructing long-short stock\nportfolio with a new listwise learn-to-rank algorithm. Quantitative Finance 22, 2\n(2022), 321–331.\n[54] Yunan Zhang, Le Yan, Zhen Qin, Honglei Zhuang, Jiaming Shen, Xuanhui Wang,\nMichael Bendersky, and Marc Najork. 2023. Towards Disentangling Relevance\nand Bias in Unbiased Learning to Rank. In Proceedings of the 29th ACM SIGKDD\nConference on Knowledge Discovery and Data Mining (Long Beach, CA, USA)\n(KDD ’23). Association for Computing Machinery, New York, NY, USA, 5618–5627.\nhttps://doi.org/10.1145/3580305.3599914\n[55] Honglei Zhuang, Zhen Qin, Xuanhui Wang, Michael Bendersky, Xinyu Qian,\nPo Hu, and Dan Chary Chen. 2021. Cross-Positional Attention for Debiasing\nClicks. In Proceedings of the Web Conference 2021 (Ljubljana, Slovenia) (WWW\n’21). Association for Computing Machinery, New York, NY, USA, 788–797. https:\n//doi.org/10.1145/3442381.3450098\n\nTSPRank: Bridging Pairwise and Listwise Methods with a Bilinear Travelling Salesman Model\nKDD ’25, August 3–7, 2025, Toronto, Canada\nA\nTSP OPTIMISATION PROBLEM\nRanking entity e𝑗immediately after entity e𝑖is analogous to travel-\nling from city 𝑖to city 𝑗. Let 𝑁be the total number of entities to be\nranked and 𝑧𝑖variables to represent the number of entities ranked\nbefore entity 𝑖. The MILP formulation of the TSPRank inference is\nas follows:\nmin\n𝑥𝑖𝑗\n𝑁\n∑︁\n𝑖=1\n𝑁\n∑︁\n𝑗=1,𝑗≠𝑖\n𝑎𝑖𝑗𝑥𝑖𝑗\n(10)\n𝑠.𝑡.\n𝑁\n∑︁\n𝑗=1,𝑗≠𝑖\n𝑥𝑖𝑗≤1\nfor all 𝑖\n(11)\n𝑁\n∑︁\n𝑖=1,𝑖≠𝑗\n𝑥𝑖𝑗≤1\nfor all 𝑗\n(12)\n𝑁\n∑︁\n𝑖=1\n𝑁\n∑︁\n𝑗=1,𝑗≠𝑖\n𝑥𝑖𝑗= 𝑁−1\n(13)\n𝑧𝑖+ 1 ≤𝑧𝑗+ 𝑁(1 −𝑥𝑖𝑗)\n𝑖, 𝑗= 2, . . . , 𝑁, 𝑖≠𝑗\n(14)\n𝑧𝑖≥0\n𝑖= 2, . . . , 𝑁\n(15)\nConstraints (11) and (12) ensure that each entity has at most\none predecessor and one successor in the ranking, expressed as\n2𝑁−2 linear inequalities. Constraint (13) ensures that the total\nnumber of pairwise comparisons is exactly 𝑁−1. These constraints\nensure that the selected set of pairwise comparisons forms a valid\nranking sequence. Constraints (14) and (15) introduce variables 𝑧\nto eliminate multiple separate sequences and enforce that there is\na single, complete ranking that includes all entities.\nB\nHYPERPARAMETERS SETTING\nThe hyperparameters are specified in Table 5. In the table, several\nabbreviations are used for conciseness and clarity:\n• lr: Learning rate, which controls the step size during the opti-\nmization process.\n• tf layer: Number of transformer layers, indicating the depth of\nthe transformer model.\n• tf nheads: Number of attention heads, which specifies the num-\nber of parallel attention mechanisms within the transformer layer.\n• tf dim_ff: Dimensionality of the feed-forward network within\nthe transformer layer.\nC\nADDITIONAL VISUALISATION EXAMPLES\nWe further construct three more groups using events from different\ncountries. The event titles, labels, and true rankings are provided in\nTable 6. The visualisation of the models’ predictions are shown in\nFigure 4. We observe similar patterns to those discussed in Section 7.\nD\nLATENCY ANALYSIS DETAILS\nWe conduct an inference time analysis on a standalone device with\nan AMD Ryzen 7 5800X 8-Core CPU and an Nvidia RTX 4070\nSuper GPU. Using the standalone device instead of the one used\nfor training is to avoid interference from other running jobs on the\nshared computing node.\nDataset\nHyperparameter\nValue\nModel\nAll Tasks\nn_estimators\n104\nLambdaMART\nloss_fn\nrank:pairwise\neval_metric\nauc\nearly_stopping\n50\nloss\nOrdinalLoss [9]\nRankformer\nStocks\nlr\n1e-4\nRankformer, TSPRank\nweight_decay\n1e-5\ntf layer\n1\ntf nheads\n8\ntf dim_ff\n128\nbatch_size\n128\nMQ2008\nlr\n1e-4\nRankformer, TSPRank\nweight_decay\n1e-5\ntf layer\n4\ntf nheads\n8\ntf dim_ff\n128\nbatch size\n64\nHistorical Events\nlr\n1e-4\nRankformer, TSPRank\nweight_decay\n1e-5\ntf dim_ff\n0\nbatch size\n32\nTable 5: Hyperparameters for LambdaMART model across\ndifferent tasks: Stock Ranking, MQ2008, and Historical\nEvents Ordering.\nJP-1\n(4)\nJP-2\n(5)\nJP-3\n(8)\nRU-1\n(3)\nRU-2\n(7)\nRU-3\n(9)\nDE-1\n(1)\nDE-2\n(2)\nDE-3\n(6)\nLambdaMART\nRankformer\nTSPRank-Global\n[Japan, Russia, Germany]\nJP-1\n(4)\nJP-2\n(5)\nJP-3\n(8)\nRU-1\n(3)\nRU-2\n(7)\nRU-3\n(9)\nDE-1\n(1)\nDE-2\n(2)\nDE-3\n(6)\nJP-1\n(4)\nJP-2\n(5)\nJP-3\n(8)\nRU-1\n(3)\nRU-2\n(7)\nRU-3\n(9)\nDE-1\n(1)\nDE-2\n(2)\nDE-3\n(6)\nFR-1\n(2)\nFR-2\n(3)\nFR-3\n(7)\nKR-1\n(1)\nKR-2\n(6)\nKR-3\n(8)\nBR-1\n(4)\nBR-2\n(5)\nBR-3\n(9)\nLambdaMART\nRankformer\nTSPRank-Global\n[France, Korean, Brazil]\nFR-1\n(2)\nFR-2\n(3)\nFR-3\n(7)\nKR-1\n(1)\nKR-2\n(6)\nKR-3\n(8)\nBR-1\n(4)\nBR-2\n(5)\nBR-3\n(9)\nFR-1\n(2)\nFR-2\n(3)\nFR-3\n(7)\nKR-1\n(1)\nKR-2\n(6)\nKR-3\n(8)\nBR-1\n(4)\nBR-2\n(5)\nBR-3\n(9)\nIN-1\n(1)\nIN-2\n(4)\nIN-3\n(7)\nIT-1\n(2)\nIT-2\n(5)\nIT-3\n(9)\nAU-1\n(3)\nAU-2\n(6)\nAU-3\n(8)\nLambdaMART\nRankformer\nTSPRank-Global\n[India, Italy, Australia]\nIN-1\n(1)\nIN-2\n(4)\nIN-3\n(7)\nIT-1\n(2)\nIT-2\n(5)\nIT-3\n(9)\nAU-1\n(3)\nAU-2\n(6)\nAU-3\n(8)\nIN-1\n(1)\nIN-2\n(4)\nIN-3\n(7)\nIT-1\n(2)\nIT-2\n(5)\nIT-3\n(9)\nAU-1\n(3)\nAU-2\n(6)\nAU-3\n(8)\nFigure 4: Visualisation of the model predictions on additional\ngroups. Numbers in parentheses indicate the true ranking.\nFigure 5 illustrates the average inference time in seconds per\nranking group for TSPRank and Rankformer on the OTD2 historical\nevents ordering dataset, with an input dimensionality of 1536. We\nprovide the inference times for various group sizes: 5, 10, 30, 50,\nand 100.\n\nKDD ’25, August 3–7, 2025, Toronto, Canada\nWeixian Waylon Li, Yftah Ziser, Yifei Xie, Shay B. Cohen, and Tiejun Ma\nGroup\nEvent Title\nYear\nRank\nLabel\n1\nJapanese immigration to Brazil begins when 781 people arrive in Santos aboard the Kasato-Maru ship\n1908\n4\nJP-1\nPassenger ship Lurline sends radio signal of sighting Japanese war fleet\n1941\n5\nJP-2\nA reactor at the Fukushima Daiichi nuclear power plant melts and explodes and releases radioactivity into the atmosphere a\nday after Japan’s earthquake.\n2011\n8\nJP-3\nThe State Bank of the Russian Empire is established.\n1860\n3\nRU-1\n\"Mirror\", Russian film directed by Andrei Tarkovsky, starring Margarita Terekhova and Ignat Daniltsev, is released\n1975\n7\nRU-2\nRussian city Moscow begins a city-wide lockdown after 4 hours notice due to coronavirus COVID-19\n2020\n9\nRU-3\nAlbrecht II of Habsburg becomes king of Germany\n1438\n1\nDE-1\nMagdeburg in Germany seized by forces of the Holy Roman Empire under earl Johann Tilly, most inhabitants massacred, one\nof the bloodiest incidents of the Thirty Years’ War\n1631\n2\nDE-2\nThe cult classic \"One Million Years B.C.\", starring Raquel Welch, is released 1st in West Germany\n1966\n6\nDE-3\n2\nFrench King Charles VIII occupies Florence\n1494\n2\nFR-1\n1st steamboat, Pyroscaphe, 1st run in France\n1783\n3\nFR-2\nFrancois Mitterrand becomes president of France\n1981\n7\nFR-3\nThe Hangul alphabet is published in Korea\n1446\n1\nKR-1\nKorea is divided into North and South Korea along the 38th parallel\n1945\n6\nKR-2\nNorth Korea blocks a South Korean supply delegation from the Kaesong joint industrial zone\n2013\n8\nKR-3\nBahia Independence Day: the end of Portuguese rule in Brazil, with the final defeat of the Portuguese crown loyalists in the\nprovince of Bahia\n1823\n4\nBR-1\nBelo Horizonte, the first planned city of Brazil, founded\n1897\n5\nBR-2\nBrazilian court blocks President Michel Temer from abolishing Renca, which would open parts of the Amazon to mining\n2017\n9\nBR-3\n3\nIndian Mutiny against rule by the British East India Company begins with the revolt of the Sepoy soldiers in Meerut\n1857\n1\nIN-1\nGandhi supports the African People’s Organisations resolution to declare the Prince of Wales day of arrival in South Africa a\nday of mourning, in protest against the South Africa Acts disenfranchisement of Indians, Coloureds and Africans\n1910\n4\nIN-2\nBomb attack on train in Assam India (27 soldiers killed)\n1995\n7\nIN-3\n1st Italian Parliament meets at Turin\n1860\n2\nIT-1\nKing Victor Emmanuel III of Italy abdicates and is succeeded by his son Umberto II who reigns for only 34 days before the\nmonarchy is abolished\n1946\n5\nIT-2\nStorms in Italy kill at least 11 with 75% of Venice flooded and two tornadoes striking Terracina\n2018\n9\nIT-3\nEdmund Barton is elected Prime Minister in Australia’s first parliamentary election\n1901\n3\nAU-1\nAustralian Championships Women’s Tennis: Beryl Penrose wins her only Australian singles title; beats Thelma Coyne Long\n6-4, 6-3\n1955\n6\nAU-2\nCricket World Cup, Melbourne (MCG): Australia defeats fellow host New Zealand by 7 wickets to win their 5th title; Player of\nSeries: Mitchel Starc\n2015\n8\nAU-3\nTable 6: Three additionally constructed groups using events from different countries.\nThe comparison shows that the inference time for TSPRank\nincreases exponentially with the number of ranking entities in a\ngroup. This increase is primarily due to the discrete TSP solver,\nas indicated by the overlapping blue and red lines. The blue line\nrepresents the time taken by the TSP solver, while the red line shows\nthe total inference time for a ranking group. When the group size\nreaches 100, approximately 99.8% of the inference time is consumed\nby the solver. The encoding time from the input to the adjacency\nmatrix remains similar to that of Rankformer (purple).\nE\nCOMPLETE STOCKS RANKING RESULTS\nFOR SECTORS\nTable 7 to 16 presents the comprehensive results for each sector in\nNASDAQ and NYSE after filtering.\nF\nMQ2008 COMPLETE RESULTS\nTable 17 presents the detailed performance results on the MQ2008\ndataset across different folds.\nTSPRank (solver only)\nTSPRank\nRankformer\n5\n10\n30\n50\n100\n0.0\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\nGroup Size\nInference Time In Seconds\n(per group)\nFigure 5: Mean inference time per ranking group for\nTSPRank and Rankformer on OTD2 across group sizes of 5,\n10, 30, 50, and 100. The blue (TSPRank solver only) and red\n(TSPRank) lines overlap with minor differences.\n\nTSPRank: Bridging Pairwise and Listwise Methods with a Bilinear Travelling Salesman Model\nKDD ’25, August 3–7, 2025, Toronto, Canada\nSector\nStocks\n𝜏\nIRR@1\nSR@1\nMAP@1\nIRR@3\nSR@3\nMAP@3\nIRR@5\nSR@5\nMAP@5\nComputer Manufacturing\n5\n-0.0521\n-0.3767\n-1.2666\n0.1857\n0.1037\n0.5894\n0.4529\n0.2167\n1.3724\n1.0000\nTransportation Services\n5\n-0.0185\n-0.3402\n-1.1114\n0.1941\n0.2663\n1.2239\n0.4590\n0.1263\n0.7757\n1.0000\nMedical/Dental Instruments\n17\n0.0227\n-0.1845\n-0.2096\n0.1055\n0.2604\n1.2060\n0.1519\n0.3940\n2.0538\n0.1922\nProperty-Casualty Insurers\n19\n0.0044\n-0.3242\n-0.5479\n0.1055\n-0.1942\n-0.4679\n0.2075\n-0.2643\n-1.0239\n0.2131\nMedical Specialities\n5\n-0.0101\n-0.0157\n0.0948\n0.1814\n0.0702\n0.4433\n0.4902\n-0.0402\n-0.1500\n1.0000\nBiotechnology: Biological Products (No Diagnostic Substances)\n12\n0.0288\n0.5664\n1.1922\n0.1224\n0.7839\n2.1772\n0.2253\n0.4882\n1.7150\n0.3138\nTelecommunications Equipment\n16\n-0.0046\n-0.6169\n-1.1101\n0.1646\n-0.2057\n-0.4332\n0.1718\n-0.1449\n-0.4478\n0.2132\nMedical/Nursing Services\n6\n0.0507\n1.0367\n1.8435\n0.1688\n0.7042\n2.3042\n0.4062\n0.4471\n1.8070\n0.7530\nWater Supply\n9\n0.0131\n0.2849\n1.0457\n0.1561\n0.2404\n1.1933\n0.2417\n0.2146\n1.1336\n0.4176\nReal Estate Investment Trusts\n8\n-0.0084\n-0.0165\n-0.0359\n0.1055\n0.0948\n0.8628\n0.2625\n0.0099\n0.1480\n0.4738\nBusiness Services\n17\n0.0130\n0.4041\n1.1789\n0.1266\n0.2231\n1.1491\n0.1589\n0.3422\n1.7452\n0.1987\nMajor Pharmaceuticals\n29\n0.0008\n0.2889\n0.7399\n0.0970\n0.7151\n1.4622\n0.1273\n0.4020\n1.2343\n0.1419\nFarming/Seeds/Milling\n6\n0.0227\n0.1512\n0.7310\n0.1688\n-0.0104\n0.0358\n0.3945\n0.0634\n0.4711\n0.7495\nIndustrial Specialties\n11\n0.0346\n2.0118\n4.1591\n0.1224\n0.7883\n2.8012\n0.2304\n0.4046\n2.0223\n0.3336\nAir Freight/Delivery Services\n6\n-0.0014\n-0.0397\n0.0735\n0.1899\n-0.0147\n0.0708\n0.3680\n0.0704\n0.4319\n0.7407\nElectrical Products\n13\n-0.0202\n-0.2313\n-0.6316\n0.0675\n-0.0352\n-0.0250\n0.1517\n0.0833\n0.5303\n0.2264\nTelevision Services\n8\n-0.0054\n-0.0664\n-0.0262\n0.1224\n-0.1397\n-0.4674\n0.2876\n-0.0528\n-0.1493\n0.4848\nInvestment Bankers/Brokers/Service\n18\n0.0195\n1.5618\n3.0264\n0.1899\n0.2890\n1.8445\n0.2187\n0.2075\n1.3520\n0.2438\nCatalog/Specialty Distribution\n7\n0.0210\n-0.0168\n0.1895\n0.1814\n0.5484\n1.8405\n0.3354\n0.4288\n1.8188\n0.5961\nSavings Institutions\n20\n0.0460\n0.5287\n1.5253\n0.1181\n0.3299\n1.5116\n0.1646\n0.2436\n1.2962\n0.1981\nOther Consumer Services\n9\n0.0079\n-0.0556\n0.3305\n0.2532\n-0.2156\n-0.6957\n0.2904\n-0.0076\n0.0782\n0.4044\nAuto Parts:O.E.M.\n6\n-0.0104\n-0.1260\n-0.1430\n0.2152\n-0.1427\n-0.5708\n0.3638\n0.0074\n0.1431\n0.7229\nTrucking Freight/Courier Services\n11\n0.0265\n0.6905\n1.5795\n0.1772\n0.4522\n1.4994\n0.2501\n0.5216\n1.8957\n0.3417\nRadio And TV Broadcasting And Communications Equipment\n10\n-0.0055\n0.1535\n0.5546\n0.0970\n0.0259\n0.2365\n0.2168\n0.2805\n1.2102\n0.3377\nBiotechnology: Electromedical & Electrotherapeutic Apparatus\n5\n0.0513\n1.1212\n2.2247\n0.2532\n0.8664\n2.9716\n0.5070\n0.3760\n1.9405\n1.0000\nHome Furnishings\n8\n0.0303\n-0.1578\n-0.3445\n0.1308\n0.1396\n0.6085\n0.2752\n0.1764\n0.8462\n0.4762\nMajor Chemicals\n7\n-0.0118\n-0.3026\n-0.8089\n0.1730\n0.0614\n0.3825\n0.3291\n0.0943\n0.6049\n0.5455\nOther Specialty Stores\n8\n0.0027\n0.4400\n1.1201\n0.1561\n-0.1071\n-0.3697\n0.2623\n0.0242\n0.2259\n0.4928\nComputer Software: Programming, Data Processing\n7\n-0.0118\n-0.1717\n-0.2653\n0.2363\n0.4192\n1.6818\n0.3425\n0.2852\n1.5359\n0.5278\nRestaurants\n20\n-0.0264\n-0.4583\n-1.2790\n0.0464\n-0.0233\n0.0328\n0.1416\n-0.0919\n-0.3906\n0.1653\nAutomotive Aftermarket\n6\n0.0059\n0.0265\n0.2472\n0.1646\n0.1734\n0.9593\n0.3872\n0.2190\n1.3142\n0.7483\nInvestment Managers\n5\n0.0092\n0.2662\n1.3199\n0.2236\n0.1422\n0.9601\n0.4869\n0.0976\n0.7306\n1.0000\nOil Refining/Marketing\n6\n-0.0132\n-0.2807\n-1.0433\n0.2785\n0.1007\n0.5836\n0.3687\n0.1559\n0.9894\n0.6879\nReal Estate\n7\n0.0226\n0.3281\n1.2869\n0.1857\n0.2733\n1.6266\n0.3202\n0.2303\n1.5590\n0.6019\nApparel\n8\n-0.0081\n0.0019\n0.2242\n0.1308\n0.3005\n1.1491\n0.2600\n0.1953\n0.9464\n0.4672\nOil & Gas Production\n6\n-0.0036\n-0.1716\n-0.3582\n0.1730\n-0.3052\n-1.1493\n0.3697\n-0.2423\n-0.8614\n0.7456\nComputer Communications Equipment\n5\n-0.0025\n0.8757\n1.9336\n0.2152\n0.2596\n1.3220\n0.4681\n0.0383\n0.3025\n1.0000\nClothing/Shoe/Accessory Stores\n8\n-0.0153\n-0.1938\n-0.2218\n0.1730\n-0.2163\n-0.4854\n0.2675\n-0.0573\n-0.0205\n0.4725\nCommercial Banks\n5\n0.0034\n0.0180\n0.1952\n0.1561\n0.2602\n1.4412\n0.5117\n0.1656\n0.9570\n1.0000\nHospital/Nursing Management\n5\n-0.0244\n0.0170\n0.3074\n0.2278\n0.1864\n0.9844\n0.4473\n0.2216\n1.3716\n1.0000\nBanks\n5\n0.0689\n0.4518\n1.8758\n0.2194\n0.3074\n1.6594\n0.5326\n0.0939\n0.6403\n1.0000\nProfessional Services\n6\n0.0350\n-0.2014\n-0.6058\n0.1646\n0.2080\n1.1435\n0.3901\n0.1859\n1.1313\n0.7501\nPackaged Foods\n7\n0.0162\n-0.0081\n0.1270\n0.1688\n-0.0930\n-0.4279\n0.3333\n-0.0692\n-0.3715\n0.5875\nMetal Fabrications\n12\n-0.0010\n-0.1004\n-0.1038\n0.1392\n0.1738\n0.8350\n0.2014\n0.2037\n1.0968\n0.2687\nDiversified Commercial Services\n6\n0.0294\n0.0471\n0.3382\n0.2658\n0.5017\n2.1019\n0.4004\n0.2662\n1.5863\n0.7258\nComputer peripheral equipment\n6\n0.0434\n0.3923\n1.0476\n0.2110\n0.2852\n1.2401\n0.4163\n0.2432\n1.3341\n0.7431\nSteel/Iron Ore\n7\n0.0250\n0.6945\n1.8428\n0.1814\n0.4356\n1.7598\n0.3472\n0.1355\n0.7523\n0.5850\nHotels/Resorts\n5\n0.0471\n0.9652\n2.2147\n0.2405\n1.2521\n4.3657\n0.5136\n0.8753\n3.8558\n1.0000\nBiotechnology: In Vitro & In Vivo Diagnostic Substances\n5\n0.0126\n0.3358\n0.9351\n0.1857\n0.5339\n1.9262\n0.4754\n0.4424\n2.1666\n1.0000\nElectronic Components\n8\n0.0081\n0.5326\n1.3140\n0.1350\n0.7561\n2.3124\n0.2850\n0.7520\n2.7036\n0.4646\nAverage\n9.12\n0.0094\n0.1947\n0.5341\n0.1690\n0.2366\n0.9881\n0.3254\n0.1892\n0.9682\n0.5871\nTable 7: Performance of baseline model proposed in [17] on NASDAQ\nG\nOTD2 COMPLETE RESULTS\nTable 18 shows the detailed performance results on the OTD2\ndataset with five different random group allocations.\n\nKDD ’25, August 3–7, 2025, Toronto, Canada\nWeixian Waylon Li, Yftah Ziser, Yifei Xie, Shay B. Cohen, and Tiejun Ma\nSector\nStocks\n𝜏\nIRR@1\nSR@1\nMAP@1\nIRR@3\nSR@3\nMAP@3\nIRR@5\nSR@5\nMAP@5\nBiotechnology: Laboratory Analytical Instruments\n5\n0.0244\n0.9165\n2.6132\n0.2447\n0.5556\n3.2469\n0.4930\n0.4553\n3.1498\n1.0000\nDiversified Commercial Services\n9\n0.0315\n1.9463\n2.2132\n0.2827\n1.0483\n2.8712\n0.3033\n0.7726\n2.9765\n0.3992\nOther Specialty Stores\n11\n-0.0083\n-0.2757\n-0.4046\n0.1350\n0.1972\n0.7898\n0.2220\n0.2008\n0.9486\n0.3136\nInvestment Managers\n18\n0.0147\n1.2026\n3.1766\n0.1224\n0.7153\n3.3275\n0.1547\n0.5711\n3.2101\n0.2090\nElectrical Products\n13\n0.0021\n0.2232\n0.7774\n0.1266\n0.1747\n0.9553\n0.1699\n0.2038\n1.2445\n0.2505\nMajor Pharmaceuticals\n18\n0.0083\n-0.1707\n-0.0414\n0.1730\n-0.1365\n-0.3281\n0.2218\n-0.0340\n-0.0488\n0.2218\nOther Pharmaceuticals\n5\n0.0420\n0.7478\n2.6057\n0.2700\n0.2195\n1.2131\n0.4916\n0.1719\n1.0601\n1.0000\nAutomotive Aftermarket\n10\n0.0289\n0.2186\n0.8903\n0.0717\n0.1810\n0.7936\n0.2117\n0.1168\n0.5851\n0.3680\nPrecious Metals\n11\n-0.0163\n0.6813\n1.6358\n0.1857\n0.0364\n0.2783\n0.2150\n0.0238\n0.2233\n0.3088\nPublishing\n5\n0.0151\n-0.4553\n-1.1204\n0.2743\n-0.1287\n-0.3477\n0.4744\n-0.1218\n-0.5510\n1.0000\nMilitary/Government/Technical\n11\n0.0094\n0.3709\n1.3192\n0.1013\n0.2765\n1.3624\n0.1962\n0.1733\n1.0585\n0.3280\nBusiness Services\n22\n0.0371\n0.8236\n2.3041\n0.0633\n0.5385\n2.6426\n0.1423\n0.6044\n3.6581\n0.1825\nPackaged Foods\n16\n0.0130\n0.0371\n0.3576\n0.1055\n0.2376\n1.1822\n0.1892\n0.2100\n1.2396\n0.2425\nLife Insurance\n17\n0.0316\n0.4408\n1.1822\n0.1730\n0.3049\n1.3894\n0.1927\n0.4008\n2.1153\n0.2161\nPower Generation\n15\n-0.0011\n-0.2409\n-1.1783\n0.1181\n0.0223\n0.2317\n0.1723\n0.0708\n0.6655\n0.2197\nClothing/Shoe/Accessory Stores\n15\n0.0175\n1.9787\n2.2021\n0.1097\n0.3421\n0.9112\n0.1711\n0.1680\n0.6053\n0.2362\nMedical Specialities\n11\n0.0526\n0.2179\n0.7375\n0.2194\n0.5787\n2.5074\n0.2525\n0.4993\n2.7790\n0.3406\nProperty-Casualty Insurers\n30\n0.0192\n0.2673\n0.7250\n0.1561\n0.0009\n0.1354\n0.1425\n0.0476\n0.3467\n0.1597\nAccident &Health Insurance\n5\n-0.0143\n0.4029\n1.0810\n0.2785\n0.4239\n2.0508\n0.4489\n0.2645\n1.7726\n1.0000\nFarming/Seeds/Milling\n7\n0.0286\n0.5901\n2.1545\n0.2110\n0.0935\n0.7004\n0.3469\n0.0952\n0.7942\n0.5747\nEngineering & Construction\n5\n0.0126\n-0.4365\n-0.4714\n0.3080\n-0.0482\n0.0147\n0.4684\n-0.0339\n-0.0130\n1.0000\nAerospace\n9\n0.0033\n0.0075\n0.2826\n0.2110\n0.2362\n1.0729\n0.2651\n0.3670\n1.9615\n0.3881\nIndustrial Specialties\n9\n0.0000\n1.0994\n1.8806\n0.2025\n0.4923\n1.9735\n0.2921\n0.3469\n1.9804\n0.3838\nSpecialty Insurers\n6\n0.0311\n0.4101\n2.1419\n0.2236\n0.3361\n2.9795\n0.3976\n0.3112\n3.1113\n0.7424\nMajor Chemicals\n29\n0.0367\n2.0708\n1.9914\n0.0591\n0.8546\n2.3885\n0.1067\n0.7252\n2.8721\n0.1438\nIntegrated oil Companies\n19\n0.0051\n-0.1042\n-0.0241\n0.1181\n0.2789\n1.1388\n0.1840\n0.2697\n1.2332\n0.2238\nAir Freight/Delivery Services\n8\n0.0255\n-0.1557\n0.0996\n0.2152\n0.2922\n1.1280\n0.3223\n0.1947\n1.0094\n0.4667\nAuto Parts:O.E.M.\n18\n0.0028\n0.0070\n0.1948\n0.1308\n0.0986\n0.5461\n0.1505\n0.1639\n0.8894\n0.1828\nMetal Fabrications\n23\n-0.0221\n-0.2684\n-0.7043\n0.0802\n-0.1461\n-0.4471\n0.1493\n-0.0714\n-0.2014\n0.1765\nProfessional Services\n11\n0.0264\n0.3941\n1.4152\n0.1181\n0.4917\n2.3416\n0.1934\n0.4289\n2.3950\n0.3339\nConsumer Electronics/Appliances\n6\n0.0177\n0.0551\n0.3653\n0.2152\n0.2219\n1.5692\n0.3870\n0.1651\n1.4599\n0.7282\nFluid Controls\n7\n0.0054\n0.4329\n1.2246\n0.1899\n0.0558\n0.3530\n0.3397\n0.1384\n0.7871\n0.5731\nOther Consumer Services\n17\n0.0035\n0.2075\n0.6701\n0.1350\n-0.0566\n-0.0291\n0.1894\n0.0480\n0.3380\n0.2213\nSteel/Iron Ore\n9\n0.0161\n1.3380\n1.9147\n0.1730\n0.7475\n1.9947\n0.2719\n0.2903\n1.1482\n0.4063\nOil/Gas Transmission\n6\n0.0597\n0.1326\n0.7732\n0.1941\n0.2167\n1.7503\n0.4048\n0.1632\n1.5104\n0.7235\nPlastic Products\n6\n0.0434\n0.5573\n1.8102\n0.2068\n0.2234\n1.1718\n0.4102\n0.2424\n1.6670\n0.7250\nAgricultural Chemicals\n7\n-0.0338\n-0.0122\n0.0616\n0.1308\n-0.0179\n0.0328\n0.3043\n0.0169\n0.1883\n0.5500\nContainers/Packaging\n9\n0.0532\n0.3567\n1.6435\n0.1857\n0.4655\n2.9107\n0.2787\n0.3857\n2.8297\n0.4273\nWater Supply\n7\n0.0738\n0.7212\n1.9706\n0.2489\n0.6259\n2.6691\n0.3610\n0.5509\n2.8809\n0.6004\nFinance: Consumer Services\n20\n-0.0260\n0.2587\n0.9367\n0.1097\n0.3842\n1.5753\n0.1486\n-0.0273\n-0.0406\n0.1818\nCommercial Banks\n21\n0.0054\n0.2928\n1.1736\n0.1055\n0.4938\n2.5922\n0.1517\n0.4329\n2.4692\n0.1838\nMedical/Dental Instruments\n12\n0.0329\n0.7236\n2.3267\n0.1477\n0.7127\n3.6677\n0.2138\n0.4851\n3.0057\n0.3029\nComputer Software: Prepackaged Software\n11\n0.0123\n-0.2829\n-0.3307\n0.1941\n0.2058\n0.8394\n0.2593\n0.3625\n1.6677\n0.3238\nOil Refining/Marketing\n9\n-0.0159\n0.1866\n0.6283\n0.2447\n-0.0744\n-0.1300\n0.2857\n-0.1153\n-0.5105\n0.3784\nHotels/Resorts\n10\n0.0259\n0.7732\n3.1388\n0.1350\n0.5796\n3.2348\n0.2466\n0.4231\n2.9367\n0.3681\nRestaurants\n7\n-0.0202\n-0.0501\n-0.0017\n0.1899\n-0.1252\n-0.5018\n0.3136\n-0.0738\n-0.3704\n0.5521\nDepartment/Specialty Retail Stores\n8\n-0.0060\n-0.1601\n-0.1885\n0.1603\n-0.0338\n0.0994\n0.3261\n-0.0367\n-0.0017\n0.4595\nMarine Transportation\n14\n-0.0003\n0.6801\n1.3866\n0.1603\n-0.0446\n0.0176\n0.2203\n0.1103\n0.5606\n0.2719\nEDP Services\n11\n0.0025\n0.4429\n1.0640\n0.1899\n0.0527\n0.3354\n0.2445\n0.0562\n0.3661\n0.3146\nHospital/Nursing Management\n10\n-0.0374\n0.5054\n0.9916\n0.1941\n-0.0250\n0.1177\n0.2586\n0.0100\n0.1850\n0.3317\nSavings Institutions\n6\n0.0412\n0.5441\n2.1445\n0.2236\n0.3033\n1.9788\n0.4058\n0.1754\n1.4319\n0.7565\nInvestment Bankers/Brokers/Service\n13\n-0.0064\n0.2290\n0.8349\n0.1181\n-0.0216\n-0.0215\n0.1873\n0.0205\n0.2107\n0.2678\nMeat/Poultry/Fish\n5\n-0.0151\n-0.2439\n-0.6973\n0.2743\n0.0403\n0.3354\n0.4512\n0.0990\n0.8471\n1.0000\nBeverages (Production/Distribution)\n12\n0.0239\n0.2351\n1.0409\n0.1013\n0.2266\n1.5338\n0.2250\n0.2515\n1.9701\n0.2991\nHomebuilding\n16\n0.0310\n1.6988\n3.3707\n0.1603\n0.9321\n3.4975\n0.1765\n1.0189\n4.3494\n0.2300\nShoe Manufacturing\n5\n0.0429\n1.4649\n1.9803\n0.2658\n0.4093\n1.3059\n0.5056\n0.3139\n1.3117\n1.0000\nConstruction/Ag Equipment/Trucks\n6\n0.0423\n0.5257\n1.4138\n0.1772\n0.5199\n2.0191\n0.3840\n0.4947\n2.1520\n0.7582\nReal Estate\n13\n0.0009\n-0.0317\n-0.0225\n0.0759\n0.1550\n1.0338\n0.1716\n0.1310\n1.0304\n0.2399\nPackage Goods/Cosmetics\n10\n-0.0003\n-0.0312\n0.0688\n0.1477\n0.0314\n0.2598\n0.2396\n0.2293\n1.3812\n0.3537\nOilfield Services/Equipment\n8\n0.0162\n-0.1475\n-0.2068\n0.1772\n-0.3710\n-1.2420\n0.3026\n-0.3021\n-1.2370\n0.4645\nPaper\n8\n0.0141\n0.6179\n1.8996\n0.2405\n0.2799\n1.4098\n0.3134\n0.1059\n0.6770\n0.4843\nMining & Quarrying of Nonmetallic Minerals (No Fuels)\n6\n0.0468\n-0.0296\n0.1624\n0.2954\n0.0354\n0.2772\n0.4271\n0.0090\n0.1427\n0.7184\nRailroads\n10\n-0.0005\n0.4472\n1.7451\n0.1477\n0.3417\n1.6340\n0.2414\n0.2757\n1.6390\n0.3544\nHome Furnishings\n8\n0.0309\n0.3454\n1.1039\n0.2025\n0.2405\n1.0716\n0.3136\n0.1870\n1.0300\n0.4658\nApparel\n10\n-0.0188\n-0.5308\n-1.3461\n0.1603\n0.0835\n0.4380\n0.2529\n0.1563\n0.7771\n0.3381\nOffice Equipment/Supplies/Services\n9\n0.0418\n0.4468\n1.4524\n0.1646\n-0.0953\n-0.3830\n0.2719\n-0.0194\n-0.0141\n0.4290\nForest Products\n5\n0.0311\n0.9493\n2.0567\n0.2785\n0.5285\n2.1856\n0.4836\n0.3948\n1.9793\n1.0000\nAuto Manufacturing\n9\n0.0282\n0.5113\n1.4388\n0.2152\n0.1761\n0.9958\n0.2564\n0.3446\n2.0070\n0.4000\nServices-Misc. Amusement & Recreation\n6\n0.0787\n0.8940\n2.7186\n0.2616\n0.5470\n3.0031\n0.4278\n0.3861\n2.8966\n0.7456\nSemiconductors\n5\n0.0361\n1.1884\n2.5332\n0.2489\n0.4766\n1.9157\n0.4909\n0.3035\n1.5702\n1.0000\nAverage\n10.97\n0.0162\n0.4170\n1.0755\n0.1791\n0.2574\n1.2367\n0.2841\n0.2257\n1.3186\n0.4649\nTable 8: Performance of baseline model proposed in [17] on NYSE\n\nTSPRank: Bridging Pairwise and Listwise Methods with a Bilinear Travelling Salesman Model\nKDD ’25, August 3–7, 2025, Toronto, Canada\nSector\nStocks\n𝜏\nIRR@1\nSR@1\nMAP@1\nIRR@3\nSR@3\nMAP@3\nIRR@5\nSR@5\nMAP@5\nComputer Manufacturing\n5\n0.0143\n-0.0477\n0.0634\n0.2658\n0.1977\n1.0821\n0.4838\n0.1648\n1.0999\n1.0000\nTransportation Services\n5\n0.0303\n-0.3902\n-1.3876\n0.2405\n-0.3105\n-1.6243\n0.4913\n0.0701\n0.4840\n1.0000\nMedical/Dental Instruments\n17\n0.0164\n1.2784\n2.6419\n0.0591\n0.2390\n1.0163\n0.1275\n0.0349\n0.2789\n0.1781\nProperty-Casualty Insurers\n19\n0.0438\n-0.4535\n-0.9007\n0.1392\n-0.2711\n-1.1097\n0.1636\n-0.2591\n-1.3919\n0.1832\nMedical Specialities\n5\n0.0286\n-0.3505\n-0.5935\n0.2321\n-0.3086\n-1.5448\n0.5000\n-0.1143\n-0.6432\n1.0000\nBiotechnology: Biological Products (No Diagnostic Substances)\n12\n0.0167\n-0.5780\n-0.9332\n0.1224\n-0.3050\n-1.1125\n0.1941\n-0.1622\n-0.6921\n0.2982\nTelecommunications Equipment\n16\n-0.0026\n-0.7386\n-1.5655\n0.1435\n-0.4117\n-1.4491\n0.1535\n-0.3187\n-1.4648\n0.1932\nMedical/Nursing Services\n6\n-0.0149\n-0.0497\n-0.0130\n0.2110\n0.1909\n0.7797\n0.3657\n0.1880\n0.9182\n0.7504\nWater Supply\n9\n0.0138\n-0.2709\n-0.4976\n0.1181\n0.2231\n1.0461\n0.2353\n0.2432\n1.2927\n0.4097\nReal Estate Investment Trusts\n8\n0.0090\n-0.3951\n-2.2191\n0.1139\n-0.0881\n-0.5507\n0.2759\n-0.0085\n-0.0022\n0.4790\nBusiness Services\n17\n0.0134\n0.7775\n1.8770\n0.0759\n0.1112\n0.5812\n0.1421\n0.2183\n1.2653\n0.2053\nMajor Pharmaceuticals\n29\n-0.0131\n-0.3425\n-0.1044\n0.0633\n0.1920\n0.6252\n0.1113\n0.2564\n0.8491\n0.1307\nFarming/Seeds/Milling\n6\n0.0070\n-0.2211\n-0.6017\n0.1435\n-0.0610\n-0.2920\n0.3863\n0.0426\n0.3586\n0.7456\nIndustrial Specialties\n11\n0.0141\n1.9566\n3.0194\n0.0844\n1.2322\n4.2824\n0.1960\n0.8835\n4.1077\n0.3188\nAir Freight/Delivery Services\n6\n-0.0120\n-0.0647\n-0.0398\n0.1603\n-0.1099\n-0.4199\n0.3741\n-0.0872\n-0.3385\n0.7380\nElectrical Products\n13\n0.0040\n0.2195\n0.7759\n0.0802\n-0.0645\n-0.2118\n0.1458\n-0.0673\n-0.3283\n0.2409\nTelevision Services\n8\n0.0048\n-0.4989\n-1.9251\n0.1097\n-0.3301\n-1.6766\n0.2724\n-0.2817\n-1.6943\n0.4904\nInvestment Bankers/Brokers/Service\n18\n0.0049\n-0.4233\n-1.4110\n0.1435\n-0.4133\n-2.8575\n0.1620\n-0.2782\n-2.1985\n0.1965\nCatalog/Specialty Distribution\n7\n0.0018\n0.0361\n0.3542\n0.1392\n0.4392\n1.4817\n0.3129\n0.3009\n1.3728\n0.5969\nSavings Institutions\n20\n0.0073\n-0.5940\n-2.4198\n0.0380\n-0.2556\n-1.3820\n0.0956\n-0.1932\n-1.1429\n0.1436\nOther Consumer Services\n9\n0.0184\n-0.5178\n-1.9858\n0.1688\n-0.2258\n-1.0093\n0.2571\n-0.0715\n-0.3173\n0.4181\nAuto Parts:O.E.M.\n6\n0.0048\n0.1345\n0.5066\n0.1730\n0.0763\n0.4337\n0.3884\n-0.0166\n0.0164\n0.7414\nTrucking Freight/Courier Services\n11\n0.0228\n0.0093\n0.2164\n0.1519\n0.0257\n0.2385\n0.2135\n0.0142\n0.1851\n0.3134\nRadio And TV Broadcasting And Communications Equipment\n10\n-0.0251\n1.3940\n2.4058\n0.1139\n0.5622\n1.8837\n0.2053\n0.4707\n1.9249\n0.3386\nBiotechnology: Electromedical & Electrotherapeutic Apparatus\n5\n-0.0219\n0.3264\n1.1313\n0.1646\n0.5856\n2.5303\n0.4655\n0.3959\n2.0268\n1.0000\nHome Furnishings\n8\n0.0183\n-0.7652\n-2.4810\n0.1308\n-0.4145\n-1.7633\n0.2893\n-0.2704\n-1.3645\n0.4916\nMajor Chemicals\n7\n0.0006\n0.4466\n1.4170\n0.1308\n-0.1249\n-0.6651\n0.3113\n-0.1602\n-0.9885\n0.5976\nOther Specialty Stores\n8\n-0.0114\n-0.6167\n-2.5278\n0.1392\n-0.3897\n-2.4056\n0.2696\n-0.2322\n-1.4418\n0.4623\nComputer Software: Programming, Data Processing\n7\n-0.0158\n0.1778\n0.6673\n0.2025\n0.0463\n0.3354\n0.3059\n0.1507\n0.9838\n0.5630\nRestaurants\n20\n-0.0096\n-0.3113\n-1.1495\n0.0675\n-0.2282\n-1.0070\n0.1078\n-0.1540\n-0.7702\n0.1484\nAutomotive Aftermarket\n6\n-0.0081\n-0.1409\n-0.4848\n0.1646\n0.0733\n0.4952\n0.3854\n0.0569\n0.4265\n0.7266\nInvestment Managers\n5\n-0.0412\n-0.0107\n0.1591\n0.1899\n0.0263\n0.2434\n0.4667\n0.0409\n0.3532\n1.0000\nOil Refining/Marketing\n6\n0.0143\n0.6837\n1.9976\n0.1266\n0.2552\n1.4019\n0.3999\n0.0009\n0.0929\n0.7491\nReal Estate\n7\n0.0154\n0.2837\n1.1850\n0.1181\n0.1146\n0.7490\n0.3291\n0.2638\n1.7563\n0.5990\nApparel\n8\n-0.0267\n-0.1962\n-0.4159\n0.1435\n-0.2422\n-1.1042\n0.2485\n-0.3126\n-1.7706\n0.4580\nOil & Gas Production\n6\n-0.0177\n0.0560\n0.3511\n0.1603\n-0.1765\n-0.4981\n0.3704\n-0.2671\n-1.0112\n0.7382\nComputer Communications Equipment\n5\n0.0395\n0.3573\n1.1938\n0.2405\n0.1316\n0.8054\n0.5035\n0.0113\n0.1607\n1.0000\nClothing/Shoe/Accessory Stores\n8\n0.0252\n-0.5559\n-1.6409\n0.1519\n-0.5269\n-2.1383\n0.2799\n-0.3526\n-1.4378\n0.4914\nCommercial Banks\n5\n0.0580\n-0.1046\n-0.2805\n0.2236\n0.0350\n0.2759\n0.4944\n0.1142\n0.7075\n1.0000\nHospital/Nursing Management\n5\n0.0092\n-0.0562\n-0.0759\n0.2405\n0.1333\n0.7221\n0.4655\n0.1524\n0.9918\n1.0000\nBanks\n5\n0.0059\n-0.2917\n-1.6896\n0.2025\n-0.1515\n-0.9863\n0.4880\n0.1027\n0.6914\n1.0000\nProfessional Services\n6\n0.0188\n-0.5588\n-2.1915\n0.1224\n-0.4077\n-2.9101\n0.3978\n0.0101\n0.1476\n0.7492\nPackaged Foods\n7\n0.0154\n1.0455\n2.4185\n0.1688\n0.2836\n1.3385\n0.3228\n-0.0336\n-0.1327\n0.5925\nMetal Fabrications\n12\n0.0239\n1.4819\n2.5295\n0.1139\n0.9541\n2.9503\n0.1934\n0.2094\n1.0487\n0.2905\nDiversified Commercial Services\n6\n0.0048\n-0.5072\n-1.6332\n0.2321\n-0.0854\n-0.3199\n0.3924\n0.2212\n1.3537\n0.7200\nComputer peripheral equipment\n6\n0.0546\n1.0655\n2.2080\n0.1983\n0.1955\n0.9741\n0.4048\n0.1572\n0.9538\n0.7455\nSteel/Iron Ore\n7\n0.0054\n-0.2630\n-0.6538\n0.1688\n-0.0995\n-0.3004\n0.3380\n-0.0112\n0.0507\n0.5844\nHotels/Resorts\n5\n-0.0235\n-0.1496\n-0.4177\n0.2152\n0.2568\n1.2714\n0.4735\n0.6803\n3.0630\n1.0000\nBiotechnology: In Vitro & In Vivo Diagnostic Substances\n5\n0.0454\n-0.2929\n-0.5666\n0.2278\n0.5973\n2.0998\n0.5101\n0.3823\n1.9659\n1.0000\nElectronic Components\n8\n-0.0312\n0.5785\n1.3210\n0.1603\n0.5248\n1.9204\n0.2548\n0.3378\n1.5919\n0.4711\nAverage\n9.12\n0.0071\n0.0310\n-0.0873\n0.1539\n0.0340\n0.0445\n0.3144\n0.0505\n0.2678\n0.5858\nTable 9: Complete result table for LambdaMART on NASDAQ.\n\nKDD ’25, August 3–7, 2025, Toronto, Canada\nWeixian Waylon Li, Yftah Ziser, Yifei Xie, Shay B. Cohen, and Tiejun Ma\nSector\nStocks\n𝜏\nIRR@1\nSR@1\nMAP@1\nIRR@3\nSR@3\nMAP@3\nIRR@5\nSR@5\nMAP@5\nBiotechnology: Laboratory Analytical Instruments\n5\n0.0000\n0.6418\n3.0829\n0.1899\n0.4841\n3.4649\n0.4970\n0.4841\n3.4492\n1.0000\nDiversified Commercial Services\n9\n0.0128\n1.5345\n2.2816\n0.1983\n0.6707\n2.3281\n0.2647\n0.4743\n2.2261\n0.4146\nOther Specialty Stores\n11\n0.0016\n-0.4049\n-0.7317\n0.1435\n-0.2758\n-0.8344\n0.2161\n-0.1138\n-0.3821\n0.3255\nInvestment Managers\n18\n0.0280\n-0.0565\n-0.0769\n0.0970\n0.2047\n1.1636\n0.1484\n0.3683\n2.2241\n0.1888\nElectrical Products\n13\n0.0080\n-0.0764\n-0.2386\n0.1055\n-0.0166\n-0.0226\n0.1578\n0.0685\n0.5614\n0.2450\nMajor Pharmaceuticals\n18\n0.0318\n0.7983\n1.4109\n0.1308\n0.1837\n0.8006\n0.1835\n0.1154\n0.6883\n0.2122\nOther Pharmaceuticals\n5\n-0.0143\n-0.0489\n-0.0297\n0.2025\n-0.0429\n-0.1446\n0.4712\n0.1293\n0.8351\n1.0000\nAutomotive Aftermarket\n10\n0.0268\n0.3631\n1.0532\n0.0886\n-0.0249\n0.0486\n0.2075\n-0.0197\n0.0353\n0.3614\nPrecious Metals\n11\n0.0147\n-0.2612\n-0.9794\n0.1139\n-0.2128\n-1.0622\n0.2063\n0.0052\n0.1263\n0.3314\nPublishing\n5\n0.0479\n-0.0885\n-0.1322\n0.2447\n-0.0158\n0.0293\n0.5084\n-0.1535\n-0.7639\n1.0000\nMilitary/Government/Technical\n11\n-0.0206\n0.3135\n1.2221\n0.1181\n0.2572\n1.3468\n0.1880\n0.2948\n1.7646\n0.2961\nBusiness Services\n22\n0.0118\n-0.2033\n-1.0205\n0.0844\n-0.3400\n-2.8763\n0.1045\n-0.2780\n-2.4584\n0.1312\nPackaged Foods\n16\n0.0146\n-0.0450\n-0.0991\n0.0675\n-0.1055\n-0.6338\n0.1153\n-0.0492\n-0.3276\n0.1915\nLife Insurance\n17\n0.0013\n0.4844\n2.2569\n0.0338\n0.9186\n5.5226\n0.1235\n0.7000\n4.8547\n0.1734\nPower Generation\n15\n0.0001\n0.4149\n1.4183\n0.1055\n0.1330\n1.0341\n0.1486\n0.0962\n0.9612\n0.2192\nClothing/Shoe/Accessory Stores\n15\n-0.0152\n-0.3638\n-1.1112\n0.0802\n-0.5180\n-2.2291\n0.1378\n-0.4522\n-1.8764\n0.1949\nMedical Specialities\n11\n0.0163\n0.1157\n0.9983\n0.0549\n0.0511\n0.5236\n0.2002\n0.0434\n0.4638\n0.3105\nProperty-Casualty Insurers\n30\n-0.0150\n-0.3339\n-1.8750\n0.0253\n-0.2293\n-1.7631\n0.0539\n-0.1881\n-1.6600\n0.0851\nAccident &Health Insurance\n5\n0.0193\n0.0647\n0.3770\n0.2658\n0.1197\n0.8376\n0.4862\n0.2289\n1.5754\n1.0000\nFarming/Seeds/Milling\n7\n0.0210\n-0.2092\n-1.0287\n0.1730\n-0.0773\n-0.5290\n0.3408\n-0.0765\n-0.6195\n0.5825\nEngineering & Construction\n5\n-0.0286\n-0.6108\n-1.9237\n0.2236\n-0.3614\n-1.7340\n0.4709\n-0.0749\n-0.2026\n1.0000\nAerospace\n9\n0.0138\n-0.0585\n-0.0292\n0.1435\n0.2664\n1.3216\n0.2480\n0.2080\n1.3286\n0.4100\nIndustrial Specialties\n9\n-0.0093\n0.2417\n0.7658\n0.1308\n0.3355\n1.7741\n0.2419\n0.4916\n2.9676\n0.3970\nSpecialty Insurers\n6\n0.0132\n0.0248\n0.2510\n0.1772\n0.1812\n1.7888\n0.3905\n0.1476\n1.5814\n0.7401\nMajor Chemicals\n29\n-0.0014\n0.9222\n2.1943\n0.0633\n0.2557\n1.3246\n0.0759\n0.2242\n1.4245\n0.1104\nIntegrated oil Companies\n19\n0.0107\n0.1442\n0.6068\n0.1181\n0.2332\n1.1554\n0.1397\n0.2060\n1.1236\n0.1846\nAir Freight/Delivery Services\n8\n0.0123\n0.5049\n1.8273\n0.1603\n-0.0349\n-0.0056\n0.3019\n-0.0296\n-0.0516\n0.4711\nAuto Parts:O.E.M.\n18\n-0.0036\n0.3236\n1.1766\n0.0633\n0.3508\n1.5749\n0.1041\n0.4035\n1.9846\n0.1615\nMetal Fabrications\n23\n0.0044\n0.2061\n0.7621\n0.0844\n0.4328\n1.6071\n0.1085\n0.2989\n1.3637\n0.1329\nProfessional Services\n11\n-0.0002\n0.0308\n0.2546\n0.1392\n0.1195\n0.7118\n0.2135\n0.1413\n0.9830\n0.3149\nConsumer Electronics/Appliances\n6\n0.0244\n0.4636\n1.7942\n0.1899\n0.3072\n2.2109\n0.3929\n0.1913\n1.7115\n0.7528\nFluid Controls\n7\n0.0094\n-0.2719\n-0.7571\n0.1435\n0.0033\n0.1266\n0.3298\n0.0295\n0.2601\n0.5846\nOther Consumer Services\n17\n0.0155\n-0.1323\n0.0756\n0.1097\n-0.2485\n-0.9130\n0.1418\n-0.0400\n-0.0941\n0.1920\nSteel/Iron Ore\n9\n0.0121\n0.1835\n0.5921\n0.1266\n0.2446\n0.8770\n0.2471\n0.2832\n1.1043\n0.4234\nOil/Gas Transmission\n6\n-0.0165\n0.0695\n0.5316\n0.1477\n0.1606\n1.4076\n0.3868\n0.1223\n1.2065\n0.7418\nPlastic Products\n6\n-0.0003\n-0.1394\n-0.2104\n0.1814\n0.0448\n0.3587\n0.3715\n0.2178\n1.5464\n0.7333\nAgricultural Chemicals\n7\n0.0262\n-0.1353\n-0.3462\n0.1561\n0.1867\n0.9687\n0.3371\n0.0902\n0.6374\n0.5874\nContainers/Packaging\n9\n0.0100\n0.4112\n2.4134\n0.1013\n0.2591\n2.1785\n0.2278\n0.2204\n1.9453\n0.4089\nWater Supply\n7\n0.0302\n-0.3861\n-1.7638\n0.1814\n-0.1310\n-0.6964\n0.3469\n0.0101\n0.1464\n0.5939\nFinance: Consumer Services\n20\n0.0096\n0.9553\n2.8125\n0.0422\n0.5232\n2.5844\n0.1184\n0.2217\n1.4814\n0.1665\nCommercial Banks\n21\n0.0075\n0.1036\n0.5447\n0.0506\n0.4271\n2.3475\n0.1055\n0.4649\n3.0711\n0.1418\nMedical/Dental Instruments\n12\n0.0127\n-0.2963\n-1.7528\n0.1139\n-0.2316\n-2.0540\n0.1707\n-0.2241\n-2.1604\n0.2663\nComputer Software: Prepackaged Software\n11\n0.0120\n-0.4054\n-1.0410\n0.0802\n-0.0426\n-0.0959\n0.1878\n0.0912\n0.6130\n0.3252\nOil Refining/Marketing\n9\n0.0049\n-0.4859\n-1.2104\n0.0759\n-0.2478\n-1.1750\n0.2351\n-0.2189\n-1.3731\n0.4055\nHotels/Resorts\n10\n-0.0106\n-0.1800\n-0.6967\n0.1224\n-0.0396\n-0.1907\n0.2023\n0.1254\n0.9986\n0.3454\nRestaurants\n7\n-0.0126\n-0.4359\n-2.0032\n0.1519\n-0.0917\n-0.5576\n0.3139\n-0.0712\n-0.4825\n0.5702\nDepartment/Specialty Retail Stores\n8\n0.0051\n0.0043\n0.2435\n0.1857\n-0.1060\n-0.1541\n0.3040\n-0.1186\n-0.3509\n0.4650\nMarine Transportation\n14\n0.0335\n-0.2724\n-0.6564\n0.0970\n-0.2722\n-1.0105\n0.1756\n-0.1424\n-0.6389\n0.2513\nEDP Services\n11\n-0.0057\n-0.1577\n-0.4264\n0.1055\n0.1571\n0.9432\n0.1845\n0.2683\n1.5957\n0.2959\nHospital/Nursing Management\n10\n0.0193\n4.2295\n3.5191\n0.1097\n0.8279\n2.2462\n0.2389\n0.5408\n1.9074\n0.3636\nSavings Institutions\n6\n0.0205\n-0.0950\n-0.5292\n0.1730\n0.0393\n0.3589\n0.4001\n0.0866\n0.7941\n0.7442\nInvestment Bankers/Brokers/Service\n13\n-0.0240\n0.2734\n1.0000\n0.0802\n0.0255\n0.2335\n0.1606\n-0.0393\n-0.1499\n0.2442\nMeat/Poultry/Fish\n5\n-0.0135\n-0.0616\n-0.1277\n0.2363\n0.1429\n1.0507\n0.4669\n0.1074\n0.9181\n1.0000\nBeverages (Production/Distribution)\n12\n0.0299\n-0.1384\n-0.6496\n0.0802\n-0.0516\n-0.3698\n0.1929\n-0.0390\n-0.3551\n0.2900\nHomebuilding\n16\n0.0151\n-0.2566\n-1.3115\n0.0759\n0.0165\n0.1893\n0.1428\n0.0038\n0.1021\n0.2014\nShoe Manufacturing\n5\n0.0361\n-0.3162\n-0.5245\n0.2236\n-0.1060\n-0.2621\n0.5164\n0.2378\n1.0544\n1.0000\nConstruction/Ag Equipment/Trucks\n6\n-0.0373\n0.1895\n0.7694\n0.1857\n0.3942\n1.5671\n0.3788\n0.4011\n1.8141\n0.7335\nReal Estate\n13\n-0.0286\n-0.6280\n-3.5603\n0.0802\n-0.3128\n-2.2656\n0.1423\n-0.1233\n-0.9755\n0.2367\nPackage Goods/Cosmetics\n10\n-0.0092\n-0.0532\n-0.0795\n0.1013\n0.1455\n1.1054\n0.2028\n0.1955\n1.6992\n0.3396\nOilfield Services/Equipment\n8\n-0.0315\n-0.2869\n-0.8246\n0.1181\n-0.4142\n-1.9334\n0.2386\n-0.3447\n-1.6829\n0.4587\nPaper\n8\n0.0141\n-0.2248\n-0.8357\n0.1266\n-0.1451\n-0.7288\n0.2860\n0.0000\n0.0900\n0.4747\nMining & Quarrying of Nonmetallic Minerals (No Fuels)\n6\n0.0389\n2.0392\n4.2855\n0.1730\n0.5500\n2.5453\n0.3837\n0.1273\n0.8274\n0.7666\nRailroads\n10\n-0.0085\n0.1485\n0.6666\n0.1055\n0.1695\n1.0637\n0.1922\n0.1236\n0.9389\n0.3336\nHome Furnishings\n8\n0.0165\n-0.3182\n-0.7994\n0.1477\n-0.0887\n-0.3797\n0.2792\n-0.0377\n-0.1389\n0.4869\nApparel\n10\n-0.0281\n-0.4196\n-0.8942\n0.1350\n-0.1056\n-0.3244\n0.2353\n0.0245\n0.2272\n0.3297\nOffice Equipment/Supplies/Services\n9\n0.0301\n0.1822\n0.7178\n0.1392\n-0.0653\n-0.1916\n0.2836\n-0.0758\n-0.3325\n0.4270\nForest Products\n5\n-0.0185\n0.0951\n0.5010\n0.1983\n0.2182\n1.1585\n0.4662\n0.3766\n1.8965\n1.0000\nAuto Manufacturing\n9\n-0.0187\n0.1151\n0.5711\n0.1055\n0.0523\n0.4158\n0.2260\n0.0694\n0.5413\n0.3996\nServices-Misc. Amusement & Recreation\n6\n0.0182\n-0.2761\n-1.3759\n0.1899\n0.0169\n0.1929\n0.4046\n0.1916\n1.5817\n0.7536\nSemiconductors\n5\n-0.0118\n-0.4208\n-1.7579\n0.1730\n-0.0284\n-0.0098\n0.4759\n0.4026\n2.0180\n1.0000\nAverage\n10.97\n0.0054\n0.1005\n0.1367\n0.1307\n0.0732\n0.4192\n0.2593\n0.1063\n0.6882\n0.4574\nTable 10: Complete result table for LambdaMART on NYSE.\n\nTSPRank: Bridging Pairwise and Listwise Methods with a Bilinear Travelling Salesman Model\nKDD ’25, August 3–7, 2025, Toronto, Canada\nSector\nStocks\n𝜏\nIRR@1\nSR@1\nMAP@1\nIRR@3\nSR@3\nMAP@3\nIRR@5\nSR@5\nMAP@5\nComputer Manufacturing\n5\n-0.0244\n-0.0458\n0.0585\n0.2110\n0.2554\n1.1537\n0.4627\n0.2167\n1.3724\n1.0000\nTransportation Services\n5\n-0.0193\n-0.3402\n-1.1114\n0.1941\n0.2787\n1.2932\n0.4557\n0.1263\n0.7757\n1.0000\nMedical/Dental Instruments\n17\n0.0492\n0.1590\n0.6044\n0.1055\n0.6454\n2.2254\n0.1592\n0.6764\n2.7925\n0.2023\nProperty-Casualty Insurers\n19\n0.0136\n0.1661\n0.6221\n0.0928\n-0.0236\n0.0176\n0.1306\n-0.1705\n-0.7351\n0.1768\nMedical Specialities\n5\n0.0336\n-0.0239\n0.1681\n0.2405\n0.2459\n1.1755\n0.4768\n-0.0402\n-0.1500\n1.0000\nBiotechnology: Biological Products (No Diagnostic Substances)\n12\n0.0395\n1.4993\n2.0935\n0.1519\n1.4277\n3.3088\n0.2429\n0.5337\n1.8510\n0.3092\nTelecommunications Equipment\n16\n-0.0179\n-0.7585\n-1.6430\n0.1688\n-0.2981\n-0.7723\n0.1779\n-0.1275\n-0.3238\n0.2197\nMedical/Nursing Services\n6\n-0.0311\n0.1104\n0.4698\n0.1561\n0.3651\n1.4513\n0.3659\n0.3374\n1.5209\n0.7409\nWater Supply\n9\n0.0574\n0.4483\n1.3802\n0.2068\n0.5629\n2.3886\n0.2843\n0.3641\n1.8486\n0.4219\nReal Estate Investment Trusts\n8\n-0.0132\n0.0069\n0.1270\n0.0844\n-0.0191\n-0.0712\n0.2595\n-0.0638\n-0.4460\n0.4922\nBusiness Services\n17\n0.0253\n0.4529\n1.0647\n0.1392\n0.5424\n1.9924\n0.1655\n0.6901\n2.8825\n0.2158\nMajor Pharmaceuticals\n29\n0.0079\n-0.1586\n-0.0520\n0.0506\n0.3816\n0.8635\n0.1174\n0.5645\n1.3108\n0.1410\nFarming/Seeds/Milling\n6\n0.0216\n0.3578\n1.1610\n0.1899\n0.1054\n0.6186\n0.3685\n0.1074\n0.7423\n0.7387\nIndustrial Specialties\n11\n0.0355\n2.0407\n2.9100\n0.0886\n1.1427\n3.4837\n0.2028\n0.8774\n3.5009\n0.3327\nAir Freight/Delivery Services\n6\n0.0008\n0.0305\n0.2780\n0.1983\n-0.0337\n-0.0015\n0.3706\n0.0795\n0.4713\n0.7377\nElectrical Products\n13\n0.0238\n0.7368\n1.5589\n0.0675\n0.5567\n1.8610\n0.1782\n0.7503\n2.7229\n0.2683\nTelevision Services\n8\n-0.0102\n-0.1655\n-0.3784\n0.1266\n-0.1655\n-0.5383\n0.2979\n-0.1354\n-0.5403\n0.4825\nInvestment Bankers/Brokers/Service\n18\n0.0182\n0.9022\n2.0099\n0.1688\n0.1769\n1.1874\n0.2114\n0.1941\n1.2786\n0.2410\nCatalog/Specialty Distribution\n7\n0.0354\n0.2672\n0.7606\n0.1435\n0.7167\n1.8853\n0.3401\n0.5044\n1.9389\n0.5866\nSavings Institutions\n20\n0.0530\n0.5454\n1.5980\n0.1224\n0.2679\n1.2659\n0.1615\n0.2020\n1.1164\n0.1943\nOther Consumer Services\n9\n-0.0166\n-0.0931\n-0.2221\n0.1055\n0.1196\n0.7069\n0.2257\n0.1118\n0.7043\n0.3956\nAuto Parts:O.E.M.\n6\n0.0345\n-0.1027\n-0.3203\n0.1055\n-0.0189\n0.0618\n0.3987\n-0.0246\n-0.0228\n0.7652\nTrucking Freight/Courier Services\n11\n0.0244\n0.4114\n0.9919\n0.1899\n0.4502\n1.3182\n0.2658\n0.4701\n1.4809\n0.3332\nRadio And Television Broadcasting And Communications Equipment\n10\n0.0109\n-0.0742\n-0.1502\n0.0633\n0.1295\n0.7907\n0.1845\n-0.0134\n0.0003\n0.3628\nBiotechnology: Electromedical & Electrotherapeutic Apparatus\n5\n0.0496\n1.1587\n2.2743\n0.2532\n0.8958\n3.0769\n0.5075\n0.3760\n1.9405\n1.0000\nHome Furnishings\n8\n0.0285\n-0.2161\n-0.4893\n0.1435\n-0.0517\n-0.0146\n0.2785\n0.0614\n0.3821\n0.4723\nMajor Chemicals\n7\n-0.0138\n-0.2516\n-0.6296\n0.1772\n0.1080\n0.5532\n0.3317\n0.0866\n0.5661\n0.5419\nOther Specialty Stores\n8\n-0.0180\n-0.3415\n-0.4555\n0.2110\n-0.2925\n-0.7834\n0.2745\n-0.0670\n-0.1054\n0.4397\nComputer Software: Programming, Data Processing\n7\n-0.0158\n-0.1693\n-0.2412\n0.2194\n0.1802\n0.8314\n0.3338\n0.3037\n1.6221\n0.5186\nRestaurants\n20\n-0.0124\n-0.3350\n-0.8094\n0.0380\n0.1699\n0.7861\n0.1470\n0.1158\n0.6462\n0.1718\nAutomotive Aftermarket\n6\n0.0675\n0.9524\n2.4494\n0.2489\n0.3451\n1.5889\n0.4456\n0.2365\n1.3197\n0.7386\nInvestment Managers\n5\n-0.0479\n-0.0173\n-0.0278\n0.1308\n0.0694\n0.4809\n0.4447\n0.0976\n0.7306\n1.0000\nOil Refining/Marketing\n6\n-0.0177\n-0.2807\n-1.0433\n0.2785\n0.0871\n0.5231\n0.3664\n0.1192\n0.7835\n0.6866\nReal Estate\n7\n0.0346\n0.0248\n0.2712\n0.1435\n0.3611\n1.8716\n0.3226\n0.3814\n2.2677\n0.6013\nApparel\n8\n-0.0126\n-0.1179\n-0.4358\n0.1055\n-0.0198\n0.0517\n0.2583\n0.1292\n0.7542\n0.4581\nOil & Gas Production\n6\n-0.0317\n-0.3547\n-0.9233\n0.1688\n-0.3303\n-1.1890\n0.3507\n-0.3033\n-1.1135\n0.7115\nComputer Communications Equipment\n5\n0.0084\n1.4289\n2.4003\n0.2405\n0.3316\n1.4066\n0.4632\n0.0383\n0.3025\n1.0000\nClothing/Shoe/Accessory Stores\n8\n-0.0123\n-0.3926\n-0.7858\n0.1435\n-0.1718\n-0.3006\n0.2778\n-0.0946\n-0.1198\n0.4774\nCommercial Banks\n5\n0.0008\n0.2494\n0.8646\n0.2236\n0.2425\n1.0891\n0.4749\n0.1656\n0.9570\n1.0000\nHospital/Nursing Management\n5\n0.0168\n0.4520\n1.3993\n0.2194\n0.5566\n2.6969\n0.5056\n0.2216\n1.3716\n1.0000\nBanks\n5\n0.0975\n0.4188\n1.6950\n0.2194\n0.3821\n1.9376\n0.5333\n0.0939\n0.6403\n1.0000\nProfessional Services\n6\n0.0367\n-0.1459\n-0.4075\n0.1646\n0.2578\n1.3598\n0.3896\n0.2896\n1.7259\n0.7525\nPackaged Foods\n7\n0.0262\n-0.0358\n0.0393\n0.1561\n0.0106\n0.1580\n0.3479\n0.0664\n0.4664\n0.5737\nMetal Fabrications\n12\n0.0107\n0.8319\n1.7550\n0.1266\n0.3500\n1.3203\n0.2131\n0.4291\n1.7411\n0.2848\nDiversified Commercial Services\n6\n0.0451\n0.1541\n0.5682\n0.2743\n0.5603\n2.3008\n0.4030\n0.3485\n2.0433\n0.7311\nComputer peripheral equipment\n6\n0.0076\n0.2860\n0.8418\n0.2152\n0.4543\n1.7633\n0.3826\n0.3222\n1.6209\n0.7227\nSteel/Iron Ore\n7\n-0.0190\n-0.2737\n-0.9245\n0.1097\n-0.1345\n-0.4884\n0.2989\n-0.0798\n-0.2852\n0.5987\nHotels/Resorts\n5\n-0.0109\n0.5641\n2.9180\n0.1646\n0.9370\n3.6587\n0.4780\n0.8753\n3.8558\n1.0000\nBiotechnology: In Vitro & In Vivo Diagnostic Substances\n5\n-0.0151\n0.9486\n2.0263\n0.2110\n0.4172\n1.5755\n0.4665\n0.4424\n2.1666\n1.0000\nElectronic Components\n8\n-0.0069\n0.3731\n1.0121\n0.1392\n0.7566\n2.3061\n0.2789\n0.6594\n2.3433\n0.4611\nAverage\n9.12\n0.0110\n0.2257\n0.5464\n0.1620\n0.2857\n1.1245\n0.3216\n0.2309\n1.0943\n0.5860\nTable 11: Complete result table for Rankformer on NASDAQ.\n\nKDD ’25, August 3–7, 2025, Toronto, Canada\nWeixian Waylon Li, Yftah Ziser, Yifei Xie, Shay B. Cohen, and Tiejun Ma\nSector\nStocks\n𝜏\nIRR@1\nSR@1\nMAP@1\nIRR@3\nSR@3\nMAP@3\nIRR@5\nSR@5\nMAP@5\nBiotechnology: Laboratory Analytical Instruments\n5\n-0.0025\n0.6902\n2.1537\n0.1983\n0.5843\n3.4616\n0.4698\n0.4553\n3.1498\n1.0000\nDiversified Commercial Services\n9\n0.0367\n1.4739\n1.9763\n0.2405\n1.0969\n2.9188\n0.3043\n0.8108\n3.0485\n0.4004\nOther Specialty Stores\n11\n0.0059\n-0.1341\n-0.0301\n0.1519\n0.3229\n1.1175\n0.2370\n0.0706\n0.4060\n0.3223\nInvestment Managers\n18\n0.0376\n0.7707\n2.4018\n0.1139\n0.6134\n3.1095\n0.1526\n0.5251\n3.1464\n0.2086\nElectrical Products\n13\n0.0253\n0.5033\n1.4703\n0.1097\n0.1957\n1.1061\n0.1695\n0.3724\n2.1064\n0.2651\nMajor Pharmaceuticals\n18\n0.0117\n-0.1838\n-0.0680\n0.1772\n-0.1492\n-0.3752\n0.2199\n0.0132\n0.1763\n0.2236\nOther Pharmaceuticals\n5\n-0.0034\n0.3746\n1.4293\n0.2405\n0.1998\n1.1667\n0.4583\n0.1719\n1.0601\n1.0000\nAutomotive Aftermarket\n10\n0.0421\n0.1357\n0.6239\n0.0591\n0.2499\n0.9958\n0.2112\n0.2311\n0.9409\n0.3905\nPrecious Metals\n11\n-0.0154\n-0.2354\n-0.4765\n0.1646\n-0.1428\n-0.5177\n0.1969\n-0.0027\n0.0953\n0.3068\nPublishing\n5\n-0.0160\n0.0131\n0.1672\n0.1013\n-0.0435\n-0.1085\n0.4831\n-0.1218\n-0.5510\n1.0000\nMilitary/Government/Technical\n11\n0.0274\n0.3260\n1.0909\n0.1181\n0.2801\n1.3298\n0.1887\n0.2861\n1.5777\n0.3309\nBusiness Services\n22\n0.0470\n0.5503\n1.6952\n0.0675\n0.6726\n3.2061\n0.1472\n0.6842\n4.0307\n0.1781\nPackaged Foods\n16\n0.0202\n0.0653\n0.4200\n0.1097\n0.3028\n1.2772\n0.1920\n0.2975\n1.5563\n0.2549\nLife Insurance\n17\n0.0321\n0.7816\n1.8057\n0.1814\n0.3132\n1.4290\n0.1920\n0.3749\n1.9991\n0.2148\nPower Generation\n15\n0.0293\n0.0506\n0.3164\n0.1097\n0.1053\n0.7563\n0.1774\n0.1561\n1.3379\n0.2333\nClothing/Shoe/Accessory Stores\n15\n0.0225\n0.6554\n1.1923\n0.0759\n0.1537\n0.5621\n0.1535\n0.1204\n0.5030\n0.2334\nMedical Specialities\n11\n0.0630\n0.1184\n0.5023\n0.2236\n0.5825\n2.4361\n0.2487\n0.5778\n3.0334\n0.3436\nProperty-Casualty Insurers\n30\n0.0222\n0.3422\n0.8457\n0.1561\n0.0831\n0.4595\n0.1430\n0.0884\n0.5538\n0.1626\nAccident &Health Insurance\n5\n0.0160\n0.2131\n1.1893\n0.1899\n0.2929\n1.9963\n0.4965\n0.2645\n1.7726\n1.0000\nFarming/Seeds/Milling\n7\n0.0458\n0.7947\n2.8643\n0.2110\n0.1444\n0.9477\n0.3516\n0.0944\n0.7830\n0.5795\nEngineering & Construction\n5\n-0.0177\n-0.0470\n-0.0562\n0.1857\n0.0668\n0.4253\n0.4752\n-0.0339\n-0.0130\n1.0000\nAerospace\n9\n0.0070\n0.0075\n0.2826\n0.2110\n0.2110\n0.9805\n0.2700\n0.3692\n1.9613\n0.3847\nIndustrial Specialties\n9\n0.0233\n0.5945\n1.2360\n0.1814\n0.4902\n1.9122\n0.2867\n0.4382\n2.3662\n0.3906\nSpecialty Insurers\n6\n0.0266\n0.2417\n1.9522\n0.1772\n0.2524\n2.3140\n0.4182\n0.1542\n1.5739\n0.7641\nMajor Chemicals\n29\n0.0385\n0.7861\n2.3038\n0.0506\n0.9033\n2.5378\n0.1083\n0.9413\n3.3278\n0.1439\nIntegrated oil Companies\n19\n0.0030\n-0.1368\n-0.1112\n0.1181\n0.3038\n1.2159\n0.1861\n0.2780\n1.2721\n0.2256\nAir Freight/Delivery Services\n8\n-0.0264\n-0.1159\n-0.4758\n0.1224\n0.0035\n0.1200\n0.2447\n0.0342\n0.2842\n0.5034\nAuto Parts:O.E.M.\n18\n0.0093\n-0.0773\n-0.1814\n0.0169\n0.1225\n0.6453\n0.1027\n0.2304\n1.2174\n0.1590\nMetal Fabrications\n23\n0.0315\n0.4166\n1.2780\n0.0464\n0.2232\n1.1539\n0.0748\n0.3343\n1.8060\n0.1225\nProfessional Services\n11\n0.0424\n0.3269\n1.2574\n0.0928\n0.7564\n3.3393\n0.2011\n0.4197\n2.2984\n0.3334\nConsumer Electronics/Appliances\n6\n0.0143\n-0.0331\n-0.0448\n0.2236\n0.1965\n1.3905\n0.3849\n0.1815\n1.6288\n0.7276\nFluid Controls\n7\n0.0046\n0.2013\n0.8376\n0.1308\n0.0164\n0.1977\n0.3425\n0.1301\n0.7341\n0.5530\nOther Consumer Services\n17\n0.0112\n-0.1938\n-0.3318\n0.1055\n0.0592\n0.3613\n0.1786\n0.0714\n0.4484\n0.2146\nSteel/Iron Ore\n9\n0.0063\n0.4187\n0.9607\n0.1308\n0.4679\n1.4640\n0.2604\n0.3296\n1.2657\n0.4055\nOil/Gas Transmission\n6\n0.0429\n0.0450\n0.3377\n0.1772\n0.1682\n1.3444\n0.4004\n0.1402\n1.2989\n0.7125\nPlastic Products\n6\n0.0445\n0.5481\n1.7984\n0.1983\n0.2097\n1.1128\n0.4119\n0.2402\n1.6555\n0.7280\nAgricultural Chemicals\n7\n-0.0274\n-0.1482\n-0.5050\n0.1139\n0.0579\n0.3661\n0.3099\n0.0235\n0.2252\n0.5530\nContainers/Packaging\n9\n0.0560\n0.3614\n1.6604\n0.1857\n0.4993\n3.0729\n0.2811\n0.4182\n3.0827\n0.4291\nWater Supply\n7\n0.0434\n0.3842\n1.2216\n0.2321\n0.4928\n2.1438\n0.3462\n0.5040\n2.6645\n0.5847\nFinance: Consumer Services\n20\n0.0222\n-0.0371\n0.0167\n0.0928\n0.3712\n1.6133\n0.1367\n0.3801\n1.8747\n0.1840\nCommercial Banks\n21\n0.0191\n0.1958\n0.9104\n0.0759\n0.2458\n1.3927\n0.1327\n0.2432\n1.5127\n0.1786\nMedical/Dental Instruments\n12\n0.0359\n0.9956\n3.0300\n0.1139\n0.7530\n3.7000\n0.2131\n0.6578\n3.9586\n0.3012\nComputer Software: Prepackaged Software\n11\n0.0051\n0.3920\n1.8192\n0.0802\n0.3935\n2.3690\n0.1770\n0.3880\n2.4915\n0.2962\nOil Refining/Marketing\n9\n-0.0131\n-0.0392\n0.2148\n0.2194\n-0.0582\n-0.0842\n0.2806\n-0.1034\n-0.4494\n0.3798\nHotels/Resorts\n10\n0.0302\n0.5783\n2.1517\n0.1603\n0.4510\n2.6568\n0.2363\n0.4765\n3.1656\n0.3614\nRestaurants\n7\n-0.0250\n-0.0055\n0.1315\n0.1941\n-0.1752\n-0.7641\n0.3181\n-0.0880\n-0.4705\n0.5514\nDepartment/Specialty Retail Stores\n8\n-0.0093\n-0.0487\n-0.6587\n0.1181\n0.0553\n0.4820\n0.2581\n0.1323\n0.9452\n0.5083\nMarine Transportation\n14\n-0.0028\n0.3115\n0.8296\n0.1561\n-0.0475\n0.0074\n0.2211\n0.1118\n0.5671\n0.2705\nEDP Services\n11\n0.0016\n0.3955\n0.9938\n0.1857\n0.2148\n0.8664\n0.2482\n0.0830\n0.4807\n0.3157\nHospital/Nursing Management\n10\n0.0094\n0.3321\n1.0789\n0.1139\n0.0799\n0.4927\n0.2016\n0.0709\n0.4200\n0.3503\nSavings Institutions\n6\n0.0233\n0.5687\n2.2148\n0.1983\n0.2700\n1.7638\n0.4015\n0.1603\n1.3813\n0.7545\nInvestment Bankers/Brokers/Service\n13\n-0.0005\n0.2942\n1.0115\n0.1181\n0.0082\n0.1411\n0.1854\n0.0205\n0.2107\n0.2678\nMeat/Poultry/Fish\n5\n-0.0143\n-0.2439\n-0.6973\n0.2743\n0.0873\n0.6218\n0.4543\n0.0990\n0.8471\n1.0000\nBeverages (Production/Distribution)\n12\n0.0192\n0.1427\n0.6925\n0.1055\n0.2875\n1.9098\n0.2288\n0.2508\n1.9447\n0.2990\nHomebuilding\n16\n0.0415\n1.1992\n2.3832\n0.1139\n0.9380\n3.1958\n0.1707\n1.1283\n4.2944\n0.2342\nShoe Manufacturing\n5\n0.0387\n0.8778\n1.4294\n0.2110\n0.5701\n1.6533\n0.5089\n0.3139\n1.3117\n1.0000\nConstruction/Ag Equipment/Trucks\n6\n0.0457\n0.7575\n1.8814\n0.1730\n0.4618\n1.8972\n0.3821\n0.5135\n2.2277\n0.7643\nReal Estate\n13\n0.0035\n-0.0317\n-0.0225\n0.0759\n0.1757\n1.1769\n0.1742\n0.1773\n1.3251\n0.2446\nPackage Goods/Cosmetics\n10\n0.0098\n-0.0312\n0.0688\n0.1477\n0.0474\n0.3356\n0.2410\n0.2505\n1.5186\n0.3546\nOilfield Services/Equipment\n8\n-0.0069\n-0.4508\n-0.9192\n0.2321\n-0.1833\n-0.5156\n0.2717\n-0.2205\n-0.8215\n0.4629\nPaper\n8\n0.0150\n0.6198\n1.8548\n0.2152\n0.3067\n1.4751\n0.3050\n0.0984\n0.6318\n0.4842\nMining & Quarrying of Nonmetallic Minerals (No Fuels)\n6\n0.0569\n-0.0299\n0.1618\n0.2954\n0.0305\n0.2549\n0.4313\n-0.0001\n0.0885\n0.7188\nRailroads\n10\n-0.0109\n0.4033\n1.3568\n0.1266\n0.2680\n1.2789\n0.2410\n0.2466\n1.4833\n0.3504\nHome Furnishings\n8\n0.0336\n0.2567\n0.8786\n0.1899\n0.2967\n1.3483\n0.3080\n0.1965\n1.0645\n0.4663\nApparel\n10\n0.0079\n0.2067\n0.8641\n0.1055\n0.1946\n0.9773\n0.2025\n0.3079\n1.4040\n0.3496\nOffice Equipment/Supplies/Services\n9\n-0.0390\n-0.3344\n-1.2649\n0.0844\n-0.3280\n-1.6894\n0.2274\n-0.2768\n-1.5305\n0.3900\nForest Products\n5\n0.0664\n0.9244\n2.0120\n0.2532\n0.7321\n2.7681\n0.5052\n0.3948\n1.9793\n1.0000\nAuto Manufacturing\n9\n0.0252\n0.0875\n0.4246\n0.2025\n0.1577\n0.9115\n0.2520\n0.3126\n1.8921\n0.3949\nServices-Misc. Amusement & Recreation\n6\n0.0602\n0.5462\n2.0205\n0.1857\n0.4993\n2.8017\n0.4308\n0.3038\n2.2588\n0.7432\nSemiconductors\n5\n0.0378\n0.7516\n1.9347\n0.2236\n0.4438\n1.8223\n0.4859\n0.3035\n1.5702\n1.0000\nAverage\n10.97\n0.0181\n0.2924\n0.9113\n0.1535\n0.2701\n1.2890\n0.2758\n0.2515\n1.4200\n0.465\nTable 12: Complete result table for Rankformer on NYSE.\n\nTSPRank: Bridging Pairwise and Listwise Methods with a Bilinear Travelling Salesman Model\nKDD ’25, August 3–7, 2025, Toronto, Canada\nSector\nStocks\n𝜏\nIRR@1\nSR@1\nMAP@1\nIRR@3\nSR@3\nMAP@3\nIRR@5\nSR@5\nMAP@5\nComputer Manufacturing\n5\n0.0345\n0.1128\n0.6215\n0.1983\n0.3465\n2.3286\n0.5059\n0.2167\n1.3724\n1.0000\nTransportation Services\n5\n0.0008\n0.4351\n1.2510\n0.2489\n0.2339\n1.1572\n0.4838\n0.1263\n0.7757\n1.0000\nMedical/Dental Instruments\n17\n0.0090\n0.5775\n1.9145\n0.0802\n0.4503\n2.3065\n0.1254\n0.4129\n2.3442\n0.1809\nProperty-Casualty Insurers\n19\n0.0194\n-0.0452\n0.1845\n0.1013\n0.0247\n0.2305\n0.1751\n0.0401\n0.2988\n0.1967\nMedical Specialities\n5\n0.0303\n-0.0239\n0.1681\n0.2405\n0.0473\n0.3352\n0.4930\n-0.0402\n-0.1500\n1.0000\nBiotechnology: Biological Products (No Diagnostic Substances)\n12\n0.0186\n2.4685\n2.9704\n0.1688\n1.0795\n3.2313\n0.2117\n0.4928\n1.8969\n0.3013\nTelecommunications Equipment\n16\n0.0312\n0.2872\n0.9428\n0.0675\n0.0301\n0.2521\n0.1292\n0.1160\n0.6588\n0.2023\nMedical/Nursing Services\n6\n0.0345\n0.6698\n1.5659\n0.1688\n0.7648\n2.4595\n0.3915\n0.3438\n1.4557\n0.7572\nWater Supply\n9\n0.0392\n0.4756\n1.4303\n0.2110\n0.4821\n2.1976\n0.2785\n0.3584\n1.8276\n0.4219\nReal Estate Investment Trusts\n8\n0.0063\n0.1655\n1.0105\n0.1392\n0.1347\n1.1262\n0.2818\n0.0755\n0.6959\n0.4834\nBusiness Services\n17\n0.0268\n1.6051\n2.4223\n0.1603\n0.9827\n3.3542\n0.1798\n0.7203\n3.4705\n0.2180\nMajor Pharmaceuticals\n29\n0.0147\n1.7511\n2.5307\n0.0380\n1.1160\n2.4861\n0.0649\n0.7787\n2.4209\n0.0850\nFarming/Seeds/Milling\n6\n0.0479\n0.2494\n0.8739\n0.2152\n0.2853\n1.4940\n0.4044\n0.0968\n0.6758\n0.7522\nIndustrial Specialties\n11\n0.0219\n1.4803\n2.9657\n0.0844\n0.9133\n2.7340\n0.2220\n0.7123\n2.9349\n0.3298\nAir Freight/Delivery Services\n6\n0.0165\n0.5981\n1.5902\n0.1772\n0.1919\n0.8855\n0.4121\n0.0617\n0.3960\n0.7350\nElectrical Products\n13\n0.0139\n0.7310\n2.2919\n0.1055\n0.3622\n1.6007\n0.1772\n0.4157\n1.8738\n0.2609\nTelevision Services\n8\n0.0318\n-0.0302\n0.0737\n0.1181\n0.0519\n0.3379\n0.3061\n-0.0576\n-0.1870\n0.5070\nInvestment Bankers/Brokers/Service\n18\n0.0366\n0.0700\n0.3793\n0.1055\n0.4111\n2.0910\n0.1343\n0.5326\n3.0702\n0.1857\nCatalog/Specialty Distribution\n7\n0.0474\n1.0474\n1.6694\n0.1730\n0.9757\n2.4631\n0.3209\n0.6368\n2.3162\n0.6066\nSavings Institutions\n20\n0.0341\n0.4459\n1.3907\n0.1266\n0.3911\n1.7948\n0.1472\n0.2374\n1.2924\n0.1919\nOther Consumer Services\n9\n0.0327\n-0.0204\n0.1423\n0.1350\n0.3638\n1.6126\n0.2714\n0.1654\n0.8493\n0.4181\nAuto Parts:O.E.M.\n6\n0.0205\n0.1364\n0.5079\n0.2278\n0.0853\n0.4936\n0.4083\n-0.0303\n-0.0533\n0.7472\nTrucking Freight/Courier Services\n11\n0.0236\n1.2633\n1.9697\n0.1941\n0.8822\n2.3363\n0.2698\n0.4234\n1.4514\n0.3321\nRadio And TV Broadcasting And Communications Equipment\n10\n0.0020\n0.6117\n1.1721\n0.1097\n0.5461\n1.8837\n0.2218\n0.2672\n1.3208\n0.3429\nBiotechnology: Electromedical & Electrotherapeutic Apparatus\n5\n0.0336\n0.3490\n1.3161\n0.2152\n0.6316\n2.6888\n0.4892\n0.3760\n1.9405\n1.0000\nHome Furnishings\n8\n0.0255\n-0.5294\n-0.9480\n0.1772\n-0.0071\n0.1231\n0.2902\n0.0675\n0.4162\n0.4921\nMajor Chemicals\n7\n0.0386\n0.0550\n0.3581\n0.1266\n0.2015\n1.0694\n0.3293\n0.1306\n0.8491\n0.6094\nOther Specialty Stores\n8\n0.0666\n0.6364\n2.0735\n0.1266\n0.9138\n3.1965\n0.3033\n0.1963\n1.0324\n0.5221\nComputer Software: Programming, Data Processing\n7\n0.0470\n0.7064\n2.3288\n0.1814\n0.6583\n3.4336\n0.3305\n0.3598\n2.1732\n0.6190\nRestaurants\n20\n0.0077\n0.1668\n0.6579\n0.0506\n0.1775\n0.9692\n0.0942\n0.1184\n0.7246\n0.1443\nAutomotive Aftermarket\n6\n0.0328\n0.3689\n1.2364\n0.2025\n0.3357\n1.7185\n0.3999\n0.2355\n1.3734\n0.7544\nInvestment Managers\n5\n0.0471\n-0.0055\n0.1115\n0.2110\n0.0272\n0.2449\n0.5087\n0.0976\n0.7306\n1.0000\nOil Refining/Marketing\n6\n0.0317\n0.5765\n1.6158\n0.2532\n0.3921\n1.8925\n0.4154\n0.1472\n0.9318\n0.7284\nReal Estate\n7\n0.0454\n0.0186\n0.2540\n0.1350\n0.4378\n2.0464\n0.3376\n0.3771\n2.2129\n0.5996\nApparel\n8\n0.0366\n0.9977\n1.9552\n0.1688\n0.4962\n1.6474\n0.3054\n0.3216\n1.4747\n0.4992\nOil & Gas Production\n6\n0.0160\n-0.3752\n-1.0564\n0.1519\n-0.0738\n-0.0969\n0.3826\n-0.2398\n-0.8349\n0.7308\nComputer Communications Equipment\n5\n0.0168\n0.8553\n2.3743\n0.2785\n0.2458\n1.1800\n0.4777\n0.0383\n0.3025\n1.0000\nClothing/Shoe/Accessory Stores\n8\n0.0582\n0.0546\n0.3739\n0.1477\n0.1752\n0.6443\n0.3064\n0.1487\n0.6079\n0.5038\nCommercial Banks\n5\n0.0361\n0.0714\n0.4419\n0.1603\n0.4664\n2.2140\n0.5415\n0.1656\n0.9570\n1.0000\nHospital/Nursing Management\n5\n0.0076\n0.4818\n1.7654\n0.2321\n0.4274\n2.4203\n0.4794\n0.2216\n1.3716\n1.0000\nBanks\n5\n0.0227\n0.2333\n1.0907\n0.2194\n0.1565\n0.9575\n0.5002\n0.0939\n0.6403\n1.0000\nProfessional Services\n6\n0.0625\n0.6336\n2.1653\n0.2194\n0.3393\n1.7894\n0.4255\n0.2238\n1.3882\n0.7533\nPackaged Foods\n7\n0.0262\n-0.0920\n-0.1460\n0.1730\n-0.0812\n-0.3737\n0.3474\n-0.0810\n-0.4288\n0.5873\nMetal Fabrications\n12\n0.0157\n0.1418\n0.6525\n0.0464\n0.4426\n1.7620\n0.1650\n0.1618\n0.8427\n0.2879\nDiversified Commercial Services\n6\n0.0501\n0.6682\n2.4055\n0.1899\n0.5824\n2.4056\n0.4144\n0.1631\n1.0603\n0.7604\nComputer peripheral equipment\n6\n0.0199\n1.3021\n2.2781\n0.1857\n0.7407\n2.5088\n0.3971\n0.2258\n1.2091\n0.7362\nSteel/Iron Ore\n7\n0.0510\n0.9485\n1.9659\n0.2068\n0.3539\n1.4568\n0.3633\n0.1541\n0.8421\n0.5944\nHotels/Resorts\n5\n0.0168\n2.2934\n3.7945\n0.2869\n1.1013\n4.1555\n0.4829\n0.8753\n3.8558\n1.0000\nBiotechnology: In Vitro & In Vivo Diagnostic Substances\n5\n0.0252\n0.4688\n1.5839\n0.2068\n0.8971\n3.0465\n0.4845\n0.4424\n2.1666\n1.0000\nElectronic Components\n8\n0.0234\n0.6777\n1.6029\n0.1435\n0.8915\n2.7138\n0.2949\n0.5627\n2.2689\n0.4826\nAverage\n9.12\n0.0291\n0.5353\n1.2858\n0.1658\n0.4416\n1.7401\n0.3297\n0.2537\n1.2623\n0.5932\nTable 13: Complete result table for TSPRank with local training on NASDAQ.\n\nKDD ’25, August 3–7, 2025, Toronto, Canada\nWeixian Waylon Li, Yftah Ziser, Yifei Xie, Shay B. Cohen, and Tiejun Ma\nSector\nStocks\n𝜏\nIRR@1\nSR@1\nMAP@1\nIRR@3\nSR@3\nMAP@3\nIRR@5\nSR@5\nMAP@5\nBiotechnology: Laboratory Analytical Instruments\n5\n0.0403\n0.5598\n2.6040\n0.2236\n0.5557\n3.3714\n0.5270\n0.4553\n3.1498\n1.0000\nDiversified Commercial Services\n9\n0.0411\n2.4720\n2.5039\n0.2954\n1.0517\n3.0297\n0.3104\n0.8197\n3.1495\n0.4093\nOther Specialty Stores\n11\n0.0227\n0.0245\n0.2376\n0.0717\n0.6322\n1.8056\n0.2046\n0.4220\n1.6928\n0.3128\nInvestment Managers\n18\n0.0117\n1.0477\n3.4502\n0.0886\n0.6783\n3.7383\n0.1346\n0.3774\n2.6299\n0.1689\nElectrical Products\n13\n0.0218\n0.4920\n1.4221\n0.1181\n0.2664\n1.3944\n0.1587\n0.3098\n1.7686\n0.2540\nMajor Pharmaceuticals\n18\n0.0306\n-0.1847\n-0.0638\n0.1814\n0.3830\n1.4800\n0.1917\n0.2538\n1.4076\n0.2024\nOther Pharmaceuticals\n5\n0.0092\n0.4138\n1.5458\n0.2405\n0.3732\n1.9308\n0.4695\n0.1719\n1.0601\n1.0000\nAutomotive Aftermarket\n10\n0.0421\n0.4458\n1.4042\n0.1350\n0.2815\n1.1375\n0.2370\n0.1293\n0.6515\n0.3820\nPrecious Metals\n11\n0.0319\n0.0474\n0.3216\n0.0844\n0.3152\n1.3579\n0.1988\n0.2239\n1.1337\n0.3240\nPublishing\n5\n0.0277\n-0.1257\n-0.7956\n0.1519\n0.0233\n0.2224\n0.5159\n-0.1218\n-0.5510\n1.0000\nMilitary/Government/Technical\n11\n0.0371\n0.4694\n1.4329\n0.1266\n0.4552\n1.9754\n0.2239\n0.3242\n1.8900\n0.3363\nBusiness Services\n22\n0.0333\n0.3364\n1.1996\n0.0464\n0.5007\n2.9498\n0.1036\n0.4044\n2.9889\n0.1477\nPackaged Foods\n16\n0.0406\n0.1458\n0.5813\n0.0928\n0.2060\n1.0524\n0.1685\n0.1690\n1.0981\n0.2349\nLife Insurance\n17\n0.0239\n0.0882\n0.6505\n0.0211\n0.2186\n1.7630\n0.0924\n0.2678\n1.9882\n0.1652\nPower Generation\n15\n0.0353\n0.3675\n2.5478\n0.0591\n0.3169\n2.3796\n0.1531\n0.2577\n2.3831\n0.2139\nClothing/Shoe/Accessory Stores\n15\n0.0379\n2.3676\n2.2979\n0.1097\n0.9053\n1.9437\n0.1742\n0.4445\n1.3033\n0.2438\nMedical Specialities\n11\n0.0343\n0.7813\n2.8202\n0.1224\n0.5672\n3.3380\n0.2140\n0.4546\n3.0373\n0.3194\nProperty-Casualty Insurers\n30\n0.0075\n0.0193\n0.2590\n0.1266\n0.1917\n0.9142\n0.1240\n0.1814\n1.0815\n0.1435\nAccident &Health Insurance\n5\n0.0244\n0.3087\n1.8361\n0.1519\n0.3655\n2.0095\n0.5082\n0.2645\n1.7726\n1.0000\nFarming/Seeds/Milling\n7\n0.0362\n0.3846\n1.5380\n0.1857\n0.1224\n0.8832\n0.3364\n0.1262\n1.0892\n0.5915\nEngineering & Construction\n5\n0.0345\n0.1577\n0.7986\n0.1561\n0.2455\n1.1889\n0.5277\n-0.0339\n-0.0130\n1.0000\nAerospace\n9\n0.0247\n0.7391\n1.9837\n0.1308\n0.5730\n2.8210\n0.2447\n0.4335\n2.6282\n0.4132\nIndustrial Specialties\n9\n0.0156\n0.4662\n1.8216\n0.0928\n0.5138\n2.5086\n0.2639\n0.3418\n2.0486\n0.4138\nSpecialty Insurers\n6\n0.0518\n0.3274\n1.8225\n0.2068\n0.3344\n3.0660\n0.3997\n0.2600\n2.6415\n0.7428\nMajor Chemicals\n29\n0.0202\n0.7541\n2.2509\n0.0549\n0.5005\n2.7419\n0.0898\n0.5291\n3.3371\n0.1152\nIntegrated oil Companies\n19\n0.0167\n0.9524\n2.2709\n0.0886\n0.7087\n2.8509\n0.1526\n0.3655\n2.0313\n0.1893\nAir Freight/Delivery Services\n8\n0.0177\n0.4120\n1.2900\n0.1561\n0.4939\n2.1393\n0.3075\n0.2120\n1.0822\n0.4611\nAuto Parts:O.E.M.\n18\n0.0392\n0.2733\n0.9433\n0.1139\n0.1944\n0.9760\n0.1296\n0.3378\n1.7314\n0.1898\nMetal Fabrications\n23\n0.0090\n0.4761\n3.1351\n0.0169\n0.3988\n2.1217\n0.0830\n0.1986\n1.1345\n0.1143\nProfessional Services\n11\n0.0415\n0.4349\n1.4948\n0.1646\n0.6978\n3.2171\n0.2356\n0.6156\n3.2783\n0.3452\nConsumer Electronics/Appliances\n6\n0.0272\n0.1768\n0.8642\n0.2194\n0.3083\n2.0561\n0.4058\n0.0786\n0.7728\n0.7263\nFluid Controls\n7\n0.0474\n0.8668\n1.9553\n0.2194\n0.4234\n1.9204\n0.3397\n0.3069\n1.6782\n0.6052\nOther Consumer Services\n17\n0.0179\n0.5385\n1.3441\n0.0717\n0.2641\n1.2278\n0.1350\n0.5152\n2.2771\n0.1867\nSteel/Iron Ore\n9\n0.0231\n0.7430\n1.3593\n0.1435\n0.5142\n1.6196\n0.2548\n0.3780\n1.4982\n0.4237\nOil/Gas Transmission\n6\n0.0322\n0.2737\n1.7428\n0.1519\n0.2241\n2.0204\n0.3973\n0.1256\n1.2338\n0.7301\nPlastic Products\n6\n0.0838\n0.5736\n2.0377\n0.2068\n0.5182\n3.0642\n0.4416\n0.4475\n3.2359\n0.7683\nAgricultural Chemicals\n7\n0.0226\n0.1401\n1.3763\n0.0844\n0.0105\n0.1532\n0.3488\n-0.0051\n0.0369\n0.6279\nContainers/Packaging\n9\n0.0385\n0.6422\n2.6688\n0.2110\n0.4324\n2.8012\n0.2700\n0.3217\n2.6081\n0.4249\nWater Supply\n7\n0.0570\n0.3788\n1.2039\n0.1983\n0.3926\n2.0605\n0.3439\n0.4456\n2.4154\n0.6084\nFinance: Consumer Services\n20\n0.0160\n0.9140\n2.1926\n0.0970\n0.4886\n2.4532\n0.1188\n0.1702\n1.2730\n0.1705\nCommercial Banks\n21\n0.0188\n0.0495\n0.7665\n0.0169\n0.1185\n1.1677\n0.0546\n0.1436\n1.4201\n0.0947\nMedical/Dental Instruments\n12\n0.0101\n0.7262\n3.7107\n0.1013\n0.5041\n3.1897\n0.1854\n0.2896\n1.9492\n0.2843\nComputer Software: Prepackaged Software\n11\n0.0342\n0.3481\n1.5806\n0.0928\n0.6486\n3.3962\n0.1925\n0.4644\n2.7707\n0.3269\nOil Refining/Marketing\n9\n0.0240\n0.8635\n2.6404\n0.1603\n0.1772\n1.1876\n0.2635\n-0.0090\n0.0016\n0.4166\nHotels/Resorts\n10\n0.0279\n0.8493\n3.3624\n0.1181\n0.3664\n2.1728\n0.2276\n0.3277\n2.3952\n0.3793\nRestaurants\n7\n0.0654\n0.6800\n2.9722\n0.1435\n0.2561\n1.9646\n0.3556\n0.0743\n0.6134\n0.6355\nDepartment/Specialty Retail Stores\n8\n0.0213\n0.2109\n0.7823\n0.1561\n0.1482\n0.7635\n0.2872\n0.0783\n0.5165\n0.4944\nMarine Transportation\n14\n0.0413\n0.3574\n0.9199\n0.1519\n0.3326\n1.4241\n0.1847\n0.3045\n1.6041\n0.2481\nEDP Services\n11\n0.0313\n0.5444\n1.1215\n0.2447\n0.4464\n1.7959\n0.2302\n0.2479\n1.2955\n0.3362\nHospital/Nursing Management\n10\n0.0296\n0.4994\n1.5208\n0.0928\n0.4827\n1.5102\n0.2201\n0.3523\n1.2736\n0.3718\nSavings Institutions\n6\n0.0238\n0.0890\n0.5546\n0.1857\n0.2552\n1.7050\n0.4058\n0.1622\n1.4018\n0.7484\nInvestment Bankers/Brokers/Service\n13\n0.0301\n0.1306\n0.6194\n0.1139\n0.3248\n1.6569\n0.1985\n0.2423\n1.3841\n0.2842\nMeat/Poultry/Fish\n5\n0.0244\n0.3557\n1.7454\n0.1350\n0.2320\n1.7939\n0.5115\n0.0990\n0.8471\n1.0000\nBeverages (Production/Distribution)\n12\n0.0224\n0.1657\n0.7928\n0.1055\n0.2767\n1.8955\n0.2189\n0.3159\n2.6596\n0.2953\nHomebuilding\n16\n0.0198\n1.2634\n2.6371\n0.1139\n1.1338\n4.2467\n0.1624\n0.8278\n3.7611\n0.2217\nShoe Manufacturing\n5\n0.0412\n0.6360\n1.1819\n0.2110\n0.5264\n1.6604\n0.5075\n0.3139\n1.3117\n1.0000\nConstruction/Ag Equipment/Trucks\n6\n0.0389\n0.5224\n1.4423\n0.1730\n0.5174\n2.1491\n0.3830\n0.5055\n2.1878\n0.7595\nReal Estate\n13\n0.0156\n0.5298\n1.8985\n0.1097\n0.3496\n2.1786\n0.1953\n0.3528\n2.5679\n0.2669\nPackage Goods/Cosmetics\n10\n0.0401\n0.5845\n1.4541\n0.1730\n0.4727\n2.1772\n0.2637\n0.2672\n1.7438\n0.3694\nOilfield Services/Equipment\n8\n0.0285\n-0.1387\n-0.4397\n0.0928\n-0.0712\n-0.2511\n0.2520\n-0.1750\n-0.7463\n0.5034\nPaper\n8\n0.0297\n0.8200\n2.5088\n0.2194\n0.4023\n1.8222\n0.3010\n0.2678\n1.4775\n0.4899\nMining & Quarrying of Nonmetallic Minerals (No Fuels)\n6\n0.0490\n0.4848\n1.1827\n0.3080\n0.1191\n0.6274\n0.4039\n0.0349\n0.2884\n0.7267\nRailroads\n10\n0.0199\n0.4851\n1.4619\n0.1350\n0.4577\n2.4256\n0.2414\n0.3471\n2.0814\n0.3683\nHome Furnishings\n8\n0.0198\n0.3184\n1.0925\n0.1899\n0.2273\n1.0715\n0.2979\n0.1034\n0.6607\n0.4743\nApparel\n10\n0.0177\n0.2459\n0.9315\n0.0970\n0.1652\n0.8444\n0.2199\n0.2379\n1.2735\n0.3689\nOffice Equipment/Supplies/Services\n9\n0.0385\n0.1088\n0.5265\n0.1392\n0.1758\n0.9885\n0.2579\n-0.0792\n-0.3433\n0.4275\nForest Products\n5\n0.0521\n0.8712\n1.9437\n0.2363\n0.6435\n2.6611\n0.5234\n0.3948\n1.9793\n1.0000\nAuto Manufacturing\n9\n0.0460\n0.5626\n1.7120\n0.2068\n0.4137\n2.4364\n0.2571\n0.3849\n2.3002\n0.4122\nServices-Misc. Amusement & Recreation\n6\n0.0585\n0.5954\n2.6355\n0.1772\n0.5220\n3.4206\n0.4334\n0.3573\n2.7303\n0.7524\nSemiconductors\n5\n0.0429\n0.6257\n2.3595\n0.1519\n0.5468\n2.3792\n0.5202\n0.3035\n1.5702\n1.0000\nAverage\n10.97\n0.0313\n0.5012\n1.5710\n0.1424\n0.3974\n1.9735\n0.2756\n0.2788\n1.6662\n0.4680\nTable 14: Complete result table for TSPRank with local training on NYSE.\n\nTSPRank: Bridging Pairwise and Listwise Methods with a Bilinear Travelling Salesman Model\nKDD ’25, August 3–7, 2025, Toronto, Canada\nSector\nStocks\n𝜏\nIRR@1\nSR@1\nMAP@1\nIRR@3\nSR@3\nMAP@3\nIRR@5\nSR@5\nMAP@5\nComputer Manufacturing\n5\n0.0462\n0.7131\n2.6391\n0.1941\n0.4412\n2.6858\n0.5063\n0.2167\n1.3724\n1.0000\nTransportation Services\n5\n0.0790\n0.8231\n2.6376\n0.1772\n0.5290\n2.1863\n0.5211\n0.1263\n0.7757\n1.0000\nMedical/Dental Instruments\n17\n0.0009\n0.4891\n1.3264\n0.0675\n0.9051\n3.1209\n0.1395\n0.4674\n2.3745\n0.1898\nProperty-Casualty Insurers\n19\n0.0262\n0.5825\n1.7370\n0.1013\n0.1596\n0.8014\n0.1324\n0.1295\n0.7147\n0.1896\nMedical Specialities\n5\n0.0513\n0.3184\n1.1598\n0.1814\n0.0501\n0.3507\n0.5319\n-0.0402\n-0.1500\n1.0000\nBiotechnology: Biological Products (No Diagnostic Substances)\n12\n0.0339\n2.7414\n3.5486\n0.1435\n1.0576\n3.2959\n0.2161\n0.7736\n2.9855\n0.3079\nTelecommunications Equipment\n16\n0.0361\n0.7213\n1.6043\n0.0928\n0.6366\n2.5527\n0.1320\n0.2411\n1.3507\n0.1929\nMedical/Nursing Services\n6\n0.0406\n0.2231\n0.8829\n0.1857\n0.5104\n2.0530\n0.4067\n0.3734\n1.6074\n0.7533\nWater Supply\n9\n0.0271\n0.3681\n1.5003\n0.0886\n0.3183\n1.5523\n0.2616\n0.1904\n1.0373\n0.4305\nReal Estate Investment Trusts\n8\n0.0606\n0.2353\n1.3346\n0.1266\n0.2303\n1.6356\n0.2996\n0.1188\n1.0167\n0.5047\nBusiness Services\n17\n0.0327\n0.9827\n2.0224\n0.0886\n0.4924\n2.0209\n0.1296\n0.5139\n2.5909\n0.1958\nMajor Pharmaceuticals\n29\n0.0150\n1.3801\n1.7649\n0.0844\n1.1300\n2.4818\n0.0928\n0.6112\n1.9240\n0.1143\nFarming/Seeds/Milling\n6\n0.0557\n0.3764\n1.2830\n0.2152\n0.1955\n1.0461\n0.4126\n0.1064\n0.7187\n0.7526\nIndustrial Specialties\n11\n0.0219\n0.8028\n1.9248\n0.1013\n1.1003\n3.2369\n0.2295\n0.6864\n2.9025\n0.3320\nAir Freight/Delivery Services\n6\n0.0182\n0.1825\n0.6729\n0.1646\n0.3296\n1.3477\n0.4015\n0.0836\n0.4943\n0.7340\nElectrical Products\n13\n0.0237\n1.3353\n2.4725\n0.0970\n0.8455\n2.7356\n0.1866\n0.5791\n2.3875\n0.2745\nTelevision Services\n8\n0.0552\n0.8375\n2.4448\n0.1941\n0.3247\n1.4238\n0.3315\n0.0965\n0.5797\n0.5135\nInvestment Bankers/Brokers/Service\n18\n0.0392\n1.2698\n3.2572\n0.0802\n0.9476\n2.9791\n0.1796\n0.6891\n3.1783\n0.2325\nCatalog/Specialty Distribution\n7\n0.0486\n2.0857\n2.9492\n0.1435\n0.6505\n1.9303\n0.3586\n0.3549\n1.4601\n0.6089\nSavings Institutions\n20\n0.0158\n0.2971\n1.1601\n0.0928\n0.2722\n1.5362\n0.1191\n0.1138\n0.7170\n0.1627\nOther Consumer Services\n9\n0.0395\n0.7300\n1.3770\n0.1857\n0.2894\n1.0383\n0.3052\n0.2786\n1.3046\n0.4193\nAuto Parts:O.E.M.\n6\n0.0557\n-0.0184\n0.0857\n0.1857\n0.1717\n0.8682\n0.4147\n-0.0410\n-0.1008\n0.7706\nTrucking Freight/Courier Services\n11\n0.0390\n1.0055\n1.5900\n0.1392\n0.6701\n1.9763\n0.2293\n0.5084\n1.8487\n0.3295\nRadio And TV Broadcasting And Communications Equipment\n10\n0.0496\n2.8446\n2.7443\n0.1603\n0.9634\n2.7246\n0.2543\n0.4660\n2.0555\n0.3792\nBiotechnology: Electromedical & Electrotherapeutic Apparatus\n5\n0.0588\n1.7655\n3.2478\n0.2532\n0.7827\n2.8964\n0.5183\n0.3760\n1.9405\n1.0000\nHome Furnishings\n8\n0.0336\n-0.1574\n-0.1671\n0.1730\n-0.0020\n0.1388\n0.2890\n0.1674\n0.8236\n0.5008\nMajor Chemicals\n7\n0.0598\n0.7313\n2.6136\n0.1308\n0.2680\n1.5711\n0.3462\n0.2038\n1.2628\n0.6400\nOther Specialty Stores\n8\n0.0471\n0.7342\n1.5967\n0.1013\n0.3793\n1.5717\n0.2726\n0.1491\n0.8533\n0.5228\nComputer Software: Programming, Data Processing\n7\n0.0482\n0.5432\n1.8926\n0.1814\n0.5947\n3.3514\n0.3317\n0.3921\n2.4265\n0.6468\nRestaurants\n20\n0.0296\n0.2455\n0.8613\n0.0549\n0.5447\n2.1873\n0.1308\n0.2523\n1.3900\n0.1650\nAutomotive Aftermarket\n6\n0.0501\n0.2125\n0.9663\n0.1519\n0.4733\n2.0485\n0.4262\n0.2650\n1.4178\n0.7566\nInvestment Managers\n5\n0.0664\n0.0982\n0.5116\n0.2152\n0.2713\n1.6159\n0.5342\n0.0976\n0.7306\n1.0000\nOil Refining/Marketing\n6\n0.0507\n-0.1676\n-0.5275\n0.2869\n0.2519\n1.3796\n0.3964\n0.2054\n1.2418\n0.7240\nReal Estate\n7\n0.0426\n0.0887\n0.4459\n0.1350\n0.4726\n2.2371\n0.3537\n0.2984\n1.9897\n0.5988\nApparel\n8\n0.0435\n0.7246\n2.2949\n0.1013\n0.5383\n2.2606\n0.2738\n0.3009\n1.5811\n0.5303\nOil & Gas Production\n6\n0.0754\n0.2320\n0.6923\n0.2321\n0.0308\n0.2634\n0.4196\n-0.1448\n-0.4294\n0.7624\nComputer Communications Equipment\n5\n0.0538\n0.6350\n1.7178\n0.1772\n0.1738\n0.8243\n0.5108\n0.0383\n0.3025\n1.0000\nClothing/Shoe/Accessory Stores\n8\n0.0516\n0.9644\n1.4510\n0.1646\n0.3530\n1.0613\n0.2832\n0.3947\n1.2682\n0.5028\nCommercial Banks\n5\n0.0656\n1.2792\n3.0330\n0.3080\n0.5256\n2.3832\n0.5127\n0.1656\n0.9570\n1.0000\nHospital/Nursing Management\n5\n0.0571\n1.6740\n3.2362\n0.3249\n0.5750\n2.7682\n0.5047\n0.2216\n1.3716\n1.0000\nBanks\n5\n0.0681\n0.5274\n2.1182\n0.2321\n0.2835\n1.5233\n0.4913\n0.0939\n0.6403\n1.0000\nProfessional Services\n6\n0.0373\n0.2523\n1.1628\n0.1477\n0.3277\n1.7772\n0.4121\n0.1111\n0.7555\n0.7574\nPackaged Foods\n7\n0.0354\n0.3166\n1.0405\n0.1772\n0.2745\n1.4123\n0.3378\n0.0144\n0.1752\n0.5915\nMetal Fabrications\n12\n0.0332\n1.3147\n2.2192\n0.1308\n0.5870\n2.0254\n0.2107\n0.4915\n2.0341\n0.2896\nDiversified Commercial Services\n6\n0.0479\n0.8004\n1.7045\n0.2152\n0.6214\n2.7428\n0.4001\n0.3688\n2.1574\n0.7675\nComputer peripheral equipment\n6\n0.0457\n1.1838\n2.2897\n0.1688\n0.9419\n3.3506\n0.4098\n0.3438\n1.7482\n0.7476\nSteel/Iron Ore\n7\n0.0554\n0.5307\n1.4018\n0.1688\n0.4526\n1.8570\n0.3472\n0.2197\n1.1517\n0.5988\nHotels/Resorts\n5\n0.0529\n1.5454\n3.2324\n0.2658\n1.0232\n4.1963\n0.5134\n0.8753\n3.8558\n1.0000\nBiotechnology: In Vitro & In Vivo Diagnostic Substances\n5\n0.0588\n0.8881\n2.3463\n0.2152\n1.0344\n3.4675\n0.4930\n0.4424\n2.1666\n1.0000\nElectronic Components\n8\n0.0555\n0.9552\n1.8544\n0.1603\n1.1190\n3.3023\n0.3099\n0.6983\n2.6961\n0.5051\nAverage\n9.12\n0.0447\n0.7849\n1.7471\n0.1633\n0.5224\n2.0359\n0.3364\n0.2937\n1.4331\n0.5999\nTable 15: Complete result table for TSPRank with global training on NASDAQ.\n\nKDD ’25, August 3–7, 2025, Toronto, Canada\nWeixian Waylon Li, Yftah Ziser, Yifei Xie, Shay B. Cohen, and Tiejun Ma\nSector\nStocks\n𝜏\nIRR@1\nSR@1\nMAP@1\nIRR@3\nSR@3\nMAP@3\nIRR@5\nSR@5\nMAP@5\nBiotechnology: Laboratory Analytical Instruments\n5\n0.0454\n0.5059\n2.8110\n0.1983\n0.4805\n3.2350\n0.5251\n0.4553\n3.1498\n1.0000\nDiversified Commercial Services\n9\n0.0287\n0.6134\n1.6824\n0.1603\n0.7515\n2.5416\n0.2771\n0.5597\n2.3811\n0.4168\nOther Specialty Stores\n11\n0.0426\n0.4883\n1.1274\n0.1266\n0.7789\n2.1611\n0.2180\n0.4915\n1.7811\n0.3265\nInvestment Managers\n18\n0.0319\n0.8985\n3.0370\n0.0844\n0.5710\n2.9765\n0.1282\n0.5072\n3.0107\n0.1797\nElectrical Products\n13\n0.0364\n0.5099\n1.8447\n0.1097\n0.3411\n1.9502\n0.1793\n0.3041\n1.8406\n0.2766\nMajor Pharmaceuticals\n18\n0.0484\n0.3468\n0.8992\n0.1392\n0.5776\n2.5628\n0.1620\n0.3553\n2.0901\n0.2052\nOther Pharmaceuticals\n5\n0.0462\n0.4623\n1.6864\n0.2743\n0.3309\n1.6992\n0.4883\n0.1719\n1.0601\n1.0000\nAutomotive Aftermarket\n10\n0.0376\n0.3244\n1.1962\n0.1266\n0.1897\n0.9214\n0.2278\n0.1262\n0.7006\n0.3639\nPrecious Metals\n11\n0.0423\n0.8095\n2.1805\n0.1688\n0.6709\n2.6943\n0.2344\n0.4070\n2.0062\n0.3355\nPublishing\n5\n0.0504\n-0.1658\n-0.1896\n0.2869\n-0.0292\n0.0094\n0.4887\n-0.1218\n-0.5510\n1.0000\nMilitary/Government/Technical\n11\n0.0340\n0.0927\n0.4890\n0.1477\n0.2599\n1.5451\n0.2105\n0.2256\n1.6561\n0.3416\nBusiness Services\n22\n0.0314\n0.7742\n2.5470\n0.0886\n0.6654\n3.7382\n0.1331\n0.5076\n3.6890\n0.1686\nPackaged Foods\n16\n0.0275\n0.0566\n0.3738\n0.0970\n0.2547\n1.5930\n0.1460\n0.2264\n1.7117\n0.2216\nLife Insurance\n17\n0.0325\n0.9913\n2.8119\n0.0886\n0.2141\n1.4321\n0.1486\n0.2798\n2.0832\n0.1960\nPower Generation\n15\n0.0410\n-0.0439\n-0.0996\n0.0675\n0.1298\n1.1274\n0.1535\n0.1802\n1.5840\n0.2119\nClothing/Shoe/Accessory Stores\n15\n0.0456\n1.2433\n1.6214\n0.1055\n0.6930\n1.5866\n0.1737\n0.3455\n1.1032\n0.2485\nMedical Specialities\n11\n0.0271\n0.4398\n1.7652\n0.0802\n0.5340\n3.1256\n0.1995\n0.4774\n3.0575\n0.3153\nProperty-Casualty Insurers\n30\n0.0142\n0.2757\n0.8266\n0.0886\n0.2229\n1.2077\n0.0879\n0.1546\n1.0534\n0.1065\nAccident &Health Insurance\n5\n0.0286\n0.1709\n1.0124\n0.1435\n0.2999\n1.9586\n0.5124\n0.2645\n1.7726\n1.0000\nFarming/Seeds/Milling\n7\n0.0310\n0.1738\n0.8761\n0.1814\n0.2130\n1.4021\n0.3345\n0.0954\n0.7925\n0.5989\nEngineering & Construction\n5\n0.0437\n0.2857\n1.1477\n0.1519\n0.3424\n1.2229\n0.5270\n-0.0339\n-0.0130\n1.0000\nAerospace\n9\n0.0411\n0.6488\n2.4841\n0.1392\n0.4342\n2.5592\n0.2632\n0.3839\n2.5218\n0.4233\nIndustrial Specialties\n9\n0.0348\n0.1359\n0.6053\n0.1561\n0.4000\n2.5422\n0.2689\n0.2626\n2.1123\n0.4247\nSpecialty Insurers\n6\n0.0742\n0.5958\n2.9815\n0.2321\n0.3912\n3.5052\n0.4156\n0.2610\n2.5276\n0.7635\nMajor Chemicals\n29\n0.0209\n0.4391\n1.3614\n0.0591\n0.5311\n2.4851\n0.0863\n0.4246\n2.4869\n0.1054\nIntegrated oil Companies\n19\n0.0298\n0.5355\n1.4804\n0.0759\n0.3828\n1.8127\n0.1322\n0.2732\n1.6078\n0.1797\nAir Freight/Delivery Services\n8\n0.0354\n0.8190\n2.0955\n0.1857\n0.4494\n2.0238\n0.2972\n0.2071\n1.1508\n0.4734\nAuto Parts:O.E.M.\n18\n0.0282\n0.6774\n2.4992\n0.0844\n0.2974\n1.6579\n0.1238\n0.2797\n1.5649\n0.1822\nMetal Fabrications\n23\n0.0315\n1.1879\n2.4235\n0.1266\n0.3417\n1.4612\n0.1414\n0.2625\n1.3513\n0.1663\nProfessional Services\n11\n0.0516\n1.2433\n2.7674\n0.1350\n0.3915\n2.0929\n0.2042\n0.3667\n2.1894\n0.3435\nConsumer Electronics/Appliances\n6\n0.0434\n0.0869\n0.5293\n0.1730\n0.2392\n1.6402\n0.3926\n0.1074\n0.9977\n0.7422\nFluid Controls\n7\n0.0458\n0.7086\n3.1057\n0.1857\n0.3542\n1.9654\n0.3476\n0.2994\n1.8719\n0.6313\nOther Consumer Services\n17\n0.0284\n0.2415\n0.7103\n0.1055\n0.0138\n0.1909\n0.1676\n0.3256\n1.6478\n0.2158\nSteel/Iron Ore\n9\n0.0238\n0.9439\n1.6691\n0.1181\n0.3774\n1.2905\n0.2536\n0.3934\n1.5161\n0.4125\nOil/Gas Transmission\n6\n0.0580\n0.3785\n1.7910\n0.1772\n0.2577\n2.1271\n0.4144\n0.1777\n1.6504\n0.7406\nPlastic Products\n6\n0.0726\n0.3942\n1.6841\n0.1646\n0.5777\n3.5004\n0.4369\n0.3581\n2.5870\n0.7513\nAgricultural Chemicals\n7\n0.0618\n0.0953\n0.5161\n0.1266\n0.2795\n1.5774\n0.3643\n0.0391\n0.3648\n0.6268\nContainers/Packaging\n9\n0.0362\n0.0613\n0.5496\n0.0759\n0.3036\n2.4296\n0.2196\n0.3183\n2.6423\n0.4258\nWater Supply\n7\n0.0570\n0.4097\n1.4196\n0.2025\n0.8891\n3.7332\n0.3591\n0.4585\n2.5417\n0.6079\nFinance: Consumer Services\n20\n0.0433\n0.5376\n2.0062\n0.0886\n0.2829\n1.6800\n0.1111\n0.2882\n2.0748\n0.1659\nCommercial Banks\n21\n0.0217\n0.5504\n2.0888\n0.0802\n0.5011\n2.9425\n0.1217\n0.3375\n2.5244\n0.1625\nMedical/Dental Instruments\n12\n0.0313\n0.1891\n1.0436\n0.0759\n0.4168\n2.7722\n0.1833\n0.4027\n2.8406\n0.2830\nComputer Software: Prepackaged Software\n11\n0.0261\n0.7705\n2.1522\n0.0844\n0.6469\n3.1697\n0.2011\n0.4349\n2.3852\n0.3323\nOil Refining/Marketing\n9\n0.0593\n0.7053\n2.2314\n0.1224\n0.3295\n1.6251\n0.2555\n0.1965\n1.2611\n0.4422\nHotels/Resorts\n10\n0.0402\n0.1859\n0.9010\n0.1181\n0.5225\n3.0131\n0.2403\n0.4942\n3.4102\n0.3747\nRestaurants\n7\n0.0682\n0.1222\n0.6333\n0.1561\n0.0546\n0.4712\n0.3378\n0.1528\n1.1004\n0.6384\nDepartment/Specialty Retail Stores\n8\n0.0555\n0.3472\n1.0299\n0.1519\n0.2370\n0.9831\n0.2977\n0.2523\n1.1683\n0.5081\nMarine Transportation\n14\n0.0361\n0.5846\n1.4050\n0.1392\n0.2815\n1.3936\n0.1765\n0.2895\n1.6238\n0.2451\nEDP Services\n11\n0.0468\n0.6478\n1.7467\n0.1224\n0.2712\n1.2282\n0.2332\n0.2565\n1.3250\n0.3540\nHospital/Nursing Management\n10\n0.0399\n0.0487\n0.3412\n0.0464\n0.3271\n1.2364\n0.2157\n0.2169\n0.9386\n0.3695\nSavings Institutions\n6\n0.0546\n-0.0320\n-0.0924\n0.1561\n0.2396\n1.9658\n0.4027\n0.1941\n1.7806\n0.7720\nInvestment Bankers/Brokers/Service\n13\n0.0233\n0.1814\n0.7968\n0.1139\n0.2372\n1.2043\n0.1967\n0.2408\n1.3483\n0.2689\nMeat/Poultry/Fish\n5\n0.0723\n0.1941\n1.0074\n0.2068\n0.2952\n1.8236\n0.5122\n0.0990\n0.8471\n1.0000\nBeverages (Production/Distribution)\n12\n0.0435\n0.2829\n1.4588\n0.1266\n0.3857\n2.8449\n0.1906\n0.3436\n2.9831\n0.2874\nHomebuilding\n16\n0.0411\n1.2737\n2.8299\n0.0970\n1.0350\n3.6869\n0.1629\n1.0061\n4.1459\n0.2241\nShoe Manufacturing\n5\n0.0630\n2.4099\n2.3840\n0.2700\n0.6841\n1.9317\n0.5136\n0.3139\n1.3117\n1.0000\nConstruction/Ag Equipment/Trucks\n6\n0.0445\n1.1036\n2.3375\n0.1899\n0.5665\n2.0795\n0.4158\n0.3165\n1.4641\n0.7446\nReal Estate\n13\n0.0218\n0.3852\n1.8531\n0.0464\n0.3056\n2.0952\n0.1261\n0.2149\n1.7090\n0.2573\nPackage Goods/Cosmetics\n10\n0.0684\n0.5788\n2.1845\n0.1392\n0.4712\n2.9352\n0.2482\n0.3153\n2.2773\n0.3878\nOilfield Services/Equipment\n8\n0.0453\n0.1043\n0.5019\n0.1181\n0.0309\n0.2552\n0.2832\n-0.0842\n-0.2748\n0.5072\nPaper\n8\n0.0654\n0.1922\n0.8538\n0.1392\n0.3425\n1.7754\n0.3228\n0.2166\n1.2878\n0.5110\nMining & Quarrying of Nonmetallic Minerals (No Fuels)\n6\n0.0535\n0.0412\n0.2960\n0.1561\n0.2562\n1.2813\n0.4196\n0.0165\n0.1869\n0.7555\nRailroads\n10\n0.0324\n0.0023\n0.1227\n0.0928\n0.3475\n2.1375\n0.2307\n0.1976\n1.4698\n0.3561\nHome Furnishings\n8\n0.0360\n0.5031\n1.2453\n0.2110\n0.3288\n1.5796\n0.3073\n0.2074\n1.2672\n0.4880\nApparel\n10\n0.0296\n0.0734\n0.4790\n0.0759\n0.3282\n1.8800\n0.1871\n0.3780\n2.1074\n0.3702\nOffice Equipment/Supplies/Services\n9\n0.0479\n-0.1323\n-0.2453\n0.1477\n0.1893\n0.9815\n0.2722\n-0.0432\n-0.1300\n0.4131\nForest Products\n5\n0.0639\n0.9512\n2.0830\n0.2616\n0.6872\n2.6944\n0.5047\n0.3948\n1.9793\n1.0000\nAuto Manufacturing\n9\n0.0451\n0.4649\n1.6525\n0.1392\n0.3408\n2.0907\n0.2628\n0.2689\n1.7380\n0.4230\nServices-Misc. Amusement & Recreation\n6\n0.0345\n0.4000\n1.4716\n0.2236\n0.4410\n2.7912\n0.4051\n0.3083\n2.4364\n0.7499\nSemiconductors\n5\n0.0571\n0.9888\n2.7414\n0.2068\n0.4380\n1.9950\n0.5087\n0.3035\n1.5702\n1.0000\nAverage\n10.97\n0.0422\n0.4787\n1.4552\n0.1392\n0.3889\n1.9976\n0.2756\n0.2816\n1.7350\n0.4732\nTable 16: Complete result table for TSPRank with global training on NYSE.\n\nTSPRank: Bridging Pairwise and Listwise Methods with a Bilinear Travelling Salesman Model\nKDD ’25, August 3–7, 2025, Toronto, Canada\nLambdaMART\nRankformer\nTSPRank-Local\nTSPRank-Global\nNDCG@3\nNDCG@5\nNDCG@10\nMRR\nTau\nNDCG@3\nNDCG@5\nNDCG@10\nMRR\n𝜏\nNDCG@3\nNDCG@5\nNDCG@10\nMRR\nTau\nNDCG@3\nNDCG@5\nNDCG@10\nMRR\n𝜏\nFold\nTop 10\nFold 1\n0.6867\n0.7180\n0.8702\n0.4060\n0.1330\n0.7218\n0.7504\n0.8832\n0.4280\n0.2083\n0.6837\n0.7227\n0.8699\n0.3956\n0.1346\n0.7224\n0.7606\n0.8883\n0.4895\n0.2174\nFold 2\n0.6651\n0.7052\n0.8631\n0.4379\n0.1117\n0.7057\n0.7469\n0.8809\n0.4784\n0.2045\n0.6671\n0.7031\n0.8668\n0.4655\n0.1193\n0.7162\n0.7472\n0.8838\n0.4706\n0.1940\nFold 3\n0.6904\n0.7337\n0.8755\n0.4286\n0.1782\n0.7442\n0.7743\n0.8968\n0.4984\n0.2651\n0.6936\n0.7326\n0.8735\n0.4153\n0.1813\n0.7341\n0.7678\n0.8927\n0.4883\n0.2444\nFold 4\n0.6702\n0.7180\n0.8657\n0.4248\n0.1406\n0.7082\n0.7504\n0.8814\n0.4413\n0.2345\n0.6930\n0.7247\n0.8749\n0.4662\n0.1655\n0.7227\n0.7519\n0.8847\n0.4932\n0.2192\nFold 5\n0.7043\n0.7361\n0.8791\n0.4324\n0.1734\n0.7301\n0.7605\n0.8904\n0.4844\n0.2459\n0.6915\n0.7232\n0.8742\n0.3905\n0.1714\n0.7483\n0.7651\n0.8926\n0.4887\n0.2311\nAverage\n0.6833\n0.7222\n0.8707\n0.4259\n0.1474\n0.7220\n0.7565\n0.8865\n0.4661\n0.2317\n0.6858\n0.7213\n0.8719\n0.4266\n0.1544\n0.7287\n0.7585\n0.8884\n0.4861\n0.2212\nTop 30\nFold 1\n0.7284\n0.7244\n0.7410\n0.3563\n0.2392\n0.7214\n0.7221\n0.7411\n0.3535\n0.2497\n0.7151\n0.7230\n0.7401\n0.3096\n0.2515\n0.7587\n0.7504\n0.7604\n0.3685\n0.2616\nFold 2\n0.7097\n0.7088\n0.7225\n0.3564\n0.2061\n0.7501\n0.7466\n0.7598\n0.3896\n0.2970\n0.7189\n0.7240\n0.7362\n0.3206\n0.2054\n0.7521\n0.7534\n0.7587\n0.3945\n0.2725\nFold 3\n0.7481\n0.7397\n0.7463\n0.3750\n0.2409\n0.7641\n0.7638\n0.7665\n0.3860\n0.2932\n0.7288\n0.7304\n0.7426\n0.3061\n0.2444\n0.7703\n0.7612\n0.7637\n0.4190\n0.2686\nFold 4\n0.7386\n0.7357\n0.7421\n0.3754\n0.2443\n0.7271\n0.7292\n0.7465\n0.3526\n0.2591\n0.7223\n0.7233\n0.7368\n0.3483\n0.2294\n0.7547\n0.7558\n0.7635\n0.3833\n0.2545\nFold 5\n0.7453\n0.7406\n0.7495\n0.3456\n0.2554\n0.7803\n0.7733\n0.7841\n0.3841\n0.3178\n0.7122\n0.7235\n0.7425\n0.2997\n0.2435\n0.7550\n0.7583\n0.7693\n0.3820\n0.2675\nAverage\n0.7340\n0.7298\n0.7403\n0.3617\n0.2372\n0.7486\n0.7470\n0.7596\n0.3732\n0.2834\n0.7195\n0.7248\n0.7396\n0.3169\n0.2348\n0.7582\n0.7558\n0.7631\n0.3895\n0.2649\nTable 17: Complete results on MQ2008-list for information retrieval.\nLambdaMART\nRankformer\nTSPRank-Local\nTSPRank-Global\nGroup Size 10\nAllocation\n𝜏↑\nEM ↑\nMRR ↑\nRMSE ↓\n𝜏↑\nEM ↑\nMRR ↑\nRMSE ↓\n𝜏↑\nEM ↑\nMRR ↑\nRMSE ↓\n𝜏↑\nEM ↑\nMRR ↑\nRMSE ↓\n1\n0.6456\n0.3043\n0.7813\n1.904\n0.6269\n0.2801\n0.7542\n1.962\n0.5632\n0.2909\n0.7703\n2.369\n0.6285\n0.3275\n0.8038\n2.060\n2\n0.5834\n0.2739\n0.7504\n2.144\n0.6196\n0.2924\n0.7509\n2.007\n0.5664\n0.2682\n0.7918\n2.226\n0.6344\n0.3400\n0.7997\n2.047\n3\n0.6343\n0.3018\n0.7534\n1.963\n0.6144\n0.2874\n0.7162\n2.017\n0.5568\n0.2917\n0.7489\n2.356\n0.6304\n0.3339\n0.7751\n2.063\n4\n0.6252\n0.3051\n0.7431\n1.992\n0.6123\n0.2935\n0.7264\n2.022\n0.5533\n0.2632\n0.7363\n2.274\n0.6226\n0.3310\n0.7903\n2.082\n5\n0.6008\n0.2862\n0.7538\n2.086\n0.6217\n0.2962\n0.7328\n1.984\n0.5891\n0.3138\n0.7924\n2.255\n0.6347\n0.3428\n0.7993\n2.035\nAverage\n0.6297\n0.3008\n0.7554\n1.993\n0.6190\n0.2899\n0.7361\n1.998\n0.5658\n0.2856\n0.7679\n2.296\n0.6301\n0.3350\n0.7936\n2.057\nGroup Size 30\n1\n0.5947\n0.1066\n0.6334\n5.948\n0.5872\n0.0905\n0.4825\n5.945\n0.5026\n0.0886\n0.5416\n6.957\n0.6334\n0.1378\n0.7356\n5.729\n2\n0.5882\n0.1013\n0.6102\n6.047\n0.5868\n0.0880\n0.4927\n5.980\n0.5256\n0.0867\n0.6039\n6.714\n0.6348\n0.1351\n0.7510\n5.728\n3\n0.5856\n0.1135\n0.6288\n6.071\n0.5834\n0.0930\n0.5059\n5.984\n0.5116\n0.0860\n0.5677\n6.9300\n0.6312\n0.1419\n0.6895\n5.748\n4\n0.6030\n0.1013\n0.6062\n5.838\n0.5863\n0.0925\n0.4826\n5.970\n0.5043\n0.0873\n0.6162\n7.0420\n0.6290\n0.1349\n0.7242\n5.790\n5\n0.5930\n0.1091\n0.5822\n5.943\n0.5858\n0.0967\n0.4917\n5.986\n0.5036\n0.0879\n0.5401\n7.0070\n0.6227\n0.1423\n0.7498\n5.857\nAverage\n0.5929\n0.1064\n0.6122\n5.969\n0.5859\n0.0921\n0.4911\n5.973\n0.5095\n0.0873\n0.5739\n6.930\n0.6302\n0.1384\n0.7300\n5.770\nGroup Size 50\n1\n0.6074\n0.0672\n0.5694\n9.476\n0.5717\n0.0543\n0.3857\n10.084\n0.4700\n0.0460\n0.3961\n12.149\n0.6179\n0.0821\n0.6632\n9.645\n2\n0.6072\n0.0658\n0.5418\n9.437\n0.5747\n0.0523\n0.3211\n10.012\n0.4907\n0.0463\n0.3514\n11.693\n0.6189\n0.0834\n0.6604\n9.601\n3\n0.5973\n0.0625\n0.5435\n9.681\n0.5741\n0.0523\n0.3516\n10.040\n0.4573\n0.0404\n0.3529\n12.406\n0.6169\n0.0901\n0.6347\n9.650\n4\n0.5989\n0.0611\n0.5581\n9.627\n0.5710\n0.0541\n0.3706\n10.086\n0.4688\n0.0481\n0.3617\n11.994\n0.6231\n0.0886\n0.6731\n9.575\n5\n0.5891\n0.0627\n0.5852\n9.870\n0.5705\n0.0505\n0.3342\n10.122\n0.4697\n0.0490\n0.5122\n12.179\n0.6268\n0.0915\n0.6774\n9.537\nAverage\n0.6000\n0.0639\n0.5596\n9.618\n0.5724\n0.0527\n0.3526\n10.069\n0.4713\n0.0460\n0.3949\n12.084\n0.6207\n0.0871\n0.6618\n9.602\nTable 18: Complete results on OTD2 for historical events ordering.",
    "pdf_filename": "TSPRank_Bridging_Pairwise_and_Listwise_Methods_with_a_Bilinear_Travelling_Salesman_Model.pdf"
}